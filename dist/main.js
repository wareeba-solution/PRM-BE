/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   fixSwaggerCircularDependencies: () => (/* binding */ fixSwaggerCircularDependencies)
/* harmony export */ });
const fixSwaggerCircularDependencies = () => {
    try {
        console.log('Applied circular dependency fixes for Swagger');
    }
    catch (e) {
        console.warn('Failed to apply Swagger fixes:', e);
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    fixSwaggerCircularDependencies
});


/***/ }),
/* 2 */
/***/ ((module) => {

module.exports = require("@nestjs/core");

/***/ }),
/* 3 */
/***/ ((module) => {

module.exports = require("@nestjs/common");

/***/ }),
/* 4 */
/***/ ((module) => {

module.exports = require("@nestjs/config");

/***/ }),
/* 5 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppModule: () => (/* binding */ AppModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_throttler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7);
/* harmony import */ var _nestjs_throttler__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_throttler__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _nestjs_schedule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9);
/* harmony import */ var _nestjs_schedule__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_nestjs_schedule__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _app_controller__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(10);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(12);
/* harmony import */ var _modules_users_users_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(14);
/* harmony import */ var _modules_auth_auth_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(118);
/* harmony import */ var _modules_organizations_organizations_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(104);
/* harmony import */ var _modules_contacts_contacts_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(144);
/* harmony import */ var _modules_appointments_appointments_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(156);
/* harmony import */ var _modules_tickets_tickets_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(157);
/* harmony import */ var _modules_messages_messages_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(191);
/* harmony import */ var _modules_notifications_notifications_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(89);
/* harmony import */ var _modules_domain_domain_module__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(210);
/* harmony import */ var _config_app_config__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(212);
/* harmony import */ var _config_database_config__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(214);
/* harmony import */ var _config_redis_config__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(215);
/* harmony import */ var _config_mail_config__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(216);
/* harmony import */ var _config_jwt_config__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(218);
/* harmony import */ var _common_filters_http_exception_filter__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(219);
/* harmony import */ var _common_interceptors_transform_interceptor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(220);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


























let AppModule = class AppModule {
};
AppModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigModule.forRoot({
                isGlobal: true,
                load: [_config_app_config__WEBPACK_IMPORTED_MODULE_18__["default"], _config_database_config__WEBPACK_IMPORTED_MODULE_19__["default"], _config_redis_config__WEBPACK_IMPORTED_MODULE_20__["default"], _config_mail_config__WEBPACK_IMPORTED_MODULE_21__["default"], _config_jwt_config__WEBPACK_IMPORTED_MODULE_22__["default"]],
            }),
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.TypeOrmModule.forRootAsync({
                imports: [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigModule],
                inject: [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService],
                useFactory: (configService) => ({
                    type: 'postgres',
                    host: configService.get('database.host', 'localhost'),
                    port: configService.get('database.port', 5432),
                    username: configService.get('database.username', 'postgres'),
                    password: configService.get('database.password', 'postgres'),
                    database: configService.get('database.name', 'prm_db'),
                    autoLoadEntities: true,
                    synchronize: configService.get('database.synchronize', false),
                    logging: ["error", "schema"],
                }),
            }),
            _nestjs_throttler__WEBPACK_IMPORTED_MODULE_3__.ThrottlerModule.forRoot({
                throttlers: [
                    {
                        limit: 10,
                        ttl: 60000,
                    },
                ],
            }),
            _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__.EventEmitterModule.forRoot({
                wildcard: true,
                delimiter: '.',
                maxListeners: 20,
                verboseMemoryLeak: true,
            }),
            _nestjs_schedule__WEBPACK_IMPORTED_MODULE_5__.ScheduleModule.forRoot(),
            _modules_users_users_module__WEBPACK_IMPORTED_MODULE_9__.UsersModule,
            _modules_auth_auth_module__WEBPACK_IMPORTED_MODULE_10__.AuthModule,
            _modules_organizations_organizations_module__WEBPACK_IMPORTED_MODULE_11__.OrganizationsModule,
            _modules_contacts_contacts_module__WEBPACK_IMPORTED_MODULE_12__.ContactsModule,
            _modules_appointments_appointments_module__WEBPACK_IMPORTED_MODULE_13__.AppointmentsModule,
            _modules_tickets_tickets_module__WEBPACK_IMPORTED_MODULE_14__.TicketsModule,
            _modules_messages_messages_module__WEBPACK_IMPORTED_MODULE_15__.MessagesModule,
            _modules_notifications_notifications_module__WEBPACK_IMPORTED_MODULE_16__.NotificationsModule,
            _modules_domain_domain_module__WEBPACK_IMPORTED_MODULE_17__.DomainModule,
        ],
        controllers: [_app_controller__WEBPACK_IMPORTED_MODULE_7__.AppController],
        providers: [
            _app_service__WEBPACK_IMPORTED_MODULE_8__.AppService,
            {
                provide: _nestjs_core__WEBPACK_IMPORTED_MODULE_6__.APP_FILTER,
                useClass: _common_filters_http_exception_filter__WEBPACK_IMPORTED_MODULE_23__.HttpExceptionFilter,
            },
            {
                provide: _nestjs_core__WEBPACK_IMPORTED_MODULE_6__.APP_INTERCEPTOR,
                useClass: _common_interceptors_transform_interceptor__WEBPACK_IMPORTED_MODULE_24__.TransformInterceptor,
            },
            {
                provide: _nestjs_core__WEBPACK_IMPORTED_MODULE_6__.APP_GUARD,
                useClass: _nestjs_throttler__WEBPACK_IMPORTED_MODULE_3__.ThrottlerGuard,
            },
        ],
    })
], AppModule);



/***/ }),
/* 6 */
/***/ ((module) => {

module.exports = require("@nestjs/typeorm");

/***/ }),
/* 7 */
/***/ ((module) => {

module.exports = require("@nestjs/throttler");

/***/ }),
/* 8 */
/***/ ((module) => {

module.exports = require("@nestjs/event-emitter");

/***/ }),
/* 9 */
/***/ ((module) => {

module.exports = require("@nestjs/schedule");

/***/ }),
/* 10 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppController: () => (/* binding */ AppController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let AppController = class AppController {
    constructor(appService) {
        this.appService = appService;
    }
    getInfo() {
        return {
            name: 'Patient Relationship Manager',
            version: process.env.APP_VERSION || '1.0.0',
            environment: process.env.NODE_ENV || 'development',
            timestamp: new Date().toISOString(),
        };
    }
    async healthCheck() {
        const health = await this.appService.checkHealth();
        return {
            status: health.isHealthy ? 'healthy' : 'unhealthy',
            timestamp: new Date().toISOString(),
            services: health.services,
            uptime: process.uptime(),
            memory: process.memoryUsage(),
        };
    }
    ping() {
        return { message: 'pong', timestamp: new Date().toISOString() };
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get application info' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200, description: 'Application info retrieved successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], AppController.prototype, "getInfo", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('health'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Health check endpoint' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200, description: 'System is healthy' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], AppController.prototype, "healthCheck", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('ping'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Simple ping endpoint' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200, description: 'Pong' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], AppController.prototype, "ping", null);
AppController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('System'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)(),
    __metadata("design:paramtypes", [_app_service__WEBPACK_IMPORTED_MODULE_2__.AppService])
], AppController);



/***/ }),
/* 11 */
/***/ ((module) => {

module.exports = require("@nestjs/swagger");

/***/ }),
/* 12 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppService: () => (/* binding */ AppService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13);
/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ioredis__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



let AppService = class AppService {
    constructor(configService) {
        this.configService = configService;
        this.redis = new ioredis__WEBPACK_IMPORTED_MODULE_2__.Redis({
            host: this.configService.get('redis.host'),
            port: this.configService.get('redis.port'),
            password: this.configService.get('redis.password'),
        });
    }
    async checkHealth() {
        const services = {
            database: await this.checkDatabase(),
            redis: await this.checkRedis(),
            queues: await this.checkQueuesMock(),
            memory: this.checkMemory(),
        };
        const isHealthy = Object.values(services).every(service => service.status === 'healthy');
        return {
            isHealthy,
            services,
            timestamp: new Date().toISOString(),
        };
    }
    async checkDatabase() {
        try {
            const result = await this.checkDatabaseQuery();
            return {
                status: 'healthy',
                latency: result.latency,
            };
        }
        catch (error) {
            return {
                status: 'unhealthy',
                error: error.message,
            };
        }
    }
    async checkDatabaseQuery() {
        const startTime = Date.now();
        await this.configService.get('database');
        const latency = Date.now() - startTime;
        return { latency };
    }
    async checkRedis() {
        try {
            const startTime = Date.now();
            await this.redis.ping();
            const latency = Date.now() - startTime;
            return {
                status: 'healthy',
                latency,
            };
        }
        catch (error) {
            return {
                status: 'unhealthy',
                error: error.message,
            };
        }
    }
    async checkQueuesMock() {
        return {
            status: 'healthy',
            queues: {
                notifications: {
                    status: 'healthy',
                    metrics: {
                        active: 0,
                        waiting: 0,
                        completed: 0,
                        failed: 0,
                    },
                },
                messages: {
                    status: 'healthy',
                    metrics: {
                        active: 0,
                        waiting: 0,
                        completed: 0,
                        failed: 0,
                    },
                },
            },
        };
    }
    checkMemory() {
        const memory = process.memoryUsage();
        const memoryThreshold = this.configService.get('app.memoryThreshold') || 0.9;
        const isHealthy = memory.heapUsed / memory.heapTotal < memoryThreshold;
        return {
            status: isHealthy ? 'healthy' : 'warning',
            metrics: {
                heapUsed: this.formatBytes(memory.heapUsed),
                heapTotal: this.formatBytes(memory.heapTotal),
                rss: this.formatBytes(memory.rss),
                external: this.formatBytes(memory.external),
            },
            usage: (memory.heapUsed / memory.heapTotal * 100).toFixed(2) + '%',
        };
    }
    formatBytes(bytes) {
        const units = ['B', 'KB', 'MB', 'GB'];
        let size = bytes;
        let unitIndex = 0;
        while (size >= 1024 && unitIndex < units.length - 1) {
            size /= 1024;
            unitIndex++;
        }
        return `${size.toFixed(2)}${units[unitIndex]}`;
    }
};
AppService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService])
], AppService);



/***/ }),
/* 13 */
/***/ ((module) => {

module.exports = require("ioredis");

/***/ }),
/* 14 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UsersModule: () => (/* binding */ UsersModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _controllers_users_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15);
/* harmony import */ var _services_users_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45);
/* harmony import */ var _services_user_activity_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(83);
/* harmony import */ var _entities_user_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(21);
/* harmony import */ var _entities_user_activity_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(42);
/* harmony import */ var _entities_user_session_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(84);
/* harmony import */ var _listeners_user_listener__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(85);
/* harmony import */ var _listeners_user_activity_listener__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(88);
/* harmony import */ var _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(89);
/* harmony import */ var _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(104);
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(118);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(49);
/* harmony import */ var _shared_services_audit_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(86);
/* harmony import */ var _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(58);
/* harmony import */ var _email_services_email_template_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(140);
/* harmony import */ var _notifications_entities_email_template_entity__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(53);
/* harmony import */ var _notifications_entities_email_log_entity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(54);
/* harmony import */ var _notifications_entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(56);
/* harmony import */ var _domain_entities_domain_entity__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(59);
/* harmony import */ var _domain_entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(61);
/* harmony import */ var _audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(87);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
























let UsersModule = class UsersModule {
};
UsersModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_user_entity__WEBPACK_IMPORTED_MODULE_6__.User,
                _entities_user_activity_entity__WEBPACK_IMPORTED_MODULE_7__.UserActivity,
                _entities_user_session_entity__WEBPACK_IMPORTED_MODULE_8__.UserSession,
                _notifications_entities_email_template_entity__WEBPACK_IMPORTED_MODULE_18__.EmailTemplate,
                _audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_23__.AuditLog,
                _notifications_entities_email_log_entity__WEBPACK_IMPORTED_MODULE_19__.EmailLog,
                _notifications_entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_20__.EmailQueue,
                _domain_entities_domain_entity__WEBPACK_IMPORTED_MODULE_21__.Domain,
                _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_16__.DomainVerificationService,
                _domain_entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_22__.DomainVerificationToken
            ]),
            _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitterModule.forRoot({
                wildcard: true,
                maxListeners: 20,
                verboseMemoryLeak: true,
            }),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_11__.NotificationsModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_12__.OrganizationsModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _auth_auth_module__WEBPACK_IMPORTED_MODULE_13__.AuthModule)
        ],
        controllers: [_controllers_users_controller__WEBPACK_IMPORTED_MODULE_3__.UsersController],
        providers: [
            _services_users_service__WEBPACK_IMPORTED_MODULE_4__.UsersService,
            _services_user_activity_service__WEBPACK_IMPORTED_MODULE_5__.UserActivityService,
            _listeners_user_listener__WEBPACK_IMPORTED_MODULE_9__.UserEventListener,
            _listeners_user_activity_listener__WEBPACK_IMPORTED_MODULE_10__.UserActivityListener,
            _shared_services_email_service__WEBPACK_IMPORTED_MODULE_14__.EmailService,
            _shared_services_audit_service__WEBPACK_IMPORTED_MODULE_15__.AuditService,
            _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_16__.DomainVerificationService,
            _email_services_email_template_service__WEBPACK_IMPORTED_MODULE_17__.EmailTemplateService,
        ],
        exports: [_services_users_service__WEBPACK_IMPORTED_MODULE_4__.UsersService]
    })
], UsersModule);



/***/ }),
/* 15 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UsersController: () => (/* binding */ UsersController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74);
/* harmony import */ var _auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75);
/* harmony import */ var _enums_role_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
/* harmony import */ var _services_users_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45);
/* harmony import */ var _dto_create_user_dto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(77);
/* harmony import */ var _dto_update_user_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(78);
/* harmony import */ var _dto_user_query_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(79);
/* harmony import */ var _dto_update_password_dto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(80);
/* harmony import */ var _dto_update_profile_dto__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(81);
/* harmony import */ var _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(82);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};














let UsersController = class UsersController {
    constructor(usersService) {
        this.usersService = usersService;
    }
    async create(createUserDto, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        if (!req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('User context is required');
        }
        return this.usersService.create(Object.assign(Object.assign({}, createUserDto), { organizationId: req.organization.id, createdBy: req.user.id }));
    }
    async findAll(query, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        return this.usersService.findAll(Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async getProfile(req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        if (!req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('User context is required');
        }
        return this.usersService.findOne(req.user.id, req.organization.id);
    }
    async updateProfile(updateProfileDto, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        if (!req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('User context is required');
        }
        return this.usersService.updateProfile(req.user.id, Object.assign(Object.assign({}, updateProfileDto), { organizationId: req.organization.id }));
    }
    async updatePassword(updatePasswordDto, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        if (!req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('User context is required');
        }
        return this.usersService.updatePassword(req.user.id, Object.assign(Object.assign({}, updatePasswordDto), { organizationId: req.organization.id }));
    }
    async findOne(id, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        const user = await this.usersService.findOne(id, req.organization.id);
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.NotFoundException('User not found');
        }
        return user;
    }
    async update(id, updateUserDto, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        if (!req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('User context is required');
        }
        if (updateUserDto.role && updateUserDto.role !== _enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN) {
            const admins = await this.usersService.getAdminCount(req.organization.id);
            if (admins === 1) {
                const currentUser = await this.usersService.findOne(id, req.organization.id);
                if (currentUser.role === _enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN) {
                    throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Cannot demote the last administrator');
                }
            }
        }
        return this.usersService.update(id, Object.assign(Object.assign({}, updateUserDto), { organizationId: req.organization.id, updatedBy: req.user.id }));
    }
    async remove(id, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        const user = await this.usersService.findOne(id, req.organization.id);
        if (user.role === _enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN) {
            const admins = await this.usersService.getAdminCount(req.organization.id);
            if (admins === 1) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Cannot delete the last administrator');
            }
        }
        await this.usersService.remove(id, req.organization.id);
    }
    async activate(id, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        return this.usersService.activate(id, req.organization.id);
    }
    async deactivate(id, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        const user = await this.usersService.findOne(id, req.organization.id);
        if (user.role === _enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN) {
            const admins = await this.usersService.getAdminCount(req.organization.id);
            if (admins === 1) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Cannot deactivate the last administrator');
            }
        }
        return this.usersService.deactivate(id, req.organization.id);
    }
    async getActivity(id, query, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        return this.usersService.getActivity(id, Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async getPermissions(id, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Organization context is required');
        }
        return this.usersService.getPermissions(id, req.organization.id);
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Create new user' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED,
        description: 'User created successfully',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_create_user_dto__WEBPACK_IMPORTED_MODULE_7__.CreateUserDto, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "create", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get all users' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'Return all users',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto,
        isArray: true
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_user_query_dto__WEBPACK_IMPORTED_MODULE_9__.UserQueryDto, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "findAll", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('profile'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get current user profile' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'Return current user profile',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "getProfile", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)('profile'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update current user profile' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'Profile updated successfully',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_update_profile_dto__WEBPACK_IMPORTED_MODULE_11__.UpdateProfileDto, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "updateProfile", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)('profile/password'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update current user password' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'Password updated successfully',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_update_password_dto__WEBPACK_IMPORTED_MODULE_10__.UpdatePasswordDto, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "updatePassword", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get user by id' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'Return user details',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "findOne", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update user' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'User updated successfully',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_user_dto__WEBPACK_IMPORTED_MODULE_8__.UpdateUserDto, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "update", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Delete user' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.NO_CONTENT, description: 'User deleted successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "remove", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id/activate'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Activate user' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'User activated successfully',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "activate", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id/deactivate'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Deactivate user' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'User deactivated successfully',
        type: _swagger_dtos_simple_user_dto__WEBPACK_IMPORTED_MODULE_12__.SimpleUserDto
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "deactivate", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/activity'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get user activity' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'Return user activity',
        schema: {
            type: 'object',
            properties: {
                activities: {
                    type: 'array',
                    items: {
                        type: 'object',
                        properties: {
                            id: { type: 'string' },
                            action: { type: 'string' },
                            timestamp: { type: 'string', format: 'date-time' }
                        }
                    }
                },
                total: { type: 'number' }
            }
        }
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: [(__webpack_require__(42).UserActivity)] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "getActivity", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/permissions'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get user permissions' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({
        status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK,
        description: 'Return user permissions',
        schema: {
            type: 'array',
            items: {
                type: 'string'
            }
        }
    }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: [String] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], UsersController.prototype, "getPermissions", null);
UsersController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Users'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('users'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__.JwtAuthGuard, _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__.RolesGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    __metadata("design:paramtypes", [_services_users_service__WEBPACK_IMPORTED_MODULE_6__.UsersService])
], UsersController);



/***/ }),
/* 16 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JwtAuthGuard: () => (/* binding */ JwtAuthGuard)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_passport__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);
/* harmony import */ var _decorators_public_decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var JwtAuthGuard_1;





let JwtAuthGuard = JwtAuthGuard_1 = class JwtAuthGuard extends (0,_nestjs_passport__WEBPACK_IMPORTED_MODULE_1__.AuthGuard)('jwt') {
    constructor(reflector, authService) {
        super();
        this.reflector = reflector;
        this.authService = authService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(JwtAuthGuard_1.name);
    }
    canActivate(context) {
        const isPublic = this.reflector.getAllAndOverride(_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_4__.IS_PUBLIC_KEY, [
            context.getHandler(),
            context.getClass(),
        ]);
        if (isPublic) {
            return true;
        }
        return super.canActivate(context);
    }
    handleRequest(err, user, info, context) {
        const request = context.switchToHttp().getRequest();
        const token = this.extractTokenFromHeader(request);
        if (err || !user) {
            this.logger.warn(`Authentication failed: ${(err === null || err === void 0 ? void 0 : err.message) || 'No user found'}`);
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException((err === null || err === void 0 ? void 0 : err.message) || 'Invalid or expired token');
        }
        if (token && this.authService.isTokenBlacklisted(token)) {
            this.logger.warn(`Blacklisted token used for user ${user.id}`);
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Token has been revoked');
        }
        if (!user.isActive) {
            this.logger.warn(`Inactive user ${user.id} attempted to access the system`);
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User account is inactive');
        }
        if (this.authService.requireEmailVerification && !user.emailVerified) {
            this.logger.warn(`Unverified user ${user.id} attempted to access the system`);
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Email verification required');
        }
        request.tokenMetadata = {
            token,
            iat: user.iat,
            exp: user.exp,
        };
        this.logger.debug(`User ${user.id} successfully authenticated`);
        return user;
    }
    extractTokenFromHeader(request) {
        var _a, _b;
        const [type, token] = (_b = (_a = request.headers.authorization) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];
        return type === 'Bearer' ? token : undefined;
    }
};
JwtAuthGuard = JwtAuthGuard_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_core__WEBPACK_IMPORTED_MODULE_2__.Reflector,
        _services_auth_service__WEBPACK_IMPORTED_MODULE_3__.AuthService])
], JwtAuthGuard);



/***/ }),
/* 17 */
/***/ ((module) => {

module.exports = require("@nestjs/passport");

/***/ }),
/* 18 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthService: () => (/* binding */ AuthService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_jwt__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21);
/* harmony import */ var _entities_refresh_token_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(43);
/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(44);
/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(28);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(22);
/* harmony import */ var _users_services_users_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(45);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(72);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_11__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};












let AuthService = class AuthService {
    constructor(userRepository, refreshTokenRepository, organizationRepository, jwtService, usersService, configService) {
        this.userRepository = userRepository;
        this.refreshTokenRepository = refreshTokenRepository;
        this.organizationRepository = organizationRepository;
        this.jwtService = jwtService;
        this.usersService = usersService;
        this.configService = configService;
    }
    isTokenBlacklisted(token) {
        return false;
    }
    get requireEmailVerification() {
        var _a, _b;
        const requireVerification = (_b = (_a = this.configService) === null || _a === void 0 ? void 0 : _a.get('EMAIL_VERIFICATION_REQUIRED')) !== null && _b !== void 0 ? _b : true;
        return requireVerification;
    }
    async checkOrganizationAccess(userId, organizationId) {
        const user = await this.usersService.findById(userId);
        return (user === null || user === void 0 ? void 0 : user.organizationId) === organizationId;
    }
    async getUserPermissions(userId) {
        return ['permission1', 'permission2'];
    }
    async checkResourceOwnership(userId, resourceId, resourceType) {
        return true;
    }
    async validateUser(email, password) {
        const user = await this.userRepository.findOne({
            where: { email },
            relations: ['organization'],
        });
        if (user && (await (0,bcrypt__WEBPACK_IMPORTED_MODULE_6__.compare)(password, user.password))) {
            const { password: _password } = user, result = __rest(user, ["password"]);
            return result;
        }
        return null;
    }
    async login(loginDto, metadata) {
        var _a;
        const user = await this.validateUser(loginDto.email, loginDto.password);
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Invalid credentials');
        }
        const organization = await this.organizationRepository.findOne({
            where: { id: (_a = user.organization) === null || _a === void 0 ? void 0 : _a.id },
        });
        if (!organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Organization not found');
        }
        if (!organization.isSubscriptionActive) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Organization subscription is inactive');
        }
        const payload = {
            sub: user.id,
            email: user.email,
            role: user.role,
            organizationId: organization.id,
            permissions: [],
            sessionId: (0,uuid__WEBPACK_IMPORTED_MODULE_10__.v4)(),
        };
        const accessToken = this.jwtService.sign(payload);
        const refreshToken = await this.generateRefreshToken(user.id, metadata);
        return {
            accessToken,
            refreshToken: refreshToken.token,
            user: {
                id: user.id,
                email: user.email,
                role: user.role,
                organizationId: organization.id,
            },
        };
    }
    async register(registerDto, metadata) {
        const existingUser = await this.userRepository.findOne({
            where: { email: registerDto.user.email },
        });
        if (existingUser) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Email already registered');
        }
        const organization = new _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_7__.Organization();
        organization.name = registerDto.organization.name;
        organization.status = _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_7__.OrganizationStatus.ACTIVE;
        organization.isSubscriptionActive = true;
        if (registerDto.organization.website) {
            organization.website = registerDto.organization.website;
        }
        if (registerDto.organization.phone) {
            organization.contactInfo = {
                phone: registerDto.organization.phone
            };
        }
        if (registerDto.organization.address) {
            organization.contactInfo = Object.assign(Object.assign({}, organization.contactInfo), { address: {
                    street: registerDto.organization.address.street,
                    city: registerDto.organization.address.city,
                    state: registerDto.organization.address.state,
                    postalCode: registerDto.organization.address.postalCode,
                    country: registerDto.organization.address.country,
                } });
        }
        organization.slug = this.generateSlug(registerDto.organization.name);
        const savedOrganization = await this.organizationRepository.save(organization);
        const hashedPassword = await (0,bcrypt__WEBPACK_IMPORTED_MODULE_6__.hash)(registerDto.user.password, 10);
        const user = new _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_4__.User();
        user.firstName = registerDto.user.firstName;
        user.lastName = registerDto.user.lastName;
        user.email = registerDto.user.email;
        user.password = hashedPassword;
        user.role = registerDto.user.role || _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_8__.Role.ADMIN;
        user.organizationId = savedOrganization.id;
        user.createdById = savedOrganization.id;
        if (registerDto.user.phone) {
            user.phoneNumber = registerDto.user.phone;
        }
        const savedUser = await this.userRepository.save(user);
        savedOrganization.createdById = savedUser.id;
        await this.organizationRepository.save(savedOrganization);
        const payload = {
            sub: savedUser.id,
            email: savedUser.email,
            role: savedUser.role,
            organizationId: savedOrganization.id,
            permissions: [],
            sessionId: (0,uuid__WEBPACK_IMPORTED_MODULE_10__.v4)(),
        };
        const accessToken = this.jwtService.sign(payload);
        const refreshToken = await this.generateRefreshToken(savedUser.id, metadata);
        return {
            accessToken,
            refreshToken: refreshToken.token,
            user: {
                id: savedUser.id,
                email: savedUser.email,
                firstName: savedUser.firstName,
                lastName: savedUser.lastName,
                role: savedUser.role,
                organizationId: savedOrganization.id,
            },
            organization: {
                id: savedOrganization.id,
                name: savedOrganization.name,
                status: savedOrganization.status,
            },
        };
    }
    async refreshToken(token) {
        const refreshToken = await this.refreshTokenRepository.findOne({
            where: { token },
            relations: ['user'],
        });
        if (!refreshToken || refreshToken.isExpired() || refreshToken.isRevoked) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Invalid refresh token');
        }
        refreshToken.updateLastUsed();
        await this.refreshTokenRepository.save(refreshToken);
        const user = await this.userRepository.findOne({
            where: { id: refreshToken.userId }
        });
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User not found');
        }
        const payload = {
            sub: refreshToken.userId,
            email: user.email,
            role: user.role,
            organizationId: refreshToken.organizationId || user.organizationId,
            permissions: [],
            sessionId: (0,uuid__WEBPACK_IMPORTED_MODULE_10__.v4)(),
        };
        const accessToken = this.jwtService.sign(payload);
        return { accessToken };
    }
    async generateRefreshToken(userId, metadata) {
        const tokenString = (0,uuid__WEBPACK_IMPORTED_MODULE_10__.v4)();
        const user = await this.userRepository.findOne({ where: { id: userId } });
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User not found');
        }
        const token = new _entities_refresh_token_entity__WEBPACK_IMPORTED_MODULE_5__.RefreshToken();
        token.userId = userId;
        token.organizationId = user.organizationId;
        token.token = tokenString;
        token.expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);
        token.userAgent = metadata.userAgent;
        token.ipAddress = metadata.ip;
        token.metadata = {
            platform: this.extractPlatform(metadata.userAgent),
            browser: this.extractBrowser(metadata.userAgent),
            lastUsed: new Date(),
        };
        return this.refreshTokenRepository.save(token);
    }
    async logout(userId) {
        await this.refreshTokenRepository.update({ userId }, { isRevoked: true, revokedAt: new Date(), revokedReason: 'User logout' });
        return { message: 'Logged out successfully' };
    }
    async validateOrganizationAccess(userId, organizationId) {
        const user = await this.userRepository.findOne({
            where: { id: userId },
            relations: ['organization'],
        });
        return (user === null || user === void 0 ? void 0 : user.organizationId) === organizationId;
    }
    generateSlug(name) {
        return name
            .toLowerCase()
            .replace(/\s+/g, '-')
            .replace(/[^a-z0-9-]/g, '')
            .slice(0, 50) + '-' + Math.floor(Math.random() * 10000);
    }
    extractPlatform(userAgent) {
        if (userAgent.includes('Windows'))
            return 'Windows';
        if (userAgent.includes('Mac'))
            return 'Mac';
        if (userAgent.includes('iPhone') || userAgent.includes('iPad'))
            return 'iOS';
        if (userAgent.includes('Android'))
            return 'Android';
        if (userAgent.includes('Linux'))
            return 'Linux';
        return 'Unknown';
    }
    extractBrowser(userAgent) {
        if (userAgent.includes('Chrome') && !userAgent.includes('Edg'))
            return 'Chrome';
        if (userAgent.includes('Firefox'))
            return 'Firefox';
        if (userAgent.includes('Safari') && !userAgent.includes('Chrome'))
            return 'Safari';
        if (userAgent.includes('Edg'))
            return 'Edge';
        if (userAgent.includes('Opera') || userAgent.includes('OPR'))
            return 'Opera';
        return 'Unknown';
    }
    async sendPasswordResetEmail(email) {
        const user = await this.userRepository.findOne({ where: { email } });
        if (!user) {
            return;
        }
    }
    async changePassword(token, newPassword) {
    }
    async confirmEmail(token) {
    }
    async sendVerificationEmail(userId) {
        const user = await this.userRepository.findOne({ where: { id: userId } });
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User not found');
        }
    }
};
AuthService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_4__.User)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_refresh_token_entity__WEBPACK_IMPORTED_MODULE_5__.RefreshToken)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_7__.Organization)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _nestjs_jwt__WEBPACK_IMPORTED_MODULE_1__.JwtService,
        _users_services_users_service__WEBPACK_IMPORTED_MODULE_9__.UsersService,
        _nestjs_config__WEBPACK_IMPORTED_MODULE_11__.ConfigService])
], AuthService);



/***/ }),
/* 19 */
/***/ ((module) => {

module.exports = require("@nestjs/jwt");

/***/ }),
/* 20 */
/***/ ((module) => {

module.exports = require("typeorm");

/***/ }),
/* 21 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   User: () => (/* binding */ User)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _enums_role_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22);
/* harmony import */ var _tickets_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(23);
/* harmony import */ var _messages_entities_message_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29);
/* harmony import */ var _appointments_entities_appointment_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(35);
/* harmony import */ var _notifications_entities_notification_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39);
/* harmony import */ var _user_activity_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(42);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









let User = class User {
    get fullName() {
        return `${this.firstName} ${this.lastName}`;
    }
    get isAvailable() {
        return this.isActive && !this.isLocked;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, mobilePhone: { required: false, type: () => String }, organizationId: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, phoneNumber: { required: false, type: () => String }, role: { required: true, enum: (__webpack_require__(22).Role) }, title: { required: false, type: () => String }, department: { required: false, type: () => String }, employeeId: { required: false, type: () => String }, address: { required: false, type: () => ({ street: { required: true, type: () => String }, city: { required: true, type: () => String }, state: { required: true, type: () => String }, postalCode: { required: true, type: () => String }, country: { required: true, type: () => String } }) }, emergencyContact: { required: false, type: () => ({ name: { required: true, type: () => String }, relationship: { required: true, type: () => String }, phone: { required: true, type: () => String }, address: { required: false, type: () => String } }) }, licenseNumber: { required: false, type: () => String }, specialization: { required: false, type: () => String }, qualifications: { required: false, type: () => [String] }, certifications: { required: false, type: () => [String] }, isOnCall: { required: true, type: () => Boolean }, languages: { required: false, type: () => [String] }, requirePasswordChange: { required: true, type: () => Boolean }, preferences: { required: false, type: () => ({ theme: { required: false, type: () => String }, notifications: { required: false, type: () => ({ email: { required: false, type: () => Boolean }, sms: { required: false, type: () => Boolean }, inApp: { required: false, type: () => Boolean } }) }, timezone: { required: false, type: () => String }, language: { required: false, type: () => String } }) }, metadata: { required: false, type: () => Object }, isActive: { required: true, type: () => Boolean }, isLocked: { required: true, type: () => Boolean }, isEmailVerified: { required: true, type: () => Boolean }, isPhoneVerified: { required: true, type: () => Boolean }, lastLoginAt: { required: false, type: () => Date }, lastActiveAt: { required: false, type: () => Date }, deviceTokens: { required: false, type: () => [String] }, avatar: { required: false, type: () => String }, signature: { required: false, type: () => String }, createdById: { required: true, type: () => String }, updatedById: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date }, organization: { required: true, type: () => Object }, createdBy: { required: true, type: () => (__webpack_require__(21).User) }, updatedBy: { required: false, type: () => (__webpack_require__(21).User) }, assignedTickets: { required: true, type: () => [(__webpack_require__(23).Ticket)] }, messages: { required: true, type: () => [(__webpack_require__(29).Message)] }, appointments: { required: true, type: () => [(__webpack_require__(35).Appointment)] }, notifications: { required: true, type: () => [(__webpack_require__(39).Notification)] }, activities: { required: true, type: () => [(__webpack_require__(42).UserActivity)] } };
    }
};
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], User.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], User.prototype, "organizationId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], User.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], User.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ unique: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], User.prototype, "email", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], User.prototype, "password", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "phoneNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_role_enum__WEBPACK_IMPORTED_MODULE_2__.Role,
        default: _enums_role_enum__WEBPACK_IMPORTED_MODULE_2__.Role.STAFF
    }),
    __metadata("design:type", String)
], User.prototype, "role", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "department", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "employeeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], User.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], User.prototype, "emergencyContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "licenseNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "specialization", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], User.prototype, "qualifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], User.prototype, "certifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], User.prototype, "isOnCall", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], User.prototype, "languages", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], User.prototype, "requirePasswordChange", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], User.prototype, "preferences", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], User.prototype, "metadata", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], User.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], User.prototype, "isLocked", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], User.prototype, "isEmailVerified", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], User.prototype, "isPhoneVerified", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "lastLoginAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "lastActiveAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], User.prototype, "deviceTokens", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "avatar", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "signature", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], User.prototype, "createdById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], User.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], User.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], User.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Organization'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", Object)
], User.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => User, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'createdById' }),
    __metadata("design:type", Promise)
], User.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => User, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Promise)
], User.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _tickets_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_3__.Ticket, ticket => ticket.assignee, { lazy: true }),
    __metadata("design:type", Promise)
], User.prototype, "assignedTickets", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _messages_entities_message_entity__WEBPACK_IMPORTED_MODULE_4__.Message, message => message.sender, { lazy: true }),
    __metadata("design:type", Promise)
], User.prototype, "messages", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _appointments_entities_appointment_entity__WEBPACK_IMPORTED_MODULE_5__.Appointment, appointment => appointment.provider, { lazy: true }),
    __metadata("design:type", Promise)
], User.prototype, "appointments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _notifications_entities_notification_entity__WEBPACK_IMPORTED_MODULE_6__.Notification, notification => notification.user, { lazy: true }),
    __metadata("design:type", Promise)
], User.prototype, "notifications", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _user_activity_entity__WEBPACK_IMPORTED_MODULE_7__.UserActivity, activity => activity.user, { lazy: true }),
    __metadata("design:type", Promise)
], User.prototype, "activities", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [])
], User.prototype, "fullName", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], User.prototype, "isAvailable", null);
User = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('users'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'email']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'phoneNumber']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'role'])
], User);



/***/ }),
/* 22 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Role: () => (/* binding */ Role),
/* harmony export */   RoleHierarchy: () => (/* binding */ RoleHierarchy),
/* harmony export */   RolePermissions: () => (/* binding */ RolePermissions),
/* harmony export */   getRoleDisplayName: () => (/* binding */ getRoleDisplayName),
/* harmony export */   hasHigherOrEqualRole: () => (/* binding */ hasHigherOrEqualRole),
/* harmony export */   hasPermission: () => (/* binding */ hasPermission)
/* harmony export */ });
var Role;
(function (Role) {
    Role["SUPER_ADMIN"] = "SUPER_ADMIN";
    Role["ADMIN"] = "ADMIN";
    Role["MANAGER"] = "MANAGER";
    Role["DOCTOR"] = "DOCTOR";
    Role["NURSE"] = "NURSE";
    Role["RECEPTIONIST"] = "RECEPTIONIST";
    Role["PATIENT"] = "PATIENT";
    Role["USER"] = "USER";
    Role["STAFF"] = "STAFF";
    Role["AGENT"] = "AGENT";
    Role["SUPERVISOR"] = "SUPERVISOR";
    Role["CLIENT"] = "CLIENT";
    Role["GUEST"] = "GUEST";
})(Role || (Role = {}));
const RoleHierarchy = {
    [Role.SUPER_ADMIN]: 100,
    [Role.ADMIN]: 90,
    [Role.MANAGER]: 80,
    [Role.DOCTOR]: 70,
    [Role.NURSE]: 60,
    [Role.RECEPTIONIST]: 50,
    [Role.PATIENT]: 20,
    [Role.USER]: 10,
    [Role.STAFF]: 0,
    [Role.AGENT]: 0,
    [Role.SUPERVISOR]: 0,
    [Role.CLIENT]: 0,
    [Role.GUEST]: 0
};
const RolePermissions = {
    [Role.SUPER_ADMIN]: ['*'],
    [Role.ADMIN]: [
        'user:manage',
        'department:manage',
        'organization:manage',
        'appointment:manage',
        'patient:manage',
        'report:view'
    ],
    [Role.MANAGER]: [
        'department:view',
        'department:edit',
        'user:view',
        'appointment:manage',
        'patient:view',
        'report:view'
    ],
    [Role.DOCTOR]: [
        'appointment:view',
        'appointment:edit',
        'patient:view',
        'patient:edit',
        'prescription:manage'
    ],
    [Role.NURSE]: [
        'appointment:view',
        'patient:view',
        'patient:edit',
        'vitals:manage'
    ],
    [Role.RECEPTIONIST]: [
        'appointment:view',
        'appointment:schedule',
        'patient:view',
        'patient:register'
    ],
    [Role.PATIENT]: [
        'appointment:view',
        'appointment:schedule',
        'profile:edit'
    ],
    [Role.USER]: [
        'profile:view',
        'profile:edit'
    ],
    [Role.STAFF]: [],
    [Role.AGENT]: [],
    [Role.SUPERVISOR]: [],
    [Role.CLIENT]: [],
    [Role.GUEST]: []
};
function hasPermission(role, permission) {
    const permissions = RolePermissions[role];
    return permissions.includes('*') || permissions.includes(permission);
}
function hasHigherOrEqualRole(userRole, requiredRole) {
    return RoleHierarchy[userRole] >= RoleHierarchy[requiredRole];
}
function getRoleDisplayName(role) {
    return role.split('_')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
        .join(' ');
}


/***/ }),
/* 23 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Ticket: () => (/* binding */ Ticket)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24);
/* harmony import */ var _departments_entities_department_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(27);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





let Ticket = class Ticket {
    get isEscalated() {
        return !!this.escalatedAt;
    }
    get isResolved() {
        return !!this.resolvedAt;
    }
    get isClosed() {
        return !!this.closedAt;
    }
    get isReopened() {
        return !!this.reopenedAt;
    }
    get hasFirstResponse() {
        return !!this.firstResponseAt;
    }
    get responseTime() {
        if (!this.firstResponseAt)
            return null;
        return this.firstResponseAt.getTime() - this.createdAt.getTime();
    }
    get resolutionTime() {
        if (!this.resolvedAt)
            return null;
        return this.resolvedAt.getTime() - this.createdAt.getTime();
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(24).TicketType) }, priority: { required: true, enum: (__webpack_require__(24).TicketPriority) }, status: { required: true, enum: (__webpack_require__(24).TicketStatus) }, source: { required: true, enum: (__webpack_require__(24).TicketSource) }, contactId: { required: false, type: () => String }, departmentId: { required: false, type: () => String }, assigneeId: { required: false, type: () => String }, category: { required: false, type: () => String }, subCategory: { required: false, type: () => String }, tags: { required: false, type: () => [String] }, referenceNumber: { required: false, type: () => String }, relatedTicketId: { required: false, type: () => String }, isPrivate: { required: true, type: () => Boolean }, internalNotes: { required: false, type: () => String }, resolution: { required: false, type: () => String }, resolvedAt: { required: false, type: () => Date }, resolvedById: { required: false, type: () => String }, closedAt: { required: false, type: () => Date }, closedById: { required: false, type: () => String }, escalatedAt: { required: false, type: () => Date }, escalatedById: { required: false, type: () => String }, escalationReason: { required: false, type: () => String }, reopenedAt: { required: false, type: () => Date }, reopenedById: { required: false, type: () => String }, reopenReason: { required: false, type: () => String }, firstResponseAt: { required: false, type: () => Date }, lastActivityAt: { required: false, type: () => Date }, createdById: { required: true, type: () => String }, updatedById: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date }, organization: { required: true, type: () => Object }, contact: { required: false, type: () => Object }, department: { required: false, type: () => (__webpack_require__(27).Department) }, assignee: { required: false, type: () => Object }, createdBy: { required: true, type: () => Object }, updatedBy: { required: false, type: () => Object }, resolvedBy: { required: false, type: () => Object }, closedBy: { required: false, type: () => Object }, escalatedBy: { required: false, type: () => Object }, reopenedBy: { required: false, type: () => Object }, relatedTicket: { required: false, type: () => Object }, comments: { required: true, type: () => [Object] }, attachments: { required: true, type: () => [Object] }, activities: { required: true, type: () => [Object] } };
    }
};
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Ticket.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Ticket.prototype, "organizationId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Ticket.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text' }),
    __metadata("design:type", String)
], Ticket.prototype, "description", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__.TicketType,
    }),
    __metadata("design:type", String)
], Ticket.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__.TicketPriority,
        default: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__.TicketPriority.NORMAL,
    }),
    __metadata("design:type", String)
], Ticket.prototype, "priority", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__.TicketStatus,
        default: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__.TicketStatus.OPEN,
    }),
    __metadata("design:type", String)
], Ticket.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__.TicketSource,
        default: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_2__.TicketSource.WEB,
    }),
    __metadata("design:type", String)
], Ticket.prototype, "source", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "contactId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "departmentId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "assigneeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "subCategory", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], Ticket.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "referenceNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "relatedTicketId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Ticket.prototype, "customFields", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Ticket.prototype, "isPrivate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "internalNotes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "resolution", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Ticket.prototype, "resolvedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "resolvedById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Ticket.prototype, "closedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "closedById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Ticket.prototype, "escalatedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "escalatedById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "escalationReason", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Ticket.prototype, "reopenedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "reopenedById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "reopenReason", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Ticket.prototype, "firstResponseAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Ticket.prototype, "lastActivityAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Ticket.prototype, "createdById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Ticket.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], Ticket.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], Ticket.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], Ticket.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Organization'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", Object)
], Ticket.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Contact'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'contactId' }),
    __metadata("design:type", Object)
], Ticket.prototype, "contact", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _departments_entities_department_entity__WEBPACK_IMPORTED_MODULE_3__.Department, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'departmentId' }),
    __metadata("design:type", Promise)
], Ticket.prototype, "department", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'assigneeId' }),
    __metadata("design:type", Object)
], Ticket.prototype, "assignee", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'createdById' }),
    __metadata("design:type", Object)
], Ticket.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Object)
], Ticket.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'resolvedById' }),
    __metadata("design:type", Object)
], Ticket.prototype, "resolvedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'closedById' }),
    __metadata("design:type", Object)
], Ticket.prototype, "closedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'escalatedById' }),
    __metadata("design:type", Object)
], Ticket.prototype, "escalatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'reopenedById' }),
    __metadata("design:type", Object)
], Ticket.prototype, "reopenedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Ticket'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'relatedTicketId' }),
    __metadata("design:type", Object)
], Ticket.prototype, "relatedTicket", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('TicketComment', 'ticket'),
    __metadata("design:type", Array)
], Ticket.prototype, "comments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('TicketAttachment', 'ticket'),
    __metadata("design:type", Array)
], Ticket.prototype, "attachments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('TicketActivity', 'ticket'),
    __metadata("design:type", Array)
], Ticket.prototype, "activities", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Ticket.prototype, "isEscalated", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Ticket.prototype, "isResolved", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Ticket.prototype, "isClosed", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Ticket.prototype, "isReopened", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Ticket.prototype, "hasFirstResponse", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [])
], Ticket.prototype, "responseTime", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [])
], Ticket.prototype, "resolutionTime", null);
Ticket = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('tickets'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'status']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'assigneeId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'contactId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'departmentId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'createdAt'])
], Ticket);



/***/ }),
/* 24 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateTicketDto: () => (/* binding */ CreateTicketDto),
/* harmony export */   TicketAttachment: () => (/* binding */ TicketAttachment),
/* harmony export */   TicketPriority: () => (/* binding */ TicketPriority),
/* harmony export */   TicketSource: () => (/* binding */ TicketSource),
/* harmony export */   TicketStatus: () => (/* binding */ TicketStatus),
/* harmony export */   TicketType: () => (/* binding */ TicketType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var TicketType;
(function (TicketType) {
    TicketType["GENERAL"] = "GENERAL";
    TicketType["TECHNICAL"] = "TECHNICAL";
    TicketType["BILLING"] = "BILLING";
    TicketType["MEDICAL"] = "MEDICAL";
    TicketType["APPOINTMENT"] = "APPOINTMENT";
    TicketType["ACCESS"] = "ACCESS";
    TicketType["COMPLAINT"] = "COMPLAINT";
    TicketType["FEEDBACK"] = "FEEDBACK";
})(TicketType || (TicketType = {}));
var TicketPriority;
(function (TicketPriority) {
    TicketPriority["LOW"] = "LOW";
    TicketPriority["NORMAL"] = "NORMAL";
    TicketPriority["HIGH"] = "HIGH";
    TicketPriority["URGENT"] = "URGENT";
})(TicketPriority || (TicketPriority = {}));
var TicketStatus;
(function (TicketStatus) {
    TicketStatus["OPEN"] = "OPEN";
    TicketStatus["IN_PROGRESS"] = "IN_PROGRESS";
    TicketStatus["PENDING"] = "PENDING";
    TicketStatus["RESOLVED"] = "RESOLVED";
    TicketStatus["CLOSED"] = "CLOSED";
    TicketStatus["ESCALATED"] = "ESCALATED";
    TicketStatus["REOPENED"] = "REOPENED";
    TicketStatus["DELETED"] = "DELETED";
})(TicketStatus || (TicketStatus = {}));
var TicketSource;
(function (TicketSource) {
    TicketSource["WEB"] = "WEB";
    TicketSource["MOBILE"] = "MOBILE";
    TicketSource["EMAIL"] = "EMAIL";
    TicketSource["PHONE"] = "PHONE";
    TicketSource["CHAT"] = "CHAT";
    TicketSource["SYSTEM"] = "SYSTEM";
})(TicketSource || (TicketSource = {}));
class TicketAttachment {
    static _OPENAPI_METADATA_FACTORY() {
        return { fileName: { required: true, type: () => String, maxLength: 255 }, fileType: { required: true, type: () => String, maxLength: 50 }, fileUrl: { required: true, type: () => String }, fileSize: { required: false, type: () => String }, description: { required: false, type: () => String, maxLength: 500 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(255),
    __metadata("design:type", String)
], TicketAttachment.prototype, "fileName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], TicketAttachment.prototype, "fileType", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], TicketAttachment.prototype, "fileUrl", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], TicketAttachment.prototype, "fileSize", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(500),
    __metadata("design:type", String)
], TicketAttachment.prototype, "description", void 0);
class CreateTicketDto {
    constructor() {
        this.priority = TicketPriority.NORMAL;
        this.source = TicketSource.WEB;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { title: { required: true, type: () => String, minLength: 5, maxLength: 200 }, description: { required: true, type: () => String, minLength: 10, maxLength: 5000 }, type: { required: true, enum: (__webpack_require__(24).TicketType) }, priority: { required: false, default: TicketPriority.NORMAL, enum: (__webpack_require__(24).TicketPriority) }, source: { required: false, default: TicketSource.WEB, enum: (__webpack_require__(24).TicketSource) }, contactId: { required: false, type: () => String, format: "uuid" }, departmentId: { required: false, type: () => String, format: "uuid" }, assigneeId: { required: false, type: () => String, format: "uuid" }, category: { required: false, type: () => String, maxLength: 100 }, subCategory: { required: false, type: () => String, maxLength: 100 }, attachments: { required: false, type: () => [(__webpack_require__(24).TicketAttachment)] }, tags: { required: false, type: () => [String] }, referenceNumber: { required: false, type: () => String, maxLength: 100 }, relatedTicketId: { required: false, type: () => String, format: "uuid" }, isPrivate: { required: false, type: () => Boolean }, internalNotes: { required: false, type: () => String, maxLength: 1000 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(5),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(200),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(10),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(5000),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "description", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: TicketType }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(TicketType),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: TicketPriority }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(TicketPriority),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "priority", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: TicketSource }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(TicketSource),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "source", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "contactId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "departmentId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "assigneeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "subCategory", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [TicketAttachment] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => TicketAttachment),
    __metadata("design:type", Array)
], CreateTicketDto.prototype, "attachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateTicketDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "referenceNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "relatedTicketId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], CreateTicketDto.prototype, "customFields", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateTicketDto.prototype, "isPrivate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(1000),
    __metadata("design:type", String)
], CreateTicketDto.prototype, "internalNotes", void 0);


/***/ }),
/* 25 */
/***/ ((module) => {

module.exports = require("class-validator");

/***/ }),
/* 26 */
/***/ ((module) => {

module.exports = require("class-transformer");

/***/ }),
/* 27 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Department: () => (/* binding */ Department)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
/* harmony import */ var _tickets_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(23);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






let Department = class Department {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, name: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, description: { required: false, type: () => String }, parentDepartmentId: { required: false, type: () => String }, managerId: { required: false, type: () => String }, createdById: { required: false, type: () => String }, updatedById: { required: false, type: () => String }, isActive: { required: true, type: () => Boolean }, memberCount: { required: true, type: () => Number }, sortOrder: { required: true, type: () => Number }, metadata: { required: false, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, parentDepartment: { required: false, type: () => (__webpack_require__(27).Department) }, childDepartments: { required: true, type: () => [(__webpack_require__(27).Department)] }, manager: { required: true, type: () => (__webpack_require__(21).User) }, createdBy: { required: true, type: () => (__webpack_require__(21).User) }, updatedBy: { required: true, type: () => (__webpack_require__(21).User) }, tickets: { required: true, type: () => [(__webpack_require__(23).Ticket)] } };
    }
};
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Department.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Department.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Department.prototype, "organizationId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Department.prototype, "description", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Department.prototype, "parentDepartmentId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Department.prototype, "managerId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Department.prototype, "createdById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Department.prototype, "updatedById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], Department.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', default: 0 }),
    __metadata("design:type", Number)
], Department.prototype, "memberCount", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', default: 0 }),
    __metadata("design:type", Number)
], Department.prototype, "sortOrder", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Department.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], Department.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], Department.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], Department.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization)
], Department.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => Department, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'parentDepartmentId' }),
    __metadata("design:type", Department)
], Department.prototype, "parentDepartment", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => Department, dept => dept.parentDepartment),
    __metadata("design:type", Array)
], Department.prototype, "childDepartments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'managerId' }),
    __metadata("design:type", Promise)
], Department.prototype, "manager", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'createdById' }),
    __metadata("design:type", Promise)
], Department.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Promise)
], Department.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _tickets_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__.Ticket, ticket => ticket.department),
    __metadata("design:type", Promise)
], Department.prototype, "tickets", void 0);
Department = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('departments')
], Department);



/***/ }),
/* 28 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Organization: () => (/* binding */ Organization),
/* harmony export */   OrganizationStatus: () => (/* binding */ OrganizationStatus),
/* harmony export */   SubscriptionTier: () => (/* binding */ SubscriptionTier)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
/* harmony import */ var _tickets_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(23);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var SubscriptionTier;
(function (SubscriptionTier) {
    SubscriptionTier["FREE"] = "FREE";
    SubscriptionTier["BASIC"] = "BASIC";
    SubscriptionTier["PROFESSIONAL"] = "PROFESSIONAL";
    SubscriptionTier["ENTERPRISE"] = "ENTERPRISE";
})(SubscriptionTier || (SubscriptionTier = {}));
var OrganizationStatus;
(function (OrganizationStatus) {
    OrganizationStatus["ACTIVE"] = "ACTIVE";
    OrganizationStatus["SUSPENDED"] = "SUSPENDED";
    OrganizationStatus["PENDING"] = "PENDING";
})(OrganizationStatus || (OrganizationStatus = {}));
let Organization = class Organization {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, slug: { required: true, type: () => String }, logo: { required: true, type: () => String }, domain: { required: true, type: () => String }, isDomainVerified: { required: true, type: () => Boolean }, status: { required: true, enum: (__webpack_require__(28).OrganizationStatus) }, subscriptionTier: { required: true, enum: (__webpack_require__(28).SubscriptionTier) }, subscriptionStartDate: { required: true, type: () => Date }, subscriptionEndDate: { required: true, type: () => Date }, isSubscriptionActive: { required: true, type: () => Boolean }, settings: { required: true, type: () => ({ ticketPriorities: { required: false, type: () => [String] }, ticketCategories: { required: false, type: () => [String] }, customFields: { required: false, type: () => [Object] }, notificationSettings: { required: false, type: () => Object }, brandingSettings: { required: false, type: () => Object } }) }, maxUsers: { required: true, type: () => Number }, maxStorage: { required: true, type: () => Number }, createdById: { required: true, type: () => String }, updatedById: { required: true, type: () => String }, createdBy: { required: true, type: () => (__webpack_require__(21).User) }, updatedBy: { required: true, type: () => (__webpack_require__(21).User) }, users: { required: true, type: () => [(__webpack_require__(21).User)] }, tickets: { required: true, type: () => [(__webpack_require__(23).Ticket)] }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date }, metadata: { required: true, type: () => ({ industry: { required: false, type: () => String }, size: { required: false, type: () => String }, location: { required: false, type: () => String }, timezone: { required: false, type: () => String }, customAttributes: { required: false, type: () => Object } }) }, contactInfo: { required: true, type: () => ({ email: { required: false, type: () => String }, phone: { required: false, type: () => String }, address: { required: false, type: () => ({ street: { required: false, type: () => String }, city: { required: false, type: () => String }, state: { required: false, type: () => String }, country: { required: false, type: () => String }, postalCode: { required: false, type: () => String } }) } }) }, allowedDomains: { required: true, type: () => [String] }, isEmailVerificationRequired: { required: true, type: () => Boolean }, isTwoFactorAuthRequired: { required: true, type: () => Boolean }, auditConfig: { required: true, type: () => ({ enableAuditLog: { required: false, type: () => Boolean }, retentionPeriod: { required: false, type: () => Number }, logLevel: { required: false, type: () => String } }) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Organization.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 100 }),
    __metadata("design:type", String)
], Organization.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 100, unique: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Organization.prototype, "slug", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 255, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "logo", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 100, nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "domain", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Organization.prototype, "isDomainVerified", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: OrganizationStatus,
        default: OrganizationStatus.PENDING
    }),
    __metadata("design:type", String)
], Organization.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: SubscriptionTier,
        default: SubscriptionTier.FREE
    }),
    __metadata("design:type", String)
], Organization.prototype, "subscriptionTier", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], Organization.prototype, "subscriptionStartDate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], Organization.prototype, "subscriptionEndDate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Organization.prototype, "isSubscriptionActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Organization.prototype, "settings", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', default: 0 }),
    __metadata("design:type", Number)
], Organization.prototype, "maxUsers", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', default: 0 }),
    __metadata("design:type", Number)
], Organization.prototype, "maxStorage", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Organization.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'createdById' }),
    __metadata("design:type", Promise)
], Organization.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Promise)
], Organization.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, user => user.organization, { lazy: true }),
    __metadata("design:type", Promise)
], Organization.prototype, "users", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _tickets_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_3__.Ticket, ticket => ticket.organization, { lazy: true }),
    __metadata("design:type", Promise)
], Organization.prototype, "tickets", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], Organization.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], Organization.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], Organization.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Organization.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Organization.prototype, "contactInfo", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'simple-array', nullable: true }),
    __metadata("design:type", Array)
], Organization.prototype, "allowedDomains", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], Organization.prototype, "isEmailVerificationRequired", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Organization.prototype, "isTwoFactorAuthRequired", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Organization.prototype, "auditConfig", void 0);
Organization = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('organizations'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['domain'])
], Organization);



/***/ }),
/* 29 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Message: () => (/* binding */ Message)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
/* harmony import */ var _message_template_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(31);
/* harmony import */ var _message_attachment_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(32);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







let Message = class Message {
    get isRead() {
        return !!this.readAt;
    }
    get isConfirmed() {
        return !!this.confirmedAt;
    }
    get isDelivered() {
        return !!this.deliveredAt;
    }
    get isScheduled() {
        return !!this.scheduledFor && this.scheduledFor > new Date();
    }
    get isFailed() {
        return this.status === _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_2__.MessageStatus.FAILED;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(30).MessageType) }, contactId: { required: true, type: () => String }, senderId: { required: true, type: () => String }, content: { required: true, type: () => String }, priority: { required: true, enum: (__webpack_require__(30).MessagePriority) }, status: { required: true, enum: (__webpack_require__(30).MessageStatus) }, emailOptions: { required: false, type: () => ({ subject: { required: true, type: () => String }, cc: { required: false, type: () => String }, bcc: { required: false, type: () => String }, trackOpens: { required: false, type: () => Boolean }, trackClicks: { required: false, type: () => Boolean } }) }, templateId: { required: false, type: () => String }, scheduledFor: { required: false, type: () => Date }, requireConfirmation: { required: true, type: () => Boolean }, confirmedAt: { required: false, type: () => Date }, confirmedById: { required: false, type: () => String }, deliveredAt: { required: false, type: () => Date }, readAt: { required: false, type: () => Date }, notes: { required: false, type: () => String }, externalId: { required: false, type: () => String }, deliveryDetails: { required: false, type: () => ({ provider: { required: true, type: () => String }, providerMessageId: { required: false, type: () => String }, attempts: { required: false, type: () => Number }, lastAttempt: { required: false, type: () => Date }, errorCode: { required: false, type: () => String }, errorMessage: { required: false, type: () => String } }) }, metadata: { required: false, type: () => Object }, parentMessageId: { required: false, type: () => String }, updatedById: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, sender: { required: true, type: () => (__webpack_require__(21).User) }, updatedBy: { required: false, type: () => (__webpack_require__(21).User) }, confirmedBy: { required: false, type: () => (__webpack_require__(21).User) }, contact: { required: true, type: () => (__webpack_require__(33).Contact) }, template: { required: false, type: () => (__webpack_require__(31).MessageTemplate) }, parentMessage: { required: false, type: () => (__webpack_require__(29).Message) }, replies: { required: false, type: () => [(__webpack_require__(29).Message)] }, attachments: { required: false, type: () => [(__webpack_require__(32).MessageAttachment)] } };
    }
};
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Message.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Message.prototype, "organizationId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_2__.MessageType }),
    __metadata("design:type", String)
], Message.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Message.prototype, "contactId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Message.prototype, "senderId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text' }),
    __metadata("design:type", String)
], Message.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_2__.MessagePriority,
        default: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_2__.MessagePriority.NORMAL,
    }),
    __metadata("design:type", String)
], Message.prototype, "priority", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_2__.MessageStatus,
        default: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_2__.MessageStatus.QUEUED,
    }),
    __metadata("design:type", String)
], Message.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Message.prototype, "emailOptions", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Message.prototype, "templateId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Message.prototype, "scheduledFor", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Message.prototype, "requireConfirmation", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Message.prototype, "confirmedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Message.prototype, "confirmedById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Message.prototype, "deliveredAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Message.prototype, "readAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Message.prototype, "notes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Message.prototype, "externalId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Message.prototype, "deliveryDetails", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Message.prototype, "metadata", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Message.prototype, "parentMessageId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Message.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], Message.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], Message.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], Message.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", Promise)
], Message.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'senderId' }),
    __metadata("design:type", Promise)
], Message.prototype, "sender", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Promise)
], Message.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'confirmedById' }),
    __metadata("design:type", Promise)
], Message.prototype, "confirmedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Contact', { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'contactId' }),
    __metadata("design:type", Promise)
], Message.prototype, "contact", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _message_template_entity__WEBPACK_IMPORTED_MODULE_4__.MessageTemplate, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'templateId' }),
    __metadata("design:type", Promise)
], Message.prototype, "template", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => Message, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'parentMessageId' }),
    __metadata("design:type", Promise)
], Message.prototype, "parentMessage", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => Message, message => message.parentMessage, { lazy: true }),
    __metadata("design:type", Promise)
], Message.prototype, "replies", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _message_attachment_entity__WEBPACK_IMPORTED_MODULE_5__.MessageAttachment, attachment => attachment.message, { lazy: true }),
    __metadata("design:type", Promise)
], Message.prototype, "attachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Message.prototype, "isRead", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Message.prototype, "isConfirmed", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Message.prototype, "isDelivered", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Message.prototype, "isScheduled", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Message.prototype, "isFailed", null);
Message = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('messages'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'contactId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'type']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'status'])
], Message);



/***/ }),
/* 30 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Attachment: () => (/* binding */ Attachment),
/* harmony export */   CreateMessageDto: () => (/* binding */ CreateMessageDto),
/* harmony export */   EmailOptions: () => (/* binding */ EmailOptions),
/* harmony export */   MessagePriority: () => (/* binding */ MessagePriority),
/* harmony export */   MessageStatus: () => (/* binding */ MessageStatus),
/* harmony export */   MessageType: () => (/* binding */ MessageType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var MessageType;
(function (MessageType) {
    MessageType["SMS"] = "SMS";
    MessageType["EMAIL"] = "EMAIL";
    MessageType["WHATSAPP"] = "WHATSAPP";
    MessageType["INTERNAL_NOTE"] = "INTERNAL_NOTE";
})(MessageType || (MessageType = {}));
var MessagePriority;
(function (MessagePriority) {
    MessagePriority["LOW"] = "LOW";
    MessagePriority["NORMAL"] = "NORMAL";
    MessagePriority["HIGH"] = "HIGH";
    MessagePriority["URGENT"] = "URGENT";
})(MessagePriority || (MessagePriority = {}));
var MessageStatus;
(function (MessageStatus) {
    MessageStatus["DRAFT"] = "DRAFT";
    MessageStatus["QUEUED"] = "QUEUED";
    MessageStatus["SENDING"] = "SENDING";
    MessageStatus["SENT"] = "SENT";
    MessageStatus["DELIVERED"] = "DELIVERED";
    MessageStatus["FAILED"] = "FAILED";
    MessageStatus["SCHEDULED"] = "SCHEDULED";
    MessageStatus["DELIVERING"] = "DELIVERING";
    MessageStatus["PENDING"] = "PENDING";
})(MessageStatus || (MessageStatus = {}));
class Attachment {
    static _OPENAPI_METADATA_FACTORY() {
        return { fileName: { required: true, type: () => String }, fileType: { required: true, type: () => String }, fileUrl: { required: true, type: () => String }, fileSize: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], Attachment.prototype, "fileName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], Attachment.prototype, "fileType", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], Attachment.prototype, "fileUrl", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], Attachment.prototype, "fileSize", void 0);
class EmailOptions {
    static _OPENAPI_METADATA_FACTORY() {
        return { subject: { required: true, type: () => String }, cc: { required: false, type: () => String }, bcc: { required: false, type: () => String }, trackOpens: { required: false, type: () => Boolean }, trackClicks: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], EmailOptions.prototype, "subject", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], EmailOptions.prototype, "cc", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], EmailOptions.prototype, "bcc", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], EmailOptions.prototype, "trackOpens", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], EmailOptions.prototype, "trackClicks", void 0);
class CreateMessageDto {
    constructor() {
        this.priority = MessagePriority.NORMAL;
        this.status = MessageStatus.QUEUED;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { type: { required: true, enum: (__webpack_require__(30).MessageType) }, contactId: { required: true, type: () => String, format: "uuid" }, content: { required: true, type: () => String, maxLength: 5000 }, priority: { required: false, default: MessagePriority.NORMAL, enum: (__webpack_require__(30).MessagePriority) }, status: { required: false, default: MessageStatus.QUEUED, enum: (__webpack_require__(30).MessageStatus) }, scheduledFor: { required: false, type: () => String }, emailOptions: { required: false, type: () => (__webpack_require__(30).EmailOptions) }, attachments: { required: false, type: () => [(__webpack_require__(30).Attachment)] }, templateId: { required: false, type: () => String }, requireConfirmation: { required: false, type: () => Boolean }, notes: { required: false, type: () => String, maxLength: 500 }, externalId: { required: false, type: () => String }, subject: { required: false, type: () => String }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: MessageType }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(MessageType),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "contactId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(5000),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: MessagePriority }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(MessagePriority),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "priority", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: MessageStatus }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(MessageStatus),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsISO8601)(),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "scheduledFor", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => EmailOptions),
    __metadata("design:type", EmailOptions)
], CreateMessageDto.prototype, "emailOptions", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [Attachment] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Attachment),
    __metadata("design:type", Array)
], CreateMessageDto.prototype, "attachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "templateId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateMessageDto.prototype, "requireConfirmation", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(500),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "notes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "externalId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], CreateMessageDto.prototype, "subject", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], CreateMessageDto.prototype, "metadata", void 0);


/***/ }),
/* 31 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageTemplate: () => (/* binding */ MessageTemplate),
/* harmony export */   TemplateCategory: () => (/* binding */ TemplateCategory),
/* harmony export */   TemplateType: () => (/* binding */ TemplateType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var TemplateCategory;
(function (TemplateCategory) {
    TemplateCategory["WELCOME"] = "welcome";
    TemplateCategory["NOTIFICATION"] = "notification";
    TemplateCategory["REMINDER"] = "reminder";
    TemplateCategory["MARKETING"] = "marketing";
    TemplateCategory["SUPPORT"] = "support";
    TemplateCategory["CUSTOM"] = "custom";
})(TemplateCategory || (TemplateCategory = {}));
var TemplateType;
(function (TemplateType) {
    TemplateType["SMS"] = "sms";
    TemplateType["EMAIL"] = "email";
    TemplateType["PUSH"] = "push";
    TemplateType["IN_APP"] = "in_app";
})(TemplateType || (TemplateType = {}));
let MessageTemplate = class MessageTemplate {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, category: { required: true, enum: (__webpack_require__(31).TemplateCategory) }, type: { required: true, enum: (__webpack_require__(31).TemplateType) }, subject: { required: true, type: () => String }, content: { required: true, type: () => String }, parameters: { required: true, type: () => Object }, isDefault: { required: true, type: () => Boolean }, isActive: { required: true, type: () => Boolean }, createdBy: { required: true, type: () => (__webpack_require__(21).User) }, createdById: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, organizationId: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], MessageTemplate.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], MessageTemplate.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], MessageTemplate.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: TemplateCategory,
        default: TemplateCategory.CUSTOM
    }),
    __metadata("design:type", String)
], MessageTemplate.prototype, "category", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: TemplateType
    }),
    __metadata("design:type", String)
], MessageTemplate.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], MessageTemplate.prototype, "subject", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text' }),
    __metadata("design:type", String)
], MessageTemplate.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], MessageTemplate.prototype, "parameters", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], MessageTemplate.prototype, "isDefault", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], MessageTemplate.prototype, "isActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'created_by_id' }),
    __metadata("design:type", Function)
], MessageTemplate.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ name: 'created_by_id', nullable: true }),
    __metadata("design:type", String)
], MessageTemplate.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organization_id' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization)
], MessageTemplate.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ name: 'organization_id', nullable: true }),
    __metadata("design:type", String)
], MessageTemplate.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], MessageTemplate.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], MessageTemplate.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], MessageTemplate.prototype, "updatedAt", void 0);
MessageTemplate = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('message_templates')
], MessageTemplate);



/***/ }),
/* 32 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AttachmentType: () => (/* binding */ AttachmentType),
/* harmony export */   MessageAttachment: () => (/* binding */ MessageAttachment)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AttachmentType;
(function (AttachmentType) {
    AttachmentType["IMAGE"] = "image";
    AttachmentType["DOCUMENT"] = "document";
    AttachmentType["AUDIO"] = "audio";
    AttachmentType["VIDEO"] = "video";
    AttachmentType["OTHER"] = "other";
})(AttachmentType || (AttachmentType = {}));
let MessageAttachment = class MessageAttachment {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, fileName: { required: true, type: () => String }, fileSize: { required: true, type: () => Number }, mimeType: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(32).AttachmentType) }, filePath: { required: true, type: () => String }, publicUrl: { required: true, type: () => String }, isUploaded: { required: true, type: () => Boolean }, message: { required: true, type: () => (__webpack_require__(29).Message) }, messageId: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], MessageAttachment.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], MessageAttachment.prototype, "fileName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", Number)
], MessageAttachment.prototype, "fileSize", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], MessageAttachment.prototype, "mimeType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: AttachmentType,
        default: AttachmentType.OTHER
    }),
    __metadata("design:type", String)
], MessageAttachment.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], MessageAttachment.prototype, "filePath", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], MessageAttachment.prototype, "publicUrl", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], MessageAttachment.prototype, "isUploaded", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Message', {
        onDelete: 'CASCADE'
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'message_id' }),
    __metadata("design:type", Function)
], MessageAttachment.prototype, "message", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ name: 'message_id' }),
    __metadata("design:type", String)
], MessageAttachment.prototype, "messageId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], MessageAttachment.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], MessageAttachment.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], MessageAttachment.prototype, "updatedAt", void 0);
MessageAttachment = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('message_attachments')
], MessageAttachment);



/***/ }),
/* 33 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BloodType: () => (/* binding */ BloodType),
/* harmony export */   Contact: () => (/* binding */ Contact),
/* harmony export */   ContactType: () => (/* binding */ ContactType),
/* harmony export */   Gender: () => (/* binding */ Gender)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _contact_relationship_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(34);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ContactType;
(function (ContactType) {
    ContactType["PATIENT"] = "PATIENT";
    ContactType["EMERGENCY_CONTACT"] = "EMERGENCY_CONTACT";
    ContactType["FAMILY_MEMBER"] = "FAMILY_MEMBER";
    ContactType["OTHER"] = "OTHER";
})(ContactType || (ContactType = {}));
var Gender;
(function (Gender) {
    Gender["MALE"] = "MALE";
    Gender["FEMALE"] = "FEMALE";
    Gender["OTHER"] = "OTHER";
    Gender["PREFER_NOT_TO_SAY"] = "PREFER_NOT_TO_SAY";
})(Gender || (Gender = {}));
var BloodType;
(function (BloodType) {
    BloodType["A_POSITIVE"] = "A+";
    BloodType["A_NEGATIVE"] = "A-";
    BloodType["B_POSITIVE"] = "B+";
    BloodType["B_NEGATIVE"] = "B-";
    BloodType["O_POSITIVE"] = "O+";
    BloodType["O_NEGATIVE"] = "O-";
    BloodType["AB_POSITIVE"] = "AB+";
    BloodType["AB_NEGATIVE"] = "AB-";
    BloodType["UNKNOWN"] = "UNKNOWN";
})(BloodType || (BloodType = {}));
let Contact = class Contact {
    get fullName() {
        return `${this.firstName} ${this.lastName}`;
    }
    get age() {
        if (!this.dateOfBirth)
            return null;
        const today = new Date();
        const birthDate = new Date(this.dateOfBirth);
        let age = today.getFullYear() - birthDate.getFullYear();
        const monthDiff = today.getMonth() - birthDate.getMonth();
        if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
            age--;
        }
        return age;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, status: { required: true, type: () => String }, metadata: { required: false, type: () => Object }, phone: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(33).ContactType) }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, middleName: { required: false, type: () => String }, preferredName: { required: false, type: () => String }, email: { required: false, type: () => String }, phoneNumber: { required: false, type: () => String }, alternativePhoneNumber: { required: false, type: () => String }, gender: { required: false, enum: (__webpack_require__(33).Gender) }, dateOfBirth: { required: false, type: () => Date }, bloodType: { required: true, enum: (__webpack_require__(33).BloodType) }, address: { required: false, type: () => ({ street: { required: true, type: () => String }, city: { required: true, type: () => String }, state: { required: true, type: () => String }, postalCode: { required: true, type: () => String }, country: { required: true, type: () => String } }) }, emergencyContact: { required: false, type: () => ({ name: { required: true, type: () => String }, relationship: { required: true, type: () => String }, phoneNumber: { required: true, type: () => String }, address: { required: false, type: () => String } }) }, allergies: { required: false, type: () => [String] }, medications: { required: false, type: () => [String] }, occupation: { required: false, type: () => String }, notes: { required: false, type: () => String }, customFields: { required: false, type: () => Object }, isActive: { required: true, type: () => Boolean }, lastVisitDate: { required: false, type: () => Date }, nextAppointmentDate: { required: false, type: () => Date }, createdById: { required: true, type: () => String }, updatedById: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date }, organization: { required: true, type: () => Object }, createdBy: { required: true, type: () => Object }, updatedBy: { required: true, type: () => Object }, appointments: { required: true, type: () => [Object] }, documents: { required: true, type: () => [Object] }, medicalHistory: { required: true, type: () => [Object] }, relationships: { required: true, type: () => [(__webpack_require__(34).ContactRelationship)] }, mergedRecords: { required: true, type: () => [Object] } };
    }
};
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Contact.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Contact.prototype, "metadata", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Contact.prototype, "organizationId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: ContactType, default: ContactType.PATIENT }),
    __metadata("design:type", String)
], Contact.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Contact.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Contact.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "middleName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "preferredName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ unique: true, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Contact.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "phoneNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "alternativePhoneNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: Gender, nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "gender", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'date', nullable: true }),
    __metadata("design:type", Date)
], Contact.prototype, "dateOfBirth", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: BloodType, default: BloodType.UNKNOWN }),
    __metadata("design:type", String)
], Contact.prototype, "bloodType", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Contact.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Contact.prototype, "emergencyContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'simple-array', nullable: true }),
    __metadata("design:type", Array)
], Contact.prototype, "allergies", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'simple-array', nullable: true }),
    __metadata("design:type", Array)
], Contact.prototype, "medications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "occupation", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "notes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Contact.prototype, "customFields", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], Contact.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Contact.prototype, "lastVisitDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Contact.prototype, "nextAppointmentDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Contact.prototype, "createdById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Contact.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], Contact.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], Contact.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], Contact.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Organization'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", Object)
], Contact.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'createdById' }),
    __metadata("design:type", Object)
], Contact.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Object)
], Contact.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('Appointment', 'contact'),
    __metadata("design:type", Array)
], Contact.prototype, "appointments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('Document', 'contact'),
    __metadata("design:type", Array)
], Contact.prototype, "documents", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('MedicalHistory', 'contact'),
    __metadata("design:type", Array)
], Contact.prototype, "medicalHistory", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _contact_relationship_entity__WEBPACK_IMPORTED_MODULE_2__.ContactRelationship, relationship => relationship.contact),
    __metadata("design:type", Array)
], Contact.prototype, "relationships", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToMany)('Contact'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinTable)({
        name: 'contact_merged_records',
        joinColumn: { name: 'primary_contact_id', referencedColumnName: 'id' },
        inverseJoinColumn: { name: 'merged_contact_id', referencedColumnName: 'id' },
    }),
    __metadata("design:type", Array)
], Contact.prototype, "mergedRecords", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [])
], Contact.prototype, "fullName", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [])
], Contact.prototype, "age", null);
Contact = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('contacts'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'email']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'phoneNumber'])
], Contact);



/***/ }),
/* 34 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContactRelationship: () => (/* binding */ ContactRelationship),
/* harmony export */   RelationshipType: () => (/* binding */ RelationshipType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var RelationshipType;
(function (RelationshipType) {
    RelationshipType["SPOUSE"] = "SPOUSE";
    RelationshipType["PARENT"] = "PARENT";
    RelationshipType["CHILD"] = "CHILD";
    RelationshipType["SIBLING"] = "SIBLING";
    RelationshipType["GUARDIAN"] = "GUARDIAN";
    RelationshipType["DEPENDENT"] = "DEPENDENT";
    RelationshipType["EMERGENCY_CONTACT"] = "EMERGENCY_CONTACT";
    RelationshipType["PRIMARY_CARE_PROVIDER"] = "PRIMARY_CARE_PROVIDER";
    RelationshipType["SPECIALIST"] = "SPECIALIST";
    RelationshipType["CAREGIVER"] = "CAREGIVER";
    RelationshipType["RELATIVE"] = "RELATIVE";
    RelationshipType["COLLEAGUE"] = "COLLEAGUE";
    RelationshipType["FRIEND"] = "FRIEND";
    RelationshipType["OTHER"] = "OTHER";
})(RelationshipType || (RelationshipType = {}));
let ContactRelationship = class ContactRelationship {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, contactId: { required: true, type: () => String }, contact: { required: true, type: () => (__webpack_require__(33).Contact) }, relatedContactId: { required: true, type: () => String }, relatedContact: { required: true, type: () => (__webpack_require__(33).Contact) }, type: { required: true, enum: (__webpack_require__(34).RelationshipType) }, notes: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, isPrimary: { required: true, type: () => Boolean }, createdById: { required: true, type: () => String }, updatedById: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date }, metadata: { required: true, type: () => Object, description: "Custom metadata for the relationship (JSON field)\nThis can store additional information specific to the relationship type\nFor example, for a PARENT-CHILD relationship, it might store custodial information" }, inverseType: { required: true, description: "Inverse relationship type (if applicable)\nFor example, if this relationship is PARENT, the inverse would be CHILD\nThis helps maintain consistency when querying from either direction", enum: (__webpack_require__(34).RelationshipType) }, startDate: { required: true, type: () => Date, description: "Start date of the relationship (if applicable)\nFor example, when a provider became a patient's specialist" }, endDate: { required: true, type: () => Date, description: "End date of the relationship (if applicable)\nFor example, when a provider stopped being a patient's specialist" } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], ContactRelationship.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], ContactRelationship.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], ContactRelationship.prototype, "contactId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Contact', {
        onDelete: 'CASCADE',
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'contactId' }),
    __metadata("design:type", Function)
], ContactRelationship.prototype, "contact", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], ContactRelationship.prototype, "relatedContactId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Contact', {
        onDelete: 'CASCADE',
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'relatedContactId' }),
    __metadata("design:type", Function)
], ContactRelationship.prototype, "relatedContact", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: RelationshipType,
        default: RelationshipType.OTHER,
    }),
    __metadata("design:type", String)
], ContactRelationship.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], ContactRelationship.prototype, "notes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: true }),
    __metadata("design:type", Boolean)
], ContactRelationship.prototype, "isActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], ContactRelationship.prototype, "isPrimary", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], ContactRelationship.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], ContactRelationship.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", Date)
], ContactRelationship.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", Date)
], ContactRelationship.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)({ type: 'timestamptz', nullable: true }),
    __metadata("design:type", Date)
], ContactRelationship.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], ContactRelationship.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: RelationshipType,
        nullable: true,
    }),
    __metadata("design:type", String)
], ContactRelationship.prototype, "inverseType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'date', nullable: true }),
    __metadata("design:type", Date)
], ContactRelationship.prototype, "startDate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'date', nullable: true }),
    __metadata("design:type", Date)
], ContactRelationship.prototype, "endDate", void 0);
ContactRelationship = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('contact_relationships'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'contactId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'relatedContactId'])
], ContactRelationship);



/***/ }),
/* 35 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Appointment: () => (/* binding */ Appointment)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _enums_appointment_type_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36);
/* harmony import */ var _enums_appointment_status_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37);
/* harmony import */ var _enums_appointment_priority_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(38);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






let Appointment = class Appointment {
    isUpcoming() {
        return new Date() < this.startTime;
    }
    isInProgress() {
        const now = new Date();
        return now >= this.startTime && now <= this.endTime;
    }
    isOverdue() {
        return new Date() > this.endTime && this.status !== _enums_appointment_status_enum__WEBPACK_IMPORTED_MODULE_3__.AppointmentStatus.COMPLETED;
    }
    getDuration() {
        return this.endTime.getTime() - this.startTime.getTime();
    }
    canBeModified() {
        return ![
            _enums_appointment_status_enum__WEBPACK_IMPORTED_MODULE_3__.AppointmentStatus.COMPLETED,
            _enums_appointment_status_enum__WEBPACK_IMPORTED_MODULE_3__.AppointmentStatus.CANCELLED,
        ].includes(this.status);
    }
    needsReminder() {
        var _a;
        if (!this.sendReminders || this.reminderSent || !this.isUpcoming()) {
            return false;
        }
        const now = new Date();
        const nextReminderTime = Math.min(...((_a = this.reminderPreferences) === null || _a === void 0 ? void 0 : _a.reminderTimes) || [60]);
        const reminderDue = new Date(this.startTime.getTime() - nextReminderTime * 60000);
        return now >= reminderDue;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, title: { required: true, type: () => String }, startTime: { required: true, type: () => Date }, endTime: { required: true, type: () => Date }, notes: { required: false, type: () => String }, organizationId: { required: true, type: () => String }, patientId: { required: true, type: () => String }, doctorId: { required: true, type: () => String }, createdById: { required: true, type: () => String }, updatedById: { required: false, type: () => String }, confirmedAt: { required: false, type: () => Date }, scheduledFor: { required: true, type: () => Date }, type: { required: true, enum: (__webpack_require__(36).AppointmentType) }, status: { required: true, enum: (__webpack_require__(37).AppointmentStatus) }, priority: { required: true, enum: (__webpack_require__(38).AppointmentPriority) }, description: { required: true, type: () => String }, location: { required: true, type: () => String }, meetingLink: { required: true, type: () => String }, sendReminders: { required: true, type: () => Boolean }, reminderPreferences: { required: true, type: () => ({ email: { required: true, type: () => Boolean }, sms: { required: true, type: () => Boolean }, whatsapp: { required: true, type: () => Boolean }, reminderTimes: { required: true, type: () => [Number] } }) }, formData: { required: true, type: () => ({ chiefComplaint: { required: false, type: () => String }, symptoms: { required: false, type: () => [String] }, duration: { required: false, type: () => String }, notes: { required: false, type: () => String }, diagnosis: { required: false, type: () => String }, treatmentPlan: { required: false, type: () => String }, prescriptions: { required: false, type: () => [String] }, followUpInstructions: { required: false, type: () => String } }) }, metadata: { required: true, type: () => ({ referralSource: { required: false, type: () => String }, insurance: { required: false, type: () => String }, tags: { required: false, type: () => [String] }, externalId: { required: false, type: () => String }, followUpAppointmentId: { required: false, type: () => String }, previousAppointmentId: { required: false, type: () => String }, billingStatus: { required: false, type: () => String }, claimStatus: { required: false, type: () => String }, followUpSentAt: { required: false, type: () => String } }) }, isRecurring: { required: true, type: () => Boolean }, recurrencePattern: { required: true, type: () => ({ frequency: { required: true, type: () => Object }, interval: { required: true, type: () => Number }, endDate: { required: false, type: () => Date }, daysOfWeek: { required: false, type: () => [Number] } }) }, parentAppointmentId: { required: true, type: () => String }, cancellationReason: { required: true, type: () => String }, reschedulingReason: { required: true, type: () => String }, reminderSent: { required: true, type: () => Boolean }, reminderSentAt: { required: true, type: () => Date }, checkedInAt: { required: true, type: () => Date }, completedAt: { required: true, type: () => Date }, cancelledAt: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, organization: { required: true, type: () => Object }, patient: { required: true, type: () => Object }, doctor: { required: true, type: () => Object }, createdBy: { required: true, type: () => Object }, updatedBy: { required: true, type: () => Object }, parentAppointment: { required: true, type: () => (__webpack_require__(35).Appointment) }, recurrentAppointments: { required: true, type: () => [(__webpack_require__(35).Appointment)] }, provider: { required: true, type: () => Object } };
    }
};
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Appointment.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Appointment.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp' }),
    __metadata("design:type", Date)
], Appointment.prototype, "startTime", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp' }),
    __metadata("design:type", Date)
], Appointment.prototype, "endTime", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "notes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    __metadata("design:type", String)
], Appointment.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    __metadata("design:type", String)
], Appointment.prototype, "patientId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    __metadata("design:type", String)
], Appointment.prototype, "doctorId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    __metadata("design:type", String)
], Appointment.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone', nullable: true }),
    __metadata("design:type", Date)
], Appointment.prototype, "confirmedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone' }),
    __metadata("design:type", Date)
], Appointment.prototype, "scheduledFor", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_appointment_type_enum__WEBPACK_IMPORTED_MODULE_2__.AppointmentType,
        default: _enums_appointment_type_enum__WEBPACK_IMPORTED_MODULE_2__.AppointmentType.IN_PERSON,
    }),
    __metadata("design:type", String)
], Appointment.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_appointment_status_enum__WEBPACK_IMPORTED_MODULE_3__.AppointmentStatus,
        default: _enums_appointment_status_enum__WEBPACK_IMPORTED_MODULE_3__.AppointmentStatus.SCHEDULED,
    }),
    __metadata("design:type", String)
], Appointment.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_appointment_priority_enum__WEBPACK_IMPORTED_MODULE_4__.AppointmentPriority,
        default: _enums_appointment_priority_enum__WEBPACK_IMPORTED_MODULE_4__.AppointmentPriority.NORMAL,
    }),
    __metadata("design:type", String)
], Appointment.prototype, "priority", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 200, nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "location", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 500, nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "meetingLink", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: true }),
    __metadata("design:type", Boolean)
], Appointment.prototype, "sendReminders", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Appointment.prototype, "reminderPreferences", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Appointment.prototype, "formData", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Appointment.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], Appointment.prototype, "isRecurring", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Appointment.prototype, "recurrencePattern", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "parentAppointmentId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 500, nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "cancellationReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 500, nullable: true }),
    __metadata("design:type", String)
], Appointment.prototype, "reschedulingReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], Appointment.prototype, "reminderSent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone', nullable: true }),
    __metadata("design:type", Date)
], Appointment.prototype, "reminderSentAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone', nullable: true }),
    __metadata("design:type", Date)
], Appointment.prototype, "checkedInAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone', nullable: true }),
    __metadata("design:type", Date)
], Appointment.prototype, "completedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone', nullable: true }),
    __metadata("design:type", Date)
], Appointment.prototype, "cancelledAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)({ type: 'timestamp with time zone' }),
    __metadata("design:type", Date)
], Appointment.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)({ type: 'timestamp with time zone' }),
    __metadata("design:type", Date)
], Appointment.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Organization', { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", Object)
], Appointment.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Contact', 'appointments', { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'patientId' }),
    __metadata("design:type", Object)
], Appointment.prototype, "patient", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'doctorId' }),
    __metadata("design:type", Object)
], Appointment.prototype, "doctor", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'createdById' }),
    __metadata("design:type", Object)
], Appointment.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Object)
], Appointment.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => Appointment, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'parentAppointmentId' }),
    __metadata("design:type", Appointment)
], Appointment.prototype, "parentAppointment", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => Appointment, appointment => appointment.parentAppointment),
    __metadata("design:type", Array)
], Appointment.prototype, "recurrentAppointments", void 0);
Appointment = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('appointments'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'startTime']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['doctorId', 'startTime']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['patientId', 'startTime'])
], Appointment);



/***/ }),
/* 36 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   APPOINTMENT_TYPE_METADATA: () => (/* binding */ APPOINTMENT_TYPE_METADATA),
/* harmony export */   AppointmentType: () => (/* binding */ AppointmentType)
/* harmony export */ });
var AppointmentType;
(function (AppointmentType) {
    AppointmentType["INITIAL_CONSULTATION"] = "INITIAL_CONSULTATION";
    AppointmentType["FOLLOW_UP"] = "FOLLOW_UP";
    AppointmentType["ROUTINE_CHECKUP"] = "ROUTINE_CHECKUP";
    AppointmentType["SPECIALIST_CONSULTATION"] = "SPECIALIST_CONSULTATION";
    AppointmentType["URGENT_CARE"] = "URGENT_CARE";
    AppointmentType["PROCEDURE"] = "PROCEDURE";
    AppointmentType["SURGERY"] = "SURGERY";
    AppointmentType["DIAGNOSTIC"] = "DIAGNOSTIC";
    AppointmentType["THERAPY"] = "THERAPY";
    AppointmentType["VACCINATION"] = "VACCINATION";
    AppointmentType["SCREENING"] = "SCREENING";
    AppointmentType["TELEHEALTH"] = "TELEHEALTH";
    AppointmentType["LAB_WORK"] = "LAB_WORK";
    AppointmentType["IMAGING"] = "IMAGING";
    AppointmentType["DENTAL"] = "DENTAL";
    AppointmentType["PHARMACY"] = "PHARMACY";
    AppointmentType["IN_PERSON"] = "IN_PERSON";
    AppointmentType["VIRTUAL"] = "VIRTUAL";
    AppointmentType["PHONE"] = "PHONE";
    AppointmentType["HOME_VISIT"] = "HOME_VISIT";
    AppointmentType["EMERGENCY"] = "EMERGENCY";
    AppointmentType["CONSULTATION"] = "CONSULTATION";
    AppointmentType["MATERNITY"] = "MATERNITY";
    AppointmentType["SPECIALIZED"] = "SPECIALIZED";
    AppointmentType["PEDIATRIC"] = "PEDIATRIC";
    AppointmentType["WELLNESS_CHECK"] = "WELLNESS_CHECK";
})(AppointmentType || (AppointmentType = {}));
const APPOINTMENT_TYPE_METADATA = {
    [AppointmentType.INITIAL_CONSULTATION]: {
        value: AppointmentType.INITIAL_CONSULTATION,
        label: 'Initial Consultation',
        description: 'First-time visit with healthcare provider',
        defaultDuration: 60,
        requiresPreparation: true,
        preparationInstructions: 'Please bring medical history and current medications list',
        category: 'PRIMARY',
        virtualEnabled: true
    },
    [AppointmentType.IN_PERSON]: {
        value: AppointmentType.IN_PERSON,
        label: 'In-Person Visit',
        description: 'Standard in-person medical visit',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: false
    },
    [AppointmentType.FOLLOW_UP]: {
        value: AppointmentType.FOLLOW_UP,
        label: 'Follow-up Visit',
        description: 'Follow-up appointment to review progress',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: true
    },
    [AppointmentType.ROUTINE_CHECKUP]: {
        value: AppointmentType.ROUTINE_CHECKUP,
        label: 'Routine Check-up',
        description: 'Regular health check-up',
        defaultDuration: 45,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: false
    },
    [AppointmentType.SPECIALIST_CONSULTATION]: {
        value: AppointmentType.SPECIALIST_CONSULTATION,
        label: 'Specialist Consultation',
        description: 'Consultation with a specialist',
        defaultDuration: 60,
        requiresPreparation: true,
        preparationInstructions: 'Please bring referral and previous test results',
        category: 'SPECIALIST',
        virtualEnabled: true
    },
    [AppointmentType.URGENT_CARE]: {
        value: AppointmentType.URGENT_CARE,
        label: 'Urgent Care',
        description: 'Immediate medical attention required',
        defaultDuration: 45,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: false
    },
    [AppointmentType.PROCEDURE]: {
        value: AppointmentType.PROCEDURE,
        label: 'Medical Procedure',
        description: 'Minor medical procedure',
        defaultDuration: 90,
        requiresPreparation: true,
        preparationInstructions: 'Specific preparation instructions will be provided',
        category: 'PROCEDURE',
        resources: ['Procedure Room', 'Standard Equipment'],
        virtualEnabled: false
    },
    [AppointmentType.SURGERY]: {
        value: AppointmentType.SURGERY,
        label: 'Surgery',
        description: 'Surgical procedure',
        defaultDuration: 180,
        requiresPreparation: true,
        preparationInstructions: 'Detailed pre-surgery instructions will be provided',
        category: 'PROCEDURE',
        resources: ['Operating Room', 'Surgical Equipment'],
        virtualEnabled: false
    },
    [AppointmentType.DIAGNOSTIC]: {
        value: AppointmentType.DIAGNOSTIC,
        label: 'Diagnostic Test',
        description: 'Medical diagnostic testing',
        defaultDuration: 45,
        requiresPreparation: true,
        preparationInstructions: 'Test-specific preparation instructions will be provided',
        category: 'DIAGNOSTIC',
        resources: ['Testing Equipment'],
        virtualEnabled: false
    },
    [AppointmentType.THERAPY]: {
        value: AppointmentType.THERAPY,
        label: 'Therapy Session',
        description: 'Therapeutic treatment session',
        defaultDuration: 60,
        requiresPreparation: false,
        category: 'OTHER',
        virtualEnabled: true
    },
    [AppointmentType.VACCINATION]: {
        value: AppointmentType.VACCINATION,
        label: 'Vaccination',
        description: 'Vaccine administration',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'PROCEDURE',
        resources: ['Vaccine Storage'],
        virtualEnabled: false
    },
    [AppointmentType.SCREENING]: {
        value: AppointmentType.SCREENING,
        label: 'Health Screening',
        description: 'Preventive health screening',
        defaultDuration: 45,
        requiresPreparation: true,
        preparationInstructions: 'Please follow screening-specific preparation guidelines',
        category: 'DIAGNOSTIC',
        virtualEnabled: false
    },
    [AppointmentType.TELEHEALTH]: {
        value: AppointmentType.TELEHEALTH,
        label: 'Telehealth Visit',
        description: 'Virtual healthcare consultation',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: true
    },
    [AppointmentType.LAB_WORK]: {
        value: AppointmentType.LAB_WORK,
        label: 'Laboratory Tests',
        description: 'Laboratory testing and sample collection',
        defaultDuration: 30,
        requiresPreparation: true,
        preparationInstructions: 'Specific lab test preparation instructions will be provided',
        category: 'DIAGNOSTIC',
        resources: ['Lab Equipment'],
        virtualEnabled: false
    },
    [AppointmentType.IMAGING]: {
        value: AppointmentType.IMAGING,
        label: 'Medical Imaging',
        description: 'Medical imaging services',
        defaultDuration: 45,
        requiresPreparation: true,
        preparationInstructions: 'Imaging-specific preparation instructions will be provided',
        category: 'DIAGNOSTIC',
        resources: ['Imaging Equipment'],
        virtualEnabled: false
    },
    [AppointmentType.DENTAL]: {
        value: AppointmentType.DENTAL,
        label: 'Dental Visit',
        description: 'Dental care appointment',
        defaultDuration: 60,
        requiresPreparation: false,
        category: 'SPECIALIST',
        resources: ['Dental Equipment'],
        virtualEnabled: false
    },
    [AppointmentType.PHARMACY]: {
        value: AppointmentType.PHARMACY,
        label: 'Pharmacy Consultation',
        description: 'Consultation with pharmacist',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'OTHER',
        virtualEnabled: true
    },
    [AppointmentType.VIRTUAL]: {
        value: AppointmentType.VIRTUAL,
        label: 'Virtual Appointment',
        description: 'Virtual healthcare appointment',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: true
    },
    [AppointmentType.PHONE]: {
        value: AppointmentType.PHONE,
        label: 'Phone Consultation',
        description: 'Consultation over the phone',
        defaultDuration: 20,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: true
    },
    [AppointmentType.HOME_VISIT]: {
        value: AppointmentType.HOME_VISIT,
        label: 'Home Visit',
        description: 'Healthcare provider visits patient at home',
        defaultDuration: 60,
        requiresPreparation: true,
        preparationInstructions: 'Ensure a clean and safe environment for the visit',
        category: 'PRIMARY',
        virtualEnabled: false
    },
    [AppointmentType.EMERGENCY]: {
        value: AppointmentType.EMERGENCY,
        label: 'Emergency Visit',
        description: 'Emergency medical attention',
        defaultDuration: 120,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: false
    },
    [AppointmentType.CONSULTATION]: {
        value: AppointmentType.CONSULTATION,
        label: 'General Consultation',
        description: 'General medical consultation',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: true
    },
    [AppointmentType.MATERNITY]: {
        value: AppointmentType.MATERNITY,
        label: 'Maternity Care',
        description: 'Maternity care appointment',
        defaultDuration: 60,
        requiresPreparation: true,
        preparationInstructions: 'Bring maternity records and previous test results',
        category: 'SPECIALIST',
        virtualEnabled: false
    },
    [AppointmentType.SPECIALIZED]: {
        value: AppointmentType.SPECIALIZED,
        label: 'Specialized Care',
        description: 'Specialized medical care',
        defaultDuration: 60,
        requiresPreparation: true,
        preparationInstructions: 'Bring relevant medical records and test results',
        category: 'SPECIALIST',
        virtualEnabled: false
    },
    [AppointmentType.PEDIATRIC]: {
        value: AppointmentType.PEDIATRIC,
        label: 'Pediatric Care',
        description: 'Pediatric care appointment',
        defaultDuration: 45,
        requiresPreparation: false,
        category: 'SPECIALIST',
        virtualEnabled: false
    },
    [AppointmentType.WELLNESS_CHECK]: {
        value: AppointmentType.WELLNESS_CHECK,
        label: 'Wellness Check',
        description: 'Routine wellness check-up',
        defaultDuration: 30,
        requiresPreparation: false,
        category: 'PRIMARY',
        virtualEnabled: true
    }
};


/***/ }),
/* 37 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppointmentStatus: () => (/* binding */ AppointmentStatus),
/* harmony export */   STATUS_METADATA: () => (/* binding */ STATUS_METADATA)
/* harmony export */ });
var AppointmentStatus;
(function (AppointmentStatus) {
    AppointmentStatus["REQUESTED"] = "REQUESTED";
    AppointmentStatus["PENDING"] = "PENDING";
    AppointmentStatus["SCHEDULED"] = "SCHEDULED";
    AppointmentStatus["CONFIRMED"] = "CONFIRMED";
    AppointmentStatus["CHECKED_IN"] = "CHECKED_IN";
    AppointmentStatus["IN_PROGRESS"] = "IN_PROGRESS";
    AppointmentStatus["COMPLETED"] = "COMPLETED";
    AppointmentStatus["CANCELLED"] = "CANCELLED";
    AppointmentStatus["NO_SHOW"] = "NO_SHOW";
    AppointmentStatus["RESCHEDULED"] = "RESCHEDULED";
    AppointmentStatus["WAITING_LIST"] = "WAITING_LIST";
    AppointmentStatus["MISSED"] = "MISSED";
})(AppointmentStatus || (AppointmentStatus = {}));
const STATUS_METADATA = {
    [AppointmentStatus.REQUESTED]: {
        value: AppointmentStatus.REQUESTED,
        label: 'Requested',
        description: 'Appointment has been requested but not yet processed',
        color: '#FFA500',
        allowedTransitions: [
            AppointmentStatus.PENDING,
            AppointmentStatus.CONFIRMED,
            AppointmentStatus.CANCELLED,
            AppointmentStatus.WAITING_LIST
        ]
    },
    [AppointmentStatus.PENDING]: {
        value: AppointmentStatus.PENDING,
        label: 'Pending',
        description: 'Awaiting confirmation from provider',
        color: '#FFD700',
        allowedTransitions: [
            AppointmentStatus.CONFIRMED,
            AppointmentStatus.CANCELLED,
            AppointmentStatus.WAITING_LIST
        ]
    },
    [AppointmentStatus.CONFIRMED]: {
        value: AppointmentStatus.CONFIRMED,
        label: 'Confirmed',
        description: 'Appointment has been confirmed',
        color: '#32CD32',
        allowedTransitions: [
            AppointmentStatus.CHECKED_IN,
            AppointmentStatus.CANCELLED,
            AppointmentStatus.NO_SHOW,
            AppointmentStatus.RESCHEDULED
        ]
    },
    [AppointmentStatus.SCHEDULED]: {
        value: AppointmentStatus.SCHEDULED,
        label: 'Scheduled',
        description: 'Appointment has been scheduled',
        color: '#20B2AA',
        allowedTransitions: [
            AppointmentStatus.CONFIRMED,
            AppointmentStatus.CANCELLED,
            AppointmentStatus.RESCHEDULED
        ]
    },
    [AppointmentStatus.CHECKED_IN]: {
        value: AppointmentStatus.CHECKED_IN,
        label: 'Checked In',
        description: 'Patient has arrived for appointment',
        color: '#1E90FF',
        allowedTransitions: [
            AppointmentStatus.IN_PROGRESS,
            AppointmentStatus.CANCELLED
        ]
    },
    [AppointmentStatus.IN_PROGRESS]: {
        value: AppointmentStatus.IN_PROGRESS,
        label: 'In Progress',
        description: 'Appointment is currently in progress',
        color: '#4169E1',
        allowedTransitions: [
            AppointmentStatus.COMPLETED
        ]
    },
    [AppointmentStatus.COMPLETED]: {
        value: AppointmentStatus.COMPLETED,
        label: 'Completed',
        description: 'Appointment has been completed',
        color: '#008000',
        allowedTransitions: []
    },
    [AppointmentStatus.CANCELLED]: {
        value: AppointmentStatus.CANCELLED,
        label: 'Cancelled',
        description: 'Appointment was cancelled',
        color: '#FF0000',
        allowedTransitions: [
            AppointmentStatus.REQUESTED,
            AppointmentStatus.RESCHEDULED
        ]
    },
    [AppointmentStatus.NO_SHOW]: {
        value: AppointmentStatus.NO_SHOW,
        label: 'No Show',
        description: 'Patient did not show up for appointment',
        color: '#8B0000',
        allowedTransitions: [
            AppointmentStatus.RESCHEDULED
        ]
    },
    [AppointmentStatus.RESCHEDULED]: {
        value: AppointmentStatus.RESCHEDULED,
        label: 'Rescheduled',
        description: 'Appointment has been rescheduled',
        color: '#9370DB',
        allowedTransitions: [
            AppointmentStatus.CONFIRMED,
            AppointmentStatus.CANCELLED
        ]
    },
    [AppointmentStatus.WAITING_LIST]: {
        value: AppointmentStatus.WAITING_LIST,
        label: 'Waiting List',
        description: 'Patient is on waiting list for cancellations',
        color: '#808080',
        allowedTransitions: [
            AppointmentStatus.CONFIRMED,
            AppointmentStatus.CANCELLED
        ]
    },
    [AppointmentStatus.MISSED]: {
        value: AppointmentStatus.MISSED,
        label: 'Missed',
        description: 'Appointment was missed',
        color: '#A9A9A9',
        allowedTransitions: [
            AppointmentStatus.RESCHEDULED
        ]
    }
};


/***/ }),
/* 38 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppointmentPriority: () => (/* binding */ AppointmentPriority),
/* harmony export */   PRIORITY_METADATA: () => (/* binding */ PRIORITY_METADATA)
/* harmony export */ });
var AppointmentPriority;
(function (AppointmentPriority) {
    AppointmentPriority["EMERGENCY"] = "EMERGENCY";
    AppointmentPriority["URGENT"] = "URGENT";
    AppointmentPriority["HIGH"] = "HIGH";
    AppointmentPriority["NORMAL"] = "NORMAL";
    AppointmentPriority["MEDIUM"] = "MEDIUM";
    AppointmentPriority["LOW"] = "LOW";
    AppointmentPriority["FOLLOW_UP"] = "FOLLOW_UP";
})(AppointmentPriority || (AppointmentPriority = {}));
const PRIORITY_METADATA = {
    [AppointmentPriority.EMERGENCY]: {
        value: AppointmentPriority.EMERGENCY,
        label: 'Emergency',
        maxWaitTime: 'Immediate',
        color: '#FF0000'
    },
    [AppointmentPriority.URGENT]: {
        value: AppointmentPriority.URGENT,
        label: 'Urgent',
        maxWaitTime: '24 hours',
        color: '#FFA500'
    },
    [AppointmentPriority.HIGH]: {
        value: AppointmentPriority.HIGH,
        label: 'High Priority',
        maxWaitTime: '72 hours',
        color: '#FFFF00'
    },
    [AppointmentPriority.NORMAL]: {
        value: AppointmentPriority.NORMAL,
        label: 'Normal',
        maxWaitTime: '5 days',
        color: '#90EE90'
    },
    [AppointmentPriority.MEDIUM]: {
        value: AppointmentPriority.MEDIUM,
        label: 'Medium Priority',
        maxWaitTime: '1 week',
        color: '#00FF00'
    },
    [AppointmentPriority.LOW]: {
        value: AppointmentPriority.LOW,
        label: 'Low Priority',
        maxWaitTime: '2 weeks',
        color: '#0000FF'
    },
    [AppointmentPriority.FOLLOW_UP]: {
        value: AppointmentPriority.FOLLOW_UP,
        label: 'Follow-up',
        maxWaitTime: 'As scheduled',
        color: '#808080'
    }
};


/***/ }),
/* 39 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Notification: () => (/* binding */ Notification),
/* harmony export */   NotificationChannel: () => (/* reexport safe */ _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_2__.NotificationChannel)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40);
/* harmony import */ var _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






let Notification = class Notification {
    get isRead() {
        return this.read;
    }
    get isExpired() {
        return this.expiresAt ? new Date() > this.expiresAt : false;
    }
    get isScheduled() {
        return this.scheduledFor ? new Date() < this.scheduledFor : false;
    }
    get isDelivered() {
        return !!this.deliveredAt;
    }
    get requiresAction() {
        return this.requireConfirmation && !this.read;
    }
    get failedChannels() {
        var _a;
        if (!((_a = this.deliveryDetails) === null || _a === void 0 ? void 0 : _a.channels))
            return [];
        return this.deliveryDetails.channels
            .filter(c => c.status === 'FAILED')
            .map(c => c.channel);
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, userId: { required: true, type: () => String }, retryCount: { required: true, type: () => Number }, type: { required: true, type: () => String }, content: { required: true, type: () => String }, metadata: { required: false, type: () => Object }, status: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, readAt: { required: false, type: () => Date }, organizationId: { required: true, type: () => String }, senderId: { required: true, type: () => String }, title: { required: true, type: () => String }, priority: { required: true, enum: (__webpack_require__(40).NotificationPriority) }, actions: { required: false }, scheduledFor: { required: false, type: () => Date }, expiresAt: { required: false, type: () => Date }, requireConfirmation: { required: true, type: () => Boolean }, data: { required: false, type: () => Object }, channels: { required: true, enum: (__webpack_require__(40).NotificationChannel), isArray: true }, category: { required: false, type: () => String }, groupId: { required: false, type: () => String }, referenceId: { required: false, type: () => String }, referenceType: { required: false, type: () => String }, silent: { required: true, type: () => Boolean }, read: { required: true, type: () => Boolean }, deliveredAt: { required: false, type: () => Date }, deliveryDetails: { required: false, type: () => ({ attempts: { required: true, type: () => Number }, lastAttempt: { required: true, type: () => Date }, channels: { required: true }, error: { required: false, type: () => String }, timeoutAt: { required: false, type: () => Date } }) }, recipientDetails: { required: false, type: () => ({ slackUserId: { required: true, type: () => Object }, email: { required: false, type: () => String }, phone: { required: false, type: () => String }, deviceTokens: { required: false, type: () => [String] }, webhookUrl: { required: false, type: () => String } }) }, updatedById: { required: false, type: () => String }, deletedAt: { required: false, type: () => Date }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, user: { required: true, type: () => (__webpack_require__(21).User) }, sender: { required: true, type: () => (__webpack_require__(21).User) }, updatedBy: { required: false, type: () => (__webpack_require__(21).User) } };
    }
};
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Notification.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Notification.prototype, "userId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 0 }),
    __metadata("design:type", Number)
], Notification.prototype, "retryCount", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Notification.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Notification.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Notification.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Notification.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], Notification.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], Notification.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Notification.prototype, "readAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Notification.prototype, "organizationId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], Notification.prototype, "senderId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_2__.NotificationType }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 200 }),
    __metadata("design:type", String)
], Notification.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_2__.NotificationPriority,
        default: _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_2__.NotificationPriority.NORMAL,
    }),
    __metadata("design:type", String)
], Notification.prototype, "priority", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_3__.NotificationStatus,
        default: _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_3__.NotificationStatus.PENDING,
    }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Array)
], Notification.prototype, "actions", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], Notification.prototype, "scheduledFor", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], Notification.prototype, "expiresAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Notification.prototype, "requireConfirmation", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Notification.prototype, "data", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'array',
        items: {
            type: 'string',
            enum: ['EMAIL', 'SMS', 'PUSH', 'IN_APP', 'WHATSAPP', 'SLACK', 'WEBHOOK']
        },
        description: 'Notification delivery channels'
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_2__.NotificationChannel, array: true }),
    __metadata("design:type", Array)
], Notification.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 100, nullable: true }),
    __metadata("design:type", String)
], Notification.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 100, nullable: true }),
    __metadata("design:type", String)
], Notification.prototype, "groupId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Notification.prototype, "referenceId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 50, nullable: true }),
    __metadata("design:type", String)
], Notification.prototype, "referenceType", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Notification.prototype, "silent", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], Notification.prototype, "read", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], Notification.prototype, "deliveredAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'object',
        nullable: true,
        properties: {
            attempts: { type: 'number' },
            lastAttempt: { type: 'string', format: 'date-time' },
            channels: {
                type: 'array',
                items: {
                    type: 'object',
                    properties: {
                        channel: { type: 'string', enum: ['EMAIL', 'SMS', 'PUSH', 'IN_APP', 'WHATSAPP', 'SLACK', 'WEBHOOK'] },
                        status: { type: 'string', enum: ['SUCCESS', 'FAILED'] },
                        sentAt: { type: 'string', format: 'date-time' },
                        error: { type: 'string' }
                    }
                }
            },
            error: { type: 'string' },
            timeoutAt: { type: 'string', format: 'date-time' }
        }
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Notification.prototype, "deliveryDetails", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Notification.prototype, "recipientDetails", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], Notification.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], Notification.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__.Organization, { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", Promise)
], Notification.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'userId' }),
    __metadata("design:type", Promise)
], Notification.prototype, "user", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'senderId' }),
    __metadata("design:type", Promise)
], Notification.prototype, "sender", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User', { lazy: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", Promise)
], Notification.prototype, "updatedBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Notification.prototype, "isRead", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Notification.prototype, "isExpired", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Notification.prototype, "isScheduled", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Notification.prototype, "isDelivered", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], Notification.prototype, "requiresAction", null);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [])
], Notification.prototype, "failedChannels", null);
Notification = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('notifications'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'userId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'type']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'status']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'scheduledFor'])
], Notification);




/***/ }),
/* 40 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateNotificationDto: () => (/* binding */ CreateNotificationDto),
/* harmony export */   NotificationAction: () => (/* binding */ NotificationAction),
/* harmony export */   NotificationChannel: () => (/* binding */ NotificationChannel),
/* harmony export */   NotificationPriority: () => (/* binding */ NotificationPriority),
/* harmony export */   NotificationRecipient: () => (/* binding */ NotificationRecipient),
/* harmony export */   NotificationType: () => (/* binding */ NotificationType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var NotificationType;
(function (NotificationType) {
    NotificationType["SYSTEM"] = "SYSTEM";
    NotificationType["APPOINTMENT"] = "APPOINTMENT";
    NotificationType["MESSAGE"] = "MESSAGE";
    NotificationType["TASK"] = "TASK";
    NotificationType["ALERT"] = "ALERT";
    NotificationType["REMINDER"] = "REMINDER";
    NotificationType["DOCUMENT"] = "DOCUMENT";
    NotificationType["TICKET_ESCALATED"] = "TICKET_ESCALATED";
})(NotificationType || (NotificationType = {}));
var NotificationPriority;
(function (NotificationPriority) {
    NotificationPriority["LOW"] = "LOW";
    NotificationPriority["NORMAL"] = "NORMAL";
    NotificationPriority["MEDIUM"] = "MEDIUM";
    NotificationPriority["HIGH"] = "HIGH";
    NotificationPriority["URGENT"] = "URGENT";
})(NotificationPriority || (NotificationPriority = {}));
var NotificationChannel;
(function (NotificationChannel) {
    NotificationChannel["IN_APP"] = "IN_APP";
    NotificationChannel["EMAIL"] = "EMAIL";
    NotificationChannel["SMS"] = "SMS";
    NotificationChannel["PUSH"] = "PUSH";
    NotificationChannel["WEBHOOK"] = "WEBHOOK";
    NotificationChannel["SLACK"] = "SLACK";
    NotificationChannel["WHATSAPP"] = "WHATSAPP";
})(NotificationChannel || (NotificationChannel = {}));
class NotificationAction {
    static _OPENAPI_METADATA_FACTORY() {
        return { label: { required: true, type: () => String }, url: { required: true, type: () => String }, method: { required: false, type: () => Object }, data: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], NotificationAction.prototype, "label", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], NotificationAction.prototype, "url", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], NotificationAction.prototype, "method", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], NotificationAction.prototype, "data", void 0);
class NotificationRecipient {
    static _OPENAPI_METADATA_FACTORY() {
        return { userId: { required: true, type: () => String, format: "uuid" }, role: { required: true, type: () => String }, organizationId: { required: false, type: () => String }, channels: { required: false, enum: (__webpack_require__(40).NotificationChannel), isArray: true }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], NotificationRecipient.prototype, "userId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(NotificationChannel, { each: true }),
    __metadata("design:type", Array)
], NotificationRecipient.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], NotificationRecipient.prototype, "metadata", void 0);
class CreateNotificationDto {
    constructor() {
        this.priority = NotificationPriority.NORMAL;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { type: { required: true, enum: (__webpack_require__(40).NotificationType) }, title: { required: true, type: () => String, maxLength: 200 }, content: { required: true, type: () => String, maxLength: 1000 }, priority: { required: false, default: NotificationPriority.NORMAL, enum: (__webpack_require__(40).NotificationPriority) }, recipients: { required: true, type: () => [(__webpack_require__(40).NotificationRecipient)] }, actions: { required: false, type: () => [(__webpack_require__(40).NotificationAction)] }, scheduledFor: { required: false, type: () => String }, expiresAt: { required: false, type: () => String }, requireConfirmation: { required: false, type: () => Boolean }, data: { required: false, type: () => Object }, channels: { required: false, enum: (__webpack_require__(40).NotificationChannel), isArray: true }, category: { required: false, type: () => String, maxLength: 100 }, groupId: { required: false, type: () => String, maxLength: 100 }, referenceId: { required: false, type: () => String, format: "uuid" }, referenceType: { required: false, type: () => String, maxLength: 50 }, silent: { required: false, type: () => Boolean }, organizationId: { required: true, type: () => String, format: "uuid" }, senderId: { required: false, type: () => String }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: NotificationType }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(NotificationType),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(200),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(1000),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: NotificationPriority }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(NotificationPriority),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "priority", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => NotificationRecipient),
    __metadata("design:type", Array)
], CreateNotificationDto.prototype, "recipients", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => NotificationAction),
    __metadata("design:type", Array)
], CreateNotificationDto.prototype, "actions", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsISO8601)(),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "scheduledFor", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsISO8601)(),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "expiresAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateNotificationDto.prototype, "requireConfirmation", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], CreateNotificationDto.prototype, "data", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(NotificationChannel, { each: true }),
    __metadata("design:type", Array)
], CreateNotificationDto.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "groupId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "referenceId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "referenceType", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateNotificationDto.prototype, "silent", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], CreateNotificationDto.prototype, "organizationId", void 0);


/***/ }),
/* 41 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationStatus: () => (/* binding */ NotificationStatus),
/* harmony export */   UpdateNotificationDto: () => (/* binding */ UpdateNotificationDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _create_notification_dto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var NotificationStatus;
(function (NotificationStatus) {
    NotificationStatus["SCHEDULED"] = "SCHEDULED";
    NotificationStatus["PENDING"] = "PENDING";
    NotificationStatus["SENT"] = "SENT";
    NotificationStatus["DELIVERED"] = "DELIVERED";
    NotificationStatus["READ"] = "READ";
    NotificationStatus["FAILED"] = "FAILED";
    NotificationStatus["CANCELLED"] = "CANCELLED";
    NotificationStatus["EXPIRED"] = "EXPIRED";
    NotificationStatus["PROCESSING"] = "PROCESSING";
    NotificationStatus["RETRY_PENDING"] = "RETRY_PENDING";
})(NotificationStatus || (NotificationStatus = {}));
class UpdateNotificationDto extends (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.PartialType)((0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.OmitType)(_create_notification_dto__WEBPACK_IMPORTED_MODULE_1__.CreateNotificationDto, ['type', 'recipients'])) {
    static _OPENAPI_METADATA_FACTORY() {
        return { status: { required: false, enum: (__webpack_require__(41).NotificationStatus) }, isDeleted: { required: false, type: () => Boolean }, read: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsEnum)(NotificationStatus),
    __metadata("design:type", String)
], UpdateNotificationDto.prototype, "status", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateNotificationDto.prototype, "read", void 0);


/***/ }),
/* 42 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityType: () => (/* binding */ ActivityType),
/* harmony export */   UserActivity: () => (/* binding */ UserActivity)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ActivityType;
(function (ActivityType) {
    ActivityType["LOGIN"] = "LOGIN";
    ActivityType["LOGOUT"] = "LOGOUT";
    ActivityType["PASSWORD_CHANGE"] = "PASSWORD_CHANGE";
    ActivityType["PROFILE_UPDATE"] = "PROFILE_UPDATE";
    ActivityType["TICKET_CREATE"] = "TICKET_CREATE";
    ActivityType["TICKET_UPDATE"] = "TICKET_UPDATE";
    ActivityType["TICKET_COMMENT"] = "TICKET_COMMENT";
    ActivityType["TICKET_ASSIGNMENT"] = "TICKET_ASSIGNMENT";
    ActivityType["TICKET_STATUS_CHANGE"] = "TICKET_STATUS_CHANGE";
    ActivityType["MESSAGE_SEND"] = "MESSAGE_SEND";
    ActivityType["APPOINTMENT_CREATE"] = "APPOINTMENT_CREATE";
    ActivityType["APPOINTMENT_UPDATE"] = "APPOINTMENT_UPDATE";
    ActivityType["APPOINTMENT_CANCEL"] = "APPOINTMENT_CANCEL";
    ActivityType["DOCUMENT_UPLOAD"] = "DOCUMENT_UPLOAD";
    ActivityType["DOCUMENT_DELETE"] = "DOCUMENT_DELETE";
    ActivityType["SETTINGS_UPDATE"] = "SETTINGS_UPDATE";
    ActivityType["API_ACCESS"] = "API_ACCESS";
    ActivityType["FAILED_LOGIN"] = "FAILED_LOGIN";
    ActivityType["EMAIL_VERIFICATION"] = "EMAIL_VERIFICATION";
    ActivityType["PHONE_VERIFICATION"] = "PHONE_VERIFICATION";
})(ActivityType || (ActivityType = {}));
let UserActivity = class UserActivity {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, userId: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, action: { required: true, type: () => String }, performedById: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, type: { required: true, type: () => String }, description: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, ipAddress: { required: true, type: () => String }, userAgent: { required: true, type: () => String }, referrer: { required: true, type: () => String }, status: { required: true, type: () => String }, failureReason: { required: true, type: () => String }, activityType: { required: true, enum: (__webpack_require__(42).ActivityType) }, details: { required: true, type: () => ({ resourceId: { required: false, type: () => String }, resourceType: { required: false, type: () => String }, oldValue: { required: false, type: () => Object }, newValue: { required: false, type: () => Object }, description: { required: false, type: () => String }, additionalInfo: { required: false, type: () => Object } }) }, isSuccess: { required: true, type: () => Boolean }, errorMessage: { required: false, type: () => String }, context: { required: true, type: () => ({ module: { required: false, type: () => String }, action: { required: false, type: () => String }, target: { required: false, type: () => String }, result: { required: false, type: () => String }, severity: { required: false, type: () => Object } }) }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, user: { required: true, type: () => (__webpack_require__(21).User) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], UserActivity.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], UserActivity.prototype, "userId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], UserActivity.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], UserActivity.prototype, "action", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], UserActivity.prototype, "performedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], UserActivity.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], UserActivity.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], UserActivity.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserActivity.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], UserActivity.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserActivity.prototype, "ipAddress", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserActivity.prototype, "userAgent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserActivity.prototype, "referrer", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserActivity.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserActivity.prototype, "failureReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: ActivityType
    }),
    __metadata("design:type", String)
], UserActivity.prototype, "activityType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], UserActivity.prototype, "details", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], UserActivity.prototype, "isSuccess", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserActivity.prototype, "errorMessage", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], UserActivity.prototype, "context", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization)
], UserActivity.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('User'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'userId' }),
    __metadata("design:type", Function)
], UserActivity.prototype, "user", void 0);
UserActivity = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('user_activities'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'userId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'activityType']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'createdAt'])
], UserActivity);



/***/ }),
/* 43 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RefreshToken: () => (/* binding */ RefreshToken)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



let RefreshToken = class RefreshToken {
    isExpired() {
        return new Date() > this.expiresAt;
    }
    isValid() {
        return !this.isRevoked && !this.isExpired();
    }
    revoke(userId, reason) {
        this.isRevoked = true;
        this.revokedAt = new Date();
        this.revokedBy = userId;
        this.revokedReason = reason;
    }
    updateLastUsed() {
        if (this.metadata) {
            this.metadata.lastUsed = new Date();
        }
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, userId: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, token: { required: true, type: () => String }, expiresAt: { required: true, type: () => Date }, isRevoked: { required: true, type: () => Boolean }, deviceId: { required: true, type: () => String }, userAgent: { required: true, type: () => String }, ipAddress: { required: true, type: () => String }, metadata: { required: true, type: () => ({ platform: { required: false, type: () => String }, browser: { required: false, type: () => String }, location: { required: false, type: () => String }, lastUsed: { required: false, type: () => Date } }) }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, revokedAt: { required: true, type: () => Date }, revokedBy: { required: true, type: () => String }, revokedReason: { required: true, type: () => String }, user: { required: true, type: () => (__webpack_require__(21).User) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], RefreshToken.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    __metadata("design:type", String)
], RefreshToken.prototype, "userId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], RefreshToken.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', unique: true }),
    __metadata("design:type", String)
], RefreshToken.prototype, "token", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone' }),
    __metadata("design:type", Date)
], RefreshToken.prototype, "expiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], RefreshToken.prototype, "isRevoked", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], RefreshToken.prototype, "deviceId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], RefreshToken.prototype, "userAgent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], RefreshToken.prototype, "ipAddress", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], RefreshToken.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)({ type: 'timestamp with time zone' }),
    __metadata("design:type", Date)
], RefreshToken.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)({ type: 'timestamp with time zone' }),
    __metadata("design:type", Date)
], RefreshToken.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp with time zone', nullable: true }),
    __metadata("design:type", Date)
], RefreshToken.prototype, "revokedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], RefreshToken.prototype, "revokedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], RefreshToken.prototype, "revokedReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'userId' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User)
], RefreshToken.prototype, "user", void 0);
RefreshToken = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('refresh_tokens'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['token']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['userId', 'deviceId'])
], RefreshToken);



/***/ }),
/* 44 */
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),
/* 45 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UsersService: () => (/* binding */ UsersService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(44);
/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _entities_user_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21);
/* harmony import */ var _entities_user_activity_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(42);
/* harmony import */ var _enums_role_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(22);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(46);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(71);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};










let UsersService = class UsersService {
    findUsersByRole(organizationId, arg1) {
        throw new Error('Method not implemented.');
    }
    constructor(userRepository, activityRepository, dataSource, eventEmitter, notificationsService) {
        this.userRepository = userRepository;
        this.activityRepository = activityRepository;
        this.dataSource = dataSource;
        this.eventEmitter = eventEmitter;
        this.notificationsService = notificationsService;
        this.permissionsByRole = {
            [_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.SUPER_ADMIN]: [
                'all.read', 'all.create', 'all.update', 'all.delete',
                'users.manage', 'organizations.manage', 'settings.manage',
                'reports.access', 'permissions.manage', 'billing.manage'
            ],
            [_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.ADMIN]: [
                'users.read', 'users.create', 'users.update', 'users.delete',
                'contacts.read', 'contacts.create', 'contacts.update', 'contacts.delete',
                'appointments.read', 'appointments.create', 'appointments.update', 'appointments.delete',
                'reports.access', 'settings.manage', 'notifications.manage'
            ],
            [_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.MANAGER]: [
                'users.read', 'contacts.read', 'contacts.create', 'contacts.update',
                'appointments.read', 'appointments.create', 'appointments.update',
                'reports.access', 'tasks.manage'
            ],
            [_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.DOCTOR]: [
                'contacts.read', 'contacts.create', 'contacts.update',
                'appointments.read', 'appointments.create', 'appointments.update',
                'medical.read', 'medical.write'
            ],
            [_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.NURSE]: [
                'contacts.read', 'contacts.update',
                'appointments.read', 'appointments.update',
                'medical.read', 'medical.write', 'vitals.manage'
            ],
            [_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.STAFF]: [
                'contacts.read', 'appointments.read', 'appointments.create',
                'tasks.read', 'tasks.create'
            ]
        };
    }
    async findByRole(role, organizationId) {
        return this.userRepository.find({
            where: {
                role: role,
                organizationId,
            },
        });
    }
    async create(data) {
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const existingUser = await this.userRepository.findOne({
                where: [
                    { email: data.email },
                    { phoneNumber: data.phoneNumber },
                ],
            });
            if (existingUser) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ConflictException(existingUser.email === data.email
                    ? 'Email already registered'
                    : 'Phone number already registered');
            }
            const hashedPassword = await (0,bcrypt__WEBPACK_IMPORTED_MODULE_4__.hash)(data.password, 12);
            const { createdBy } = data, userData = __rest(data, ["createdBy"]);
            const user = this.userRepository.create(Object.assign(Object.assign({}, userData), { password: hashedPassword }));
            await queryRunner.manager.save(user);
            const activity = this.activityRepository.create({
                userId: user.id,
                organizationId: data.organizationId,
                action: 'USER_CREATED',
                performedById: data.createdBy,
            });
            await queryRunner.manager.save(activity);
            await queryRunner.commitTransaction();
            await this.notificationsService.create({
                type: 'WELCOME',
                title: 'Welcome to the System',
                content: `Welcome ${user.firstName}! Your account has been created successfully.`,
                recipients: [{ userId: user.id }],
                organizationId: data.organizationId,
                senderId: data.createdBy,
            });
            this.eventEmitter.emit('user.created', user);
            const { password } = user, result = __rest(user, ["password"]);
            return result;
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async findById(id, relations = []) {
        return this.userRepository.findOne({
            where: { id },
            relations
        });
    }
    async findAll(query) {
        const { organizationId, role, isActive, search, department, page = 1, limit = 10, } = query;
        const queryBuilder = this.userRepository
            .createQueryBuilder('user')
            .where('user.organizationId = :organizationId', { organizationId });
        if (role) {
            queryBuilder.andWhere('user.role = :role', { role });
        }
        if (isActive !== undefined) {
            queryBuilder.andWhere('user.isActive = :isActive', { isActive });
        }
        if (department) {
            queryBuilder.andWhere('user.department = :department', { department });
        }
        if (search) {
            queryBuilder.andWhere('(LOWER(user.firstName) LIKE LOWER(:search) OR LOWER(user.lastName) LIKE LOWER(:search) OR LOWER(user.email) LIKE LOWER(:search))', { search: `%${search}%` });
        }
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__.paginate)(queryBuilder, { page, limit });
    }
    async findOne(id, organizationId) {
        const user = await this.userRepository.findOne({
            where: { id, organizationId },
        });
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('User not found');
        }
        return user;
    }
    async update(id, data) {
        const user = await this.findOne(id, data.organizationId);
        Object.assign(user, data);
        await this.userRepository.save(user);
        await this.activityRepository.save({
            userId: user.id,
            organizationId: data.organizationId,
            action: 'USER_UPDATED',
            performedById: data.updatedBy,
        });
        return user;
    }
    async updateProfile(id, data) {
        const user = await this.findOne(id, data.organizationId);
        Object.assign(user, data);
        return this.userRepository.save(user);
    }
    async updatePassword(id, data) {
        const user = await this.findOne(id, data.organizationId);
        const isValidPassword = await (0,bcrypt__WEBPACK_IMPORTED_MODULE_4__.compare)(data.currentPassword, user.password);
        if (!isValidPassword) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Current password is incorrect');
        }
        user.password = await (0,bcrypt__WEBPACK_IMPORTED_MODULE_4__.hash)(data.newPassword, 12);
        user.requirePasswordChange = false;
        await this.userRepository.save(user);
        await this.activityRepository.save({
            userId: user.id,
            organizationId: data.organizationId,
            action: 'PASSWORD_CHANGED',
            performedById: user.id,
        });
    }
    async remove(id, organizationId) {
        const user = await this.findOne(id, organizationId);
        await this.userRepository.softRemove(user);
    }
    async activate(id, organizationId) {
        const user = await this.findOne(id, organizationId);
        user.isActive = true;
        user.isLocked = false;
        return this.userRepository.save(user);
    }
    async deactivate(id, organizationId) {
        const user = await this.findOne(id, organizationId);
        user.isActive = false;
        return this.userRepository.save(user);
    }
    async getAdminCount(organizationId) {
        return this.userRepository.count({
            where: {
                organizationId,
                role: _enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.ADMIN,
                isActive: true,
            },
        });
    }
    async getActivity(id, query) {
        return this.activityRepository.find({
            where: {
                userId: id,
                organizationId: query.organizationId,
            },
            order: { createdAt: 'DESC' },
        });
    }
    async getPermissions(userId, organizationId) {
        const user = await this.findOne(userId, organizationId);
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('User not found');
        }
        return this.permissionsByRole[user.role] || [];
    }
};
UsersService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_user_entity__WEBPACK_IMPORTED_MODULE_5__.User)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_user_activity_entity__WEBPACK_IMPORTED_MODULE_6__.UserActivity)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.DataSource,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_8__.NotificationsService])
], UsersService);



/***/ }),
/* 46 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationsService: () => (/* binding */ NotificationsService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(39);
/* harmony import */ var _entities_notification_template_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47);
/* harmony import */ var _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(48);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(49);
/* harmony import */ var _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63);
/* harmony import */ var _whatsapp_services_whatsapp_services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(65);
/* harmony import */ var _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(41);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var NotificationsService_1;










let NotificationsService = NotificationsService_1 = class NotificationsService {
    constructor(notificationRepository, templateRepository, preferenceRepository, emailService, smsService, whatsappService) {
        this.notificationRepository = notificationRepository;
        this.templateRepository = templateRepository;
        this.preferenceRepository = preferenceRepository;
        this.emailService = emailService;
        this.smsService = smsService;
        this.whatsappService = whatsappService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(NotificationsService_1.name);
    }
    async notifyMessageFailure(message) {
    }
    async getNotificationChannels(organizationId, userId) {
        return [];
    }
    async getUserPreferences(organizationId, userId) {
        return {};
    }
    async getNotificationById(id, organizationId, userId) {
        return null;
    }
    async updateNotification(id, updateNotificationDto) {
        const notification = await this.notificationRepository.findOne({ where: { id } });
        if (!notification) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('Notification not found');
        }
        Object.assign(notification, updateNotificationDto);
        return this.notificationRepository.save(notification);
    }
    async notifyMessageDelivery(message) {
        console.log(`Message delivered: ${message.id}`);
    }
    async create(notificationData) {
        console.log('Notification created:', notificationData);
    }
    async send(dto) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
        try {
            const preferences = await this.preferenceRepository.findOne({
                where: {
                    userId: dto.userId,
                    category: dto.type,
                },
            });
            if (!preferences) {
                this.logger.warn(`No notification preferences found for user ${dto.userId}`);
                return;
            }
            const template = await this.templateRepository.findOne({
                where: { type: dto.type },
            });
            const content = template
                ? this.compileTemplate(template.content, Object.assign(Object.assign({}, dto.data), { title: dto.title, message: dto.message }))
                : dto.message;
            const notification = await this.notificationRepository.save({
                userId: dto.userId,
                type: dto.type,
                content,
                title: dto.title,
                metadata: Object.assign(Object.assign({}, dto.data), { organizationId: dto.organizationId, priority: dto.priority }),
                status: String(_dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_9__.NotificationStatus.PENDING),
                organizationId: dto.organizationId || '',
                senderId: dto.userId,
                channels: preferences.enabledChannels,
            });
            const notificationPromises = [];
            if (preferences.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.EMAIL) &&
                ((_c = (_b = (_a = preferences.channelSpecificSettings) === null || _a === void 0 ? void 0 : _a.email) === null || _b === void 0 ? void 0 : _b.addresses) === null || _c === void 0 ? void 0 : _c.length)) {
                const email = preferences.channelSpecificSettings.email.addresses[0];
                notificationPromises.push(this.sendEmailNotification(email, {
                    appointmentId: ((_d = dto.data) === null || _d === void 0 ? void 0 : _d.userId) || 'N/A',
                    patientName: 'User',
                    doctorName: 'N/A',
                    dateTime: new Date(),
                    location: 'N/A',
                    notes: `${dto.title}: ${dto.message}`,
                    organizationName: dto.organizationId || 'System',
                }));
            }
            if (preferences.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.SMS) &&
                ((_g = (_f = (_e = preferences.channelSpecificSettings) === null || _e === void 0 ? void 0 : _e.sms) === null || _f === void 0 ? void 0 : _f.phoneNumbers) === null || _g === void 0 ? void 0 : _g.length)) {
                const phone = preferences.channelSpecificSettings.sms.phoneNumbers[0];
                notificationPromises.push(this.sendSmsNotification(phone, {
                    appointmentId: ((_h = dto.data) === null || _h === void 0 ? void 0 : _h.userId) || 'N/A',
                    patientName: 'User',
                    dateTime: new Date(),
                    organizationName: dto.organizationId || 'System',
                }));
            }
            if (preferences.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.WHATSAPP) &&
                ((_l = (_k = (_j = preferences.channelSpecificSettings) === null || _j === void 0 ? void 0 : _j.whatsapp) === null || _k === void 0 ? void 0 : _k.numbers) === null || _l === void 0 ? void 0 : _l.length)) {
                const whatsappNumber = preferences.channelSpecificSettings.whatsapp.numbers[0];
                notificationPromises.push(this.whatsappService.sendAppointmentReminder(whatsappNumber, {
                    appointmentId: ((_m = dto.data) === null || _m === void 0 ? void 0 : _m.userId) || 'N/A',
                    patientName: 'User',
                    doctorName: 'N/A',
                    dateTime: new Date(),
                    location: 'N/A',
                    organizationName: dto.organizationId || 'System',
                }));
            }
            await Promise.all(notificationPromises);
            await this.notificationRepository
                .createQueryBuilder()
                .update(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.Notification)
                .set({ status: String(_dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_9__.NotificationStatus.SENT) })
                .where('id = :id', { id: notification.id })
                .execute();
            this.logger.log(`Successfully sent notification ${notification.id} to user ${dto.userId}`);
        }
        catch (error) {
            this.logger.error(`Failed to send notification to user ${dto.userId}:`, error);
            throw error;
        }
    }
    async notifyError(source, error) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        try {
            const notification = await this.notificationRepository.save({
                type: 'ERROR',
                source,
                content: error.message,
                title: 'System Error',
                metadata: {
                    stack: error.stack,
                    timestamp: new Date().toISOString(),
                },
                status: String(_dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_9__.NotificationStatus.PENDING),
                organizationId: '',
                senderId: 'system',
                channels: [_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.EMAIL],
            });
            const adminPreferences = await this.preferenceRepository.find({
                where: { category: 'ERROR' },
            });
            for (const pref of adminPreferences) {
                try {
                    const notificationPromises = [];
                    if (pref.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.EMAIL) &&
                        ((_c = (_b = (_a = pref.channelSpecificSettings) === null || _a === void 0 ? void 0 : _a.email) === null || _b === void 0 ? void 0 : _b.addresses) === null || _c === void 0 ? void 0 : _c.length)) {
                        const email = pref.channelSpecificSettings.email.addresses[0];
                        notificationPromises.push(this.sendEmailNotification(email, {
                            appointmentId: 'N/A',
                            patientName: 'N/A',
                            doctorName: 'N/A',
                            dateTime: new Date(),
                            location: 'N/A',
                            notes: `Error in ${source}: ${error.message}`,
                            organizationName: 'System',
                        }));
                    }
                    if (pref.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.SMS) &&
                        ((_f = (_e = (_d = pref.channelSpecificSettings) === null || _d === void 0 ? void 0 : _d.sms) === null || _e === void 0 ? void 0 : _e.phoneNumbers) === null || _f === void 0 ? void 0 : _f.length)) {
                        const phone = pref.channelSpecificSettings.sms.phoneNumbers[0];
                        notificationPromises.push(this.sendSmsNotification(phone, {
                            appointmentId: 'N/A',
                            patientName: 'Admin',
                            dateTime: new Date(),
                            organizationName: `System Error: ${source}`,
                        }));
                    }
                    if (pref.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.WHATSAPP) &&
                        ((_j = (_h = (_g = pref.channelSpecificSettings) === null || _g === void 0 ? void 0 : _g.whatsapp) === null || _h === void 0 ? void 0 : _h.numbers) === null || _j === void 0 ? void 0 : _j.length)) {
                        const whatsappNumber = pref.channelSpecificSettings.whatsapp.numbers[0];
                        notificationPromises.push(this.whatsappService.sendAppointmentReminder(whatsappNumber, {
                            appointmentId: 'N/A',
                            patientName: 'Admin',
                            doctorName: 'N/A',
                            dateTime: new Date(),
                            location: 'N/A',
                            organizationName: `System Error: ${source}`,
                        }));
                    }
                    await Promise.all(notificationPromises);
                }
                catch (notifyError) {
                    this.logger.error(`Failed to notify admin ${pref.userId}:`, notifyError);
                }
            }
            await this.notificationRepository
                .createQueryBuilder()
                .update(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.Notification)
                .set({ status: String(_dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_9__.NotificationStatus.SENT) })
                .where('id = :id', { id: notification.id })
                .execute();
        }
        catch (error) {
            this.logger.error('Failed to process error notification:', error);
            throw error;
        }
    }
    async sendNotification(userId, type, data) {
        try {
            const preferences = await this.preferenceRepository.findOne({
                where: {
                    userId,
                    category: type,
                },
            });
            if (!preferences) {
                this.logger.warn(`No notification preferences found for user ${userId}`);
                return;
            }
            const template = await this.templateRepository.findOne({
                where: { type },
            });
            if (!template) {
                throw new Error(`Template not found for notification type: ${type}`);
            }
            const notification = await this.notificationRepository.save({
                userId,
                type,
                content: this.compileTemplate(template.content, data),
                title: data.title || 'Notification',
                metadata: data,
                status: String(_dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_9__.NotificationStatus.PENDING),
                organizationId: data.organizationId || '',
                senderId: userId,
                channels: preferences.enabledChannels,
            });
            const notificationPromises = [];
            if (preferences.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.EMAIL) &&
                data.email) {
                notificationPromises.push(this.sendEmailNotification(data.email, {
                    appointmentId: data.appointmentId || 'N/A',
                    patientName: data.patientName || 'N/A',
                    doctorName: data.doctorName || 'N/A',
                    dateTime: data.dateTime || new Date(),
                    location: data.location || 'N/A',
                    notes: data.notes,
                    organizationName: data.organizationName || 'System',
                }));
            }
            if (preferences.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.SMS) &&
                data.phone) {
                notificationPromises.push(this.sendSmsNotification(data.phone, {
                    appointmentId: data.appointmentId || 'N/A',
                    patientName: data.patientName || 'N/A',
                    dateTime: data.dateTime || new Date(),
                    organizationName: data.organizationName || 'System',
                }));
            }
            if (preferences.enabledChannels.includes(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.WHATSAPP) &&
                data.whatsapp) {
                notificationPromises.push(this.whatsappService.sendAppointmentReminder(data.whatsapp, {
                    appointmentId: data.appointmentId || 'N/A',
                    patientName: data.patientName || 'N/A',
                    doctorName: data.doctorName || 'N/A',
                    dateTime: data.dateTime || new Date(),
                    location: data.location || 'N/A',
                    organizationName: data.organizationName || 'System',
                }));
            }
            await Promise.all(notificationPromises);
            await this.notificationRepository
                .createQueryBuilder()
                .update(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.Notification)
                .set({ status: String(_dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_9__.NotificationStatus.SENT) })
                .where('id = :id', { id: notification.id })
                .execute();
            this.logger.log(`Successfully sent notification ${notification.id} to user ${userId}`);
        }
        catch (error) {
            this.logger.error(`Failed to send notification to user ${userId}:`, error);
            throw error;
        }
    }
    compileTemplate(template, data) {
        return template.replace(/\{\{([^}]+)\}\}/g, (match, key) => {
            const value = key.split('.').reduce((obj, k) => obj === null || obj === void 0 ? void 0 : obj[k], data);
            return value || '';
        });
    }
    async markAsRead(notificationId, userId) {
        await this.notificationRepository
            .createQueryBuilder()
            .update(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.Notification)
            .set({
            readAt: new Date(),
            read: true
        })
            .where('id = :id AND userId = :userId', { id: notificationId, userId })
            .execute();
    }
    async markAllAsRead(userId) {
        await this.notificationRepository
            .createQueryBuilder()
            .update(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.Notification)
            .set({
            readAt: new Date(),
            read: true
        })
            .where('userId = :userId AND readAt IS NULL', { userId })
            .execute();
    }
    async getUnreadCount(userId) {
        return this.notificationRepository.count({
            where: {
                userId,
                readAt: null
            },
        });
    }
    async getUserNotifications(userId, options = {}) {
        const { skip = 0, take = 10, includeRead = false } = options;
        const queryBuilder = this.notificationRepository
            .createQueryBuilder('notification')
            .where('notification.userId = :userId', { userId });
        if (!includeRead) {
            queryBuilder.andWhere('notification.readAt IS NULL');
        }
        const [notifications, total] = await queryBuilder
            .orderBy('notification.createdAt', 'DESC')
            .skip(skip)
            .take(take)
            .getManyAndCount();
        return { notifications, total };
    }
    async sendEmailNotification(email, data) {
        var _a, _b;
        try {
            await ((_b = (_a = this.emailService).sendEmail) === null || _b === void 0 ? void 0 : _b.call(_a, {
                to: email,
                subject: `Appointment Reminder: ${data.organizationName}`,
                html: this.formatEmailContent(data)
            }));
            this.logger.log(`Sent email notification to ${email}`);
        }
        catch (error) {
            this.logger.error(`Error sending email to ${email}:`, error);
            this.logger.log(`Would send email to ${email} with content: ${JSON.stringify(data)}`);
        }
    }
    async sendSmsNotification(phone, data) {
        var _a, _b;
        try {
            await ((_b = (_a = this.smsService).sendSms) === null || _b === void 0 ? void 0 : _b.call(_a, phone, this.formatSmsContent(data)));
            this.logger.log(`Sent SMS notification to ${phone}`);
        }
        catch (error) {
            this.logger.error(`Error sending SMS to ${phone}:`, error);
            this.logger.log(`Would send SMS to ${phone} with content: ${JSON.stringify(data)}`);
        }
    }
    formatEmailContent(data) {
        return `
      <div>
        <h2>Appointment Reminder</h2>
        <p>Hello ${data.patientName},</p>
        <p>This is a reminder of your appointment with ${data.doctorName} on ${data.dateTime.toLocaleString()}</p>
        <p>Location: ${data.location}</p>
        ${data.notes ? `<p>Notes: ${data.notes}</p>` : ''}
        <p>Regards,<br>${data.organizationName}</p>
      </div>
    `;
    }
    formatSmsContent(data) {
        return `Hi ${data.patientName}, reminder of your appointment with ${data.organizationName} on ${data.dateTime.toLocaleString()}`;
    }
};
NotificationsService = NotificationsService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_3__.Notification)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_notification_template_entity__WEBPACK_IMPORTED_MODULE_4__.NotificationTemplate)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_5__.NotificationPreference)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _shared_services_email_service__WEBPACK_IMPORTED_MODULE_6__.EmailService,
        _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_7__.SmsService,
        _whatsapp_services_whatsapp_services__WEBPACK_IMPORTED_MODULE_8__.WhatsappService])
], NotificationsService);



/***/ }),
/* 47 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationTemplate: () => (/* binding */ NotificationTemplate)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let NotificationTemplate = class NotificationTemplate {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, subject: { required: true, type: () => String }, content: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, channels: { required: true, type: () => [String] }, isActive: { required: true, type: () => Boolean }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, variables: { required: true }, channelSpecificContent: { required: true, type: () => ({ email: { required: false, type: () => ({ htmlTemplate: { required: false, type: () => String }, plainTextTemplate: { required: false, type: () => String } }) }, sms: { required: false, type: () => ({ template: { required: true, type: () => String } }) }, push: { required: false, type: () => ({ title: { required: true, type: () => String }, body: { required: true, type: () => String } }) }, webhook: { required: false, type: () => ({ payload: { required: true, type: () => Object } }) } }) }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, lastUsedAt: { required: true, type: () => Date }, useCount: { required: true, type: () => Number } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], NotificationTemplate.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], NotificationTemplate.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], NotificationTemplate.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], NotificationTemplate.prototype, "subject", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text'),
    __metadata("design:type", String)
], NotificationTemplate.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('json', { nullable: true }),
    __metadata("design:type", Object)
], NotificationTemplate.prototype, "metadata", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'array',
        items: { type: 'string' },
        description: 'Supported notification channels'
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('simple-array'),
    __metadata("design:type", Array)
], NotificationTemplate.prototype, "channels", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], NotificationTemplate.prototype, "isActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], NotificationTemplate.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization)
], NotificationTemplate.prototype, "organization", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'array',
        items: {
            type: 'object',
            properties: {
                name: { type: 'string' },
                type: { type: 'string', enum: ['string', 'number', 'boolean', 'date'] },
                required: { type: 'boolean' },
                defaultValue: { type: 'string', nullable: true }
            },
            additionalProperties: false
        },
        nullable: true
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('json', { nullable: true }),
    __metadata("design:type", Array)
], NotificationTemplate.prototype, "variables", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'object',
        properties: {
            email: {
                type: 'object',
                properties: {
                    htmlTemplate: { type: 'string' },
                    plainTextTemplate: { type: 'string' }
                },
                additionalProperties: true
            },
            sms: {
                type: 'object',
                properties: {
                    template: { type: 'string' }
                },
                additionalProperties: true
            },
            push: {
                type: 'object',
                properties: {
                    title: { type: 'string' },
                    body: { type: 'string' }
                },
                additionalProperties: true
            },
            webhook: {
                type: 'object',
                properties: {
                    payload: {
                        type: 'object',
                        additionalProperties: true
                    }
                },
                additionalProperties: true
            }
        },
        additionalProperties: true,
        nullable: true
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('json', { nullable: true }),
    __metadata("design:type", Object)
], NotificationTemplate.prototype, "channelSpecificContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], NotificationTemplate.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], NotificationTemplate.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], NotificationTemplate.prototype, "lastUsedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 0 }),
    __metadata("design:type", Number)
], NotificationTemplate.prototype, "useCount", void 0);
NotificationTemplate = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('notification_templates')
], NotificationTemplate);



/***/ }),
/* 48 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationCategory: () => (/* binding */ NotificationCategory),
/* harmony export */   NotificationChannel: () => (/* binding */ NotificationChannel),
/* harmony export */   NotificationFrequency: () => (/* binding */ NotificationFrequency),
/* harmony export */   NotificationPreference: () => (/* binding */ NotificationPreference)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var NotificationChannel;
(function (NotificationChannel) {
    NotificationChannel["EMAIL"] = "EMAIL";
    NotificationChannel["SMS"] = "SMS";
    NotificationChannel["PUSH"] = "PUSH";
    NotificationChannel["IN_APP"] = "IN_APP";
    NotificationChannel["WHATSAPP"] = "WHATSAPP";
    NotificationChannel["SLACK"] = "SLACK";
    NotificationChannel["WEBHOOK"] = "WEBHOOK";
})(NotificationChannel || (NotificationChannel = {}));
var NotificationCategory;
(function (NotificationCategory) {
    NotificationCategory["APPOINTMENT"] = "APPOINTMENT";
    NotificationCategory["TICKET"] = "TICKET";
    NotificationCategory["SYSTEM"] = "SYSTEM";
    NotificationCategory["SECURITY"] = "SECURITY";
    NotificationCategory["BILLING"] = "BILLING";
    NotificationCategory["MESSAGING"] = "MESSAGING";
    NotificationCategory["TASK"] = "TASK";
    NotificationCategory["REMINDER"] = "REMINDER";
    NotificationCategory["ALERT"] = "ALERT";
    NotificationCategory["NEWS"] = "NEWS";
})(NotificationCategory || (NotificationCategory = {}));
var NotificationFrequency;
(function (NotificationFrequency) {
    NotificationFrequency["IMMEDIATELY"] = "IMMEDIATELY";
    NotificationFrequency["DAILY_DIGEST"] = "DAILY_DIGEST";
    NotificationFrequency["WEEKLY_DIGEST"] = "WEEKLY_DIGEST";
    NotificationFrequency["CUSTOM"] = "CUSTOM";
    NotificationFrequency["NEVER"] = "NEVER";
})(NotificationFrequency || (NotificationFrequency = {}));
let NotificationPreference = class NotificationPreference {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, userId: { required: true, type: () => String }, category: { required: true, enum: (__webpack_require__(48).NotificationCategory) }, channels: { required: true, enum: (__webpack_require__(48).NotificationChannel), isArray: true }, enabledChannels: { required: true, enum: (__webpack_require__(48).NotificationChannel), isArray: true }, frequency: { required: true, enum: (__webpack_require__(48).NotificationFrequency) }, enabled: { required: true, type: () => Boolean }, startTime: { required: false, type: () => String }, endTime: { required: false, type: () => String }, workDays: { required: false, type: () => [String] }, customSchedule: { required: false, type: () => ({ days: { required: true, type: () => [String] }, times: { required: true, type: () => [String] }, timezone: { required: true, type: () => String } }) }, channelSpecificSettings: { required: false, type: () => ({ email: { required: false, type: () => ({ addresses: { required: false, type: () => [String] }, format: { required: false, type: () => Object }, includeAttachments: { required: false, type: () => Boolean } }) }, sms: { required: false, type: () => ({ phoneNumbers: { required: false, type: () => [String] }, includeMedia: { required: false, type: () => Boolean } }) }, push: { required: false, type: () => ({ deviceTokens: { required: false, type: () => [String] }, sound: { required: false, type: () => Boolean }, badge: { required: false, type: () => Boolean } }) }, inApp: { required: false, type: () => ({ showBadge: { required: false, type: () => Boolean }, playSound: { required: false, type: () => Boolean }, markAsRead: { required: false, type: () => Boolean } }) }, whatsapp: { required: false, type: () => ({ numbers: { required: false, type: () => [String] }, allowMedia: { required: false, type: () => Boolean } }) }, slack: { required: false, type: () => ({ channels: { required: false, type: () => [String] }, mentionUser: { required: false, type: () => Boolean } }) } }) }, filters: { required: false, type: () => ({ priority: { required: false, type: () => [String] }, status: { required: false, type: () => [String] }, types: { required: false, type: () => [String] }, senders: { required: false, type: () => [String] }, keywords: { required: false, type: () => [String] }, excludeKeywords: { required: false, type: () => [String] } }) }, importanceThreshold: { required: true, type: () => Number }, muteAll: { required: true, type: () => Boolean }, muteUntil: { required: false, type: () => Date }, digestSettings: { required: false, type: () => ({ groupBy: { required: false, type: () => [String] }, sortBy: { required: false, type: () => String }, maxItems: { required: false, type: () => Number }, format: { required: false, type: () => String } }) }, allowReminders: { required: true, type: () => Boolean }, reminderInterval: { required: false, type: () => Number }, maxReminders: { required: true, type: () => Number }, metadata: { required: false, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date }, createdById: { required: false, type: () => String }, updatedById: { required: false, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, user: { required: true, type: () => (__webpack_require__(21).User) }, createdBy: { required: false, type: () => (__webpack_require__(21).User) }, updatedBy: { required: false, type: () => (__webpack_require__(21).User) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], NotificationPreference.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], NotificationPreference.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], NotificationPreference.prototype, "userId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: NotificationCategory,
    }),
    __metadata("design:type", String)
], NotificationPreference.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'array',
        items: {
            type: 'string',
            enum: ['EMAIL', 'SMS', 'PUSH', 'IN_APP', 'WHATSAPP', 'SLACK', 'WEBHOOK']
        },
        description: 'Notification channels'
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: NotificationChannel,
        array: true,
        default: [NotificationChannel.EMAIL, NotificationChannel.IN_APP],
    }),
    __metadata("design:type", Array)
], NotificationPreference.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'array',
        items: {
            type: 'string',
            enum: ['EMAIL', 'SMS', 'PUSH', 'IN_APP', 'WHATSAPP', 'SLACK', 'WEBHOOK']
        },
        description: 'Enabled notification channels'
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: NotificationChannel,
        array: true,
        default: [NotificationChannel.EMAIL, NotificationChannel.IN_APP],
    }),
    __metadata("design:type", Array)
], NotificationPreference.prototype, "enabledChannels", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: NotificationFrequency,
        default: NotificationFrequency.IMMEDIATELY,
    }),
    __metadata("design:type", String)
], NotificationPreference.prototype, "frequency", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], NotificationPreference.prototype, "enabled", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'time', nullable: true }),
    __metadata("design:type", String)
], NotificationPreference.prototype, "startTime", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'time', nullable: true }),
    __metadata("design:type", String)
], NotificationPreference.prototype, "endTime", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { array: true, nullable: true }),
    __metadata("design:type", Array)
], NotificationPreference.prototype, "workDays", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], NotificationPreference.prototype, "customSchedule", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], NotificationPreference.prototype, "channelSpecificSettings", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], NotificationPreference.prototype, "filters", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', default: 0 }),
    __metadata("design:type", Number)
], NotificationPreference.prototype, "importanceThreshold", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], NotificationPreference.prototype, "muteAll", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], NotificationPreference.prototype, "muteUntil", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], NotificationPreference.prototype, "digestSettings", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], NotificationPreference.prototype, "allowReminders", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', nullable: true }),
    __metadata("design:type", Number)
], NotificationPreference.prototype, "reminderInterval", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', default: 3 }),
    __metadata("design:type", Number)
], NotificationPreference.prototype, "maxReminders", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], NotificationPreference.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], NotificationPreference.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], NotificationPreference.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], NotificationPreference.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], NotificationPreference.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], NotificationPreference.prototype, "updatedById", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'object',
        properties: {
            id: { type: 'string' },
            name: { type: 'string' }
        }
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization)
], NotificationPreference.prototype, "organization", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'object',
        properties: {
            id: { type: 'string' },
            firstName: { type: 'string' },
            lastName: { type: 'string' },
            email: { type: 'string' }
        }
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'userId' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User)
], NotificationPreference.prototype, "user", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'object',
        properties: {
            id: { type: 'string' },
            firstName: { type: 'string' },
            lastName: { type: 'string' }
        },
        nullable: true
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'createdById' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User)
], NotificationPreference.prototype, "createdBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: 'object',
        properties: {
            id: { type: 'string' },
            firstName: { type: 'string' },
            lastName: { type: 'string' }
        },
        nullable: true
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'updatedById' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User)
], NotificationPreference.prototype, "updatedBy", void 0);
NotificationPreference = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('notification_preferences'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'userId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'category']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Check)(`"startTime" < "endTime"`)
], NotificationPreference);



/***/ }),
/* 49 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmailService: () => (/* binding */ EmailService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50);
/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(nodemailer__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(52);
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(dns__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _modules_notifications_entities_email_template_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(53);
/* harmony import */ var _modules_notifications_entities_email_log_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(54);
/* harmony import */ var _modules_notifications_entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(56);
/* harmony import */ var _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(55);
/* harmony import */ var _modules_domain_enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(57);
/* harmony import */ var _modules_domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(58);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var EmailService_1;













let EmailService = EmailService_1 = class EmailService {
    constructor(configService, domainVerificationService, templateRepository, logRepository, queueRepository) {
        this.configService = configService;
        this.domainVerificationService = domainVerificationService;
        this.templateRepository = templateRepository;
        this.logRepository = logRepository;
        this.queueRepository = queueRepository;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(EmailService_1.name);
        this.maxRetries = 3;
        this.resolveTxt = (0,util__WEBPACK_IMPORTED_MODULE_5__.promisify)(dns__WEBPACK_IMPORTED_MODULE_6__.resolveTxt);
        this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_4__.createTransport({
            host: this.configService.get('SMTP_HOST'),
            port: this.configService.get('SMTP_PORT'),
            secure: this.configService.get('SMTP_SECURE'),
            auth: {
                user: this.configService.get('SMTP_USER'),
                pass: this.configService.get('SMTP_PASSWORD'),
            },
            pool: true,
            maxConnections: 5,
            rateDelta: 1000,
            rateLimit: 5,
        });
    }
    async send(notification) {
        return this.sendEmail({
            to: notification.recipient,
            subject: notification.title,
            template: notification.template,
            context: notification.data,
            metadata: { notificationId: notification.id }
        });
    }
    async sendEmail(options) {
        try {
            let htmlContent = '';
            let textContent = '';
            if (options.template) {
                const template = await this.templateRepository.findOne({
                    where: { name: options.template }
                });
                if (!template) {
                    throw new Error(`Email template ${options.template} not found`);
                }
                ({ html: htmlContent, text: textContent } = await this.processTemplate(template, options.context || {}));
            }
            const emailData = {
                from: this.configService.get('MAIL_FROM'),
                to: Array.isArray(options.to) ? options.to.join(',') : options.to,
                cc: options.cc,
                bcc: options.bcc,
                replyTo: options.replyTo,
                subject: options.subject,
                html: htmlContent,
                text: textContent || this.stripHtml(htmlContent),
                attachments: options.attachments,
                priority: options.priority || 'normal',
                headers: this.generateHeaders(options),
            };
            if (this.configService.get('EMAIL_QUEUE_ENABLED')) {
                await this.queueEmail(emailData, options.metadata);
                return true;
            }
            else {
                const result = await this.transporter.sendMail(emailData);
                await this.logEmail(emailData, result, options.metadata);
                return true;
            }
        }
        catch (error) {
            this.logger.error('Error sending email:', error);
            throw error;
        }
    }
    async processTemplate(template, context) {
        try {
            let html = template.htmlContent;
            let text = template.textContent || '';
            Object.entries(context).forEach(([key, value]) => {
                const regex = new RegExp(`{{\\s*${key}\\s*}}`, 'g');
                html = html.replace(regex, String(value));
                text = text.replace(regex, String(value));
            });
            return { html, text };
        }
        catch (error) {
            this.logger.error('Error processing email template:', error);
            throw error;
        }
    }
    async queueEmail(emailData, metadata) {
        const queueEntry = this.queueRepository.create({
            data: emailData,
            metadata,
            status: _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.QUEUED,
            priority: emailData.priority === 'high' ? 1 : emailData.priority === 'low' ? 3 : 2,
            attempts: 0,
            maxAttempts: this.maxRetries,
        });
        await this.queueRepository.save(queueEntry);
    }
    async logEmail(emailData, result, metadata) {
        const log = this.logRepository.create({
            recipient: emailData.to,
            subject: emailData.subject,
            template: emailData.template,
            metadata,
            messageId: result.messageId,
            status: _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.SENT,
            sentAt: new Date(),
        });
        await this.logRepository.save(log);
    }
    stripHtml(html) {
        return html.replace(/<[^>]*>/g, '')
            .replace(/\s+/g, ' ')
            .trim();
    }
    generateHeaders(options) {
        const headers = {
            'X-Message-ID': `${Date.now()}-${Math.random().toString(36).substring(2, 15)}`,
            'X-Priority': options.priority === 'high' ? '1' : options.priority === 'low' ? '5' : '3',
            'X-Environment': this.configService.get('NODE_ENV', 'development'),
            'X-Application': this.configService.get('APP_NAME', 'DefaultAppName'),
        };
        if (options.metadata) {
            headers['X-Metadata'] = Buffer.from(JSON.stringify(options.metadata)).toString('base64');
        }
        return headers;
    }
    async verifyEmailDomain(domain) {
        try {
            const verificationStatus = await this.domainVerificationService.getDomainVerificationStatus(domain);
            if (!verificationStatus) {
                throw new Error(`Domain ${domain} not found`);
            }
            const [hasDmarc, hasSpf] = await Promise.all([
                this.verifyDmarcRecord(domain),
                this.verifySpfRecord(domain)
            ]);
            if (!hasDmarc) {
                this.logger.warn(`DMARC record not found for domain ${domain}`);
            }
            if (!hasSpf) {
                this.logger.warn(`SPF record not found for domain ${domain}`);
            }
            return verificationStatus.status === _modules_domain_enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_11__.DomainVerificationStatus.VERIFIED && hasDmarc && hasSpf;
        }
        catch (error) {
            this.logger.error(`Error verifying email domain ${domain}:`, error);
            throw error;
        }
    }
    async verifyDmarcRecord(domain) {
        try {
            const records = await this.resolveTxt(`_dmarc.${domain}`);
            return records.some(record => record.join('').toLowerCase().includes('v=dmarc1'));
        }
        catch (error) {
            return false;
        }
    }
    async verifySpfRecord(domain) {
        try {
            const records = await this.resolveTxt(domain);
            return records.some(record => record.join('').toLowerCase().includes('v=spf1'));
        }
        catch (error) {
            return false;
        }
    }
    async getEmailStatus(messageId) {
        try {
            return await this.logRepository.findOne({
                where: { messageId }
            });
        }
        catch (error) {
            this.logger.error(`Error getting email status for message ${messageId}:`, error);
            throw error;
        }
    }
    async processEmailQueue(batchSize = 10) {
        try {
            const queuedEmails = await this.queueRepository.find({
                where: {
                    status: _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.QUEUED,
                    attempts: (0,typeorm__WEBPACK_IMPORTED_MODULE_3__.LessThan)(this.maxRetries)
                },
                order: {
                    createdAt: 'ASC'
                },
                take: batchSize
            });
            for (const queuedEmail of queuedEmails) {
                try {
                    const result = await this.transporter.sendMail(queuedEmail.data);
                    await this.logEmail(queuedEmail.data, result, queuedEmail.metadata);
                    queuedEmail.status = _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.SENT;
                    queuedEmail.sentAt = new Date();
                    await this.queueRepository.save(queuedEmail);
                }
                catch (error) {
                    queuedEmail.attempts += 1;
                    queuedEmail.lastError = error.message;
                    queuedEmail.status = queuedEmail.attempts >= this.maxRetries
                        ? _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.FAILED
                        : _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.QUEUED;
                    await this.queueRepository.save(queuedEmail);
                }
            }
        }
        catch (error) {
            this.logger.error('Error processing email queue:', error);
            throw error;
        }
    }
    async cleanupEmailQueue(days = 30) {
        try {
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - days);
            await this.queueRepository.delete({
                status: (0,typeorm__WEBPACK_IMPORTED_MODULE_3__.In)([_modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.SENT, _modules_notifications_enums_email_status_enum__WEBPACK_IMPORTED_MODULE_10__.EmailStatus.FAILED]),
                updatedAt: (0,typeorm__WEBPACK_IMPORTED_MODULE_3__.LessThan)(cutoffDate)
            });
        }
        catch (error) {
            this.logger.error('Error cleaning up email queue:', error);
            throw error;
        }
    }
};
EmailService = EmailService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_modules_notifications_entities_email_template_entity__WEBPACK_IMPORTED_MODULE_7__.EmailTemplate)),
    __param(3, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_modules_notifications_entities_email_log_entity__WEBPACK_IMPORTED_MODULE_8__.EmailLog)),
    __param(4, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_modules_notifications_entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_9__.EmailQueue)),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService,
        _modules_domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_12__.DomainVerificationService,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository])
], EmailService);



/***/ }),
/* 50 */
/***/ ((module) => {

module.exports = require("nodemailer");

/***/ }),
/* 51 */
/***/ ((module) => {

module.exports = require("util");

/***/ }),
/* 52 */
/***/ ((module) => {

module.exports = require("dns");

/***/ }),
/* 53 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmailTemplate: () => (/* binding */ EmailTemplate)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



let EmailTemplate = class EmailTemplate {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, content: { required: true, type: () => String }, type: { required: true, type: () => String }, name: { required: true, type: () => String }, subject: { required: true, type: () => String }, htmlContent: { required: true, type: () => String }, textContent: { required: true, type: () => String }, variables: { required: true, type: () => Object }, description: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], EmailTemplate.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], EmailTemplate.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], EmailTemplate.prototype, "subject", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text'),
    __metadata("design:type", String)
], EmailTemplate.prototype, "htmlContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "textContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], EmailTemplate.prototype, "variables", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], EmailTemplate.prototype, "isActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], EmailTemplate.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization)
], EmailTemplate.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], EmailTemplate.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], EmailTemplate.prototype, "updatedAt", void 0);
EmailTemplate = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('email_templates')
], EmailTemplate);



/***/ }),
/* 54 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmailLog: () => (/* binding */ EmailLog)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _enums_email_status_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
/* harmony import */ var _email_template_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(53);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





let EmailLog = class EmailLog {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, templateId: { required: true, type: () => String }, template: { required: true, type: () => (__webpack_require__(53).EmailTemplate) }, recipient: { required: true, type: () => String }, subject: { required: true, type: () => String }, htmlContent: { required: true, type: () => String }, textContent: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, status: { required: true, enum: (__webpack_require__(55).EmailStatus) }, error: { required: true, type: () => String }, messageId: { required: true, type: () => String }, providerResponse: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, sentAt: { required: true, type: () => Date }, deliveredAt: { required: true, type: () => Date }, openedAt: { required: true, type: () => Date }, clickedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], EmailLog.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], EmailLog.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization)
], EmailLog.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], EmailLog.prototype, "templateId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _email_template_entity__WEBPACK_IMPORTED_MODULE_4__.EmailTemplate),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'templateId' }),
    __metadata("design:type", _email_template_entity__WEBPACK_IMPORTED_MODULE_4__.EmailTemplate)
], EmailLog.prototype, "template", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], EmailLog.prototype, "recipient", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailLog.prototype, "subject", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], EmailLog.prototype, "htmlContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], EmailLog.prototype, "textContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], EmailLog.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_email_status_enum__WEBPACK_IMPORTED_MODULE_2__.EmailStatus,
        default: _enums_email_status_enum__WEBPACK_IMPORTED_MODULE_2__.EmailStatus.PENDING
    }),
    __metadata("design:type", String)
], EmailLog.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailLog.prototype, "error", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailLog.prototype, "messageId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailLog.prototype, "providerResponse", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], EmailLog.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], EmailLog.prototype, "sentAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], EmailLog.prototype, "deliveredAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], EmailLog.prototype, "openedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], EmailLog.prototype, "clickedAt", void 0);
EmailLog = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('email_logs')
], EmailLog);



/***/ }),
/* 55 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DomainVerificationStatus: () => (/* binding */ DomainVerificationStatus),
/* harmony export */   EmailStatus: () => (/* binding */ EmailStatus)
/* harmony export */ });
var EmailStatus;
(function (EmailStatus) {
    EmailStatus["PENDING"] = "PENDING";
    EmailStatus["SENDING"] = "SENDING";
    EmailStatus["SENT"] = "SENT";
    EmailStatus["FAILED"] = "FAILED";
    EmailStatus["DELIVERED"] = "DELIVERED";
    EmailStatus["OPENED"] = "OPENED";
    EmailStatus["CLICKED"] = "CLICKED";
    EmailStatus["BOUNCED"] = "BOUNCED";
    EmailStatus["SPAM"] = "SPAM";
    EmailStatus["UNSUBSCRIBED"] = "UNSUBSCRIBED";
    EmailStatus["QUEUED"] = "QUEUED";
})(EmailStatus || (EmailStatus = {}));
var DomainVerificationStatus;
(function (DomainVerificationStatus) {
    DomainVerificationStatus["PENDING"] = "PENDING";
    DomainVerificationStatus["VERIFIED"] = "VERIFIED";
    DomainVerificationStatus["FAILED"] = "FAILED";
    DomainVerificationStatus["EXPIRED"] = "EXPIRED";
})(DomainVerificationStatus || (DomainVerificationStatus = {}));


/***/ }),
/* 56 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmailQueue: () => (/* binding */ EmailQueue)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _enums_email_status_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
/* harmony import */ var _email_template_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(53);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





let EmailQueue = class EmailQueue {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, priority: { required: true, type: () => Number }, attempts: { required: true, type: () => Number }, maxAttempts: { required: true, type: () => Number }, lastError: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, sentAt: { required: true, type: () => Date }, data: { required: true, type: () => Object }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, templateId: { required: true, type: () => String }, template: { required: true, type: () => (__webpack_require__(53).EmailTemplate) }, recipient: { required: true, type: () => String }, subject: { required: true, type: () => String }, htmlContent: { required: true, type: () => String }, textContent: { required: true, type: () => String }, variables: { required: true, type: () => Object }, metadata: { required: true, type: () => Object }, status: { required: true, enum: (__webpack_require__(55).EmailStatus) }, scheduledFor: { required: true, type: () => Date }, processedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], EmailQueue.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", Number)
], EmailQueue.prototype, "priority", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", Number)
], EmailQueue.prototype, "attempts", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", Number)
], EmailQueue.prototype, "maxAttempts", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailQueue.prototype, "lastError", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], EmailQueue.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], EmailQueue.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], EmailQueue.prototype, "sentAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('json'),
    __metadata("design:type", Object)
], EmailQueue.prototype, "data", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], EmailQueue.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization)
], EmailQueue.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], EmailQueue.prototype, "templateId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _email_template_entity__WEBPACK_IMPORTED_MODULE_4__.EmailTemplate),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'templateId' }),
    __metadata("design:type", _email_template_entity__WEBPACK_IMPORTED_MODULE_4__.EmailTemplate)
], EmailQueue.prototype, "template", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], EmailQueue.prototype, "recipient", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailQueue.prototype, "subject", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], EmailQueue.prototype, "htmlContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], EmailQueue.prototype, "textContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], EmailQueue.prototype, "variables", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], EmailQueue.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_email_status_enum__WEBPACK_IMPORTED_MODULE_2__.EmailStatus,
        default: _enums_email_status_enum__WEBPACK_IMPORTED_MODULE_2__.EmailStatus.PENDING
    }),
    __metadata("design:type", String)
], EmailQueue.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], EmailQueue.prototype, "scheduledFor", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], EmailQueue.prototype, "processedAt", void 0);
EmailQueue = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('email_queue')
], EmailQueue);



/***/ }),
/* 57 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DomainVerificationStatus: () => (/* binding */ DomainVerificationStatus)
/* harmony export */ });
var DomainVerificationStatus;
(function (DomainVerificationStatus) {
    DomainVerificationStatus["UNVERIFIED"] = "unverified";
    DomainVerificationStatus["PENDING"] = "pending";
    DomainVerificationStatus["IN_PROGRESS"] = "in_progress";
    DomainVerificationStatus["VERIFIED"] = "verified";
    DomainVerificationStatus["FAILED"] = "failed";
    DomainVerificationStatus["EXPIRED"] = "expired";
    DomainVerificationStatus["CANCELLED"] = "cancelled";
    DomainVerificationStatus["SUSPENDED"] = "suspended";
    DomainVerificationStatus["ACTION_REQUIRED"] = "action_required";
    DomainVerificationStatus["INVALIDATED"] = "invalidated";
    DomainVerificationStatus["RETRYING"] = "retrying";
    DomainVerificationStatus["REQUIRES_REVERIFICATION"] = "requires_reverification";
    DomainVerificationStatus["BLOCKED"] = "blocked";
    DomainVerificationStatus["UNCHECKED"] = "unchecked";
    DomainVerificationStatus["AWAITING_RESPONSE"] = "awaiting_response";
    DomainVerificationStatus["VERIFIED_WITH_WARNINGS"] = "verified_with_warnings";
})(DomainVerificationStatus || (DomainVerificationStatus = {}));


/***/ }),
/* 58 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DomainVerificationService: () => (/* binding */ DomainVerificationService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(52);
/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dns__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _entities_domain_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59);
/* harmony import */ var _entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(61);
/* harmony import */ var _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(57);
/* harmony import */ var _enums_domain_verification_method_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(62);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var DomainVerificationService_1;










let DomainVerificationService = DomainVerificationService_1 = class DomainVerificationService {
    constructor(domainRepository, verificationTokenRepository, configService) {
        this.domainRepository = domainRepository;
        this.verificationTokenRepository = verificationTokenRepository;
        this.configService = configService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(DomainVerificationService_1.name);
        this.resolveTxt = (0,util__WEBPACK_IMPORTED_MODULE_5__.promisify)(dns__WEBPACK_IMPORTED_MODULE_4__.resolveTxt);
        this.resolveCname = (0,util__WEBPACK_IMPORTED_MODULE_5__.promisify)(dns__WEBPACK_IMPORTED_MODULE_4__.resolveCname);
    }
    async initiateDomainVerification(domainId, method) {
        try {
            const domain = await this.domainRepository.findOneByOrFail({ id: domainId });
            const token = await this.generateVerificationToken(domain, method);
            const verificationToken = this.verificationTokenRepository.create({
                domain,
                token: token,
                method,
                status: _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.PENDING,
                expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000),
            });
            await this.verificationTokenRepository.save(verificationToken);
            domain.verificationStatus = _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.PENDING;
            await this.domainRepository.save(domain);
            return verificationToken;
        }
        catch (error) {
            this.logger.error(`Error initiating domain verification: ${error.message}`);
            throw error;
        }
    }
    async verifyDomain(domainId) {
        try {
            const domain = await this.domainRepository.findOne({
                where: { id: domainId },
                relations: ['verificationTokens']
            });
            if (!domain) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Domain with ID ${domainId} not found`);
            }
            const activeToken = domain.verificationTokens.find(token => token.status === _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.PENDING);
            if (!activeToken) {
                throw new Error('No active verification token found');
            }
            let isVerified = false;
            switch (activeToken.method) {
                case _enums_domain_verification_method_enum__WEBPACK_IMPORTED_MODULE_9__.DomainVerificationMethod.DNS_TXT:
                    isVerified = await this.verifyDnsTxtRecord(domain.name, activeToken.token);
                    break;
                case _enums_domain_verification_method_enum__WEBPACK_IMPORTED_MODULE_9__.DomainVerificationMethod.DNS_CNAME:
                    isVerified = await this.verifyDnsCnameRecord(domain.name, activeToken.token);
                    break;
                case _enums_domain_verification_method_enum__WEBPACK_IMPORTED_MODULE_9__.DomainVerificationMethod.FILE:
                    isVerified = await this.verifyFileRecord(domain.name, activeToken.token);
                    break;
                default:
                    throw new Error(`Unsupported verification method: ${activeToken.method}`);
            }
            activeToken.status = isVerified
                ? _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.VERIFIED
                : _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.FAILED;
            activeToken.verifiedAt = isVerified ? new Date() : undefined;
            await this.verificationTokenRepository.save(activeToken);
            domain.verificationStatus = isVerified
                ? _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.VERIFIED
                : _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.FAILED;
            domain.verifiedAt = isVerified ? new Date() : undefined;
            await this.domainRepository.save(domain);
            return isVerified;
        }
        catch (error) {
            this.logger.error(`Error verifying domain: ${error.message}`);
            throw error;
        }
    }
    async verifyDnsTxtRecord(domain, token) {
        try {
            const records = await this.resolveTxt(domain);
            const flatRecords = records.flat();
            return flatRecords.some(record => record.includes(token));
        }
        catch (error) {
            this.logger.error(`Error verifying DNS TXT record: ${error.message}`);
            return false;
        }
    }
    async verifyDnsCnameRecord(domain, token) {
        try {
            const expectedValue = `${token}.${this.configService.get('VERIFICATION_DOMAIN')}`;
            const records = await this.resolveCname(domain);
            return records.some(record => record === expectedValue);
        }
        catch (error) {
            this.logger.error(`Error verifying DNS CNAME record: ${error.message}`);
            return false;
        }
    }
    async verifyFileRecord(domain, token) {
        try {
            const verificationUrl = `https://${domain}/.well-known/domain-verification.txt`;
            const response = await fetch(verificationUrl);
            if (!response.ok) {
                return false;
            }
            const content = await response.text();
            return content.trim() === token;
        }
        catch (error) {
            this.logger.error(`Error verifying file record: ${error.message}`);
            return false;
        }
    }
    async generateVerificationToken(domain, method) {
        const prefix = method === _enums_domain_verification_method_enum__WEBPACK_IMPORTED_MODULE_9__.DomainVerificationMethod.DNS_TXT ? 'domain-verify' : 'verify';
        const randomString = Math.random().toString(36).substring(2, 15);
        return `${prefix}-${domain.id}-${randomString}`;
    }
    async cleanupExpiredTokens() {
        try {
            const expiredTokens = await this.verificationTokenRepository.find({
                where: {
                    status: _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.PENDING,
                    expiresAt: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.LessThan)(new Date())
                }
            });
            for (const token of expiredTokens) {
                token.status = _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.EXPIRED;
                await this.verificationTokenRepository.save(token);
                const domain = await this.domainRepository.findOne({
                    where: { id: token.domainId },
                    relations: ['verificationTokens']
                });
                if (domain) {
                    const hasActiveTokens = domain.verificationTokens.some(t => t.status === _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.PENDING);
                    if (!hasActiveTokens) {
                        domain.verificationStatus = _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.EXPIRED;
                        await this.domainRepository.save(domain);
                    }
                }
            }
        }
        catch (error) {
            this.logger.error(`Error cleaning up expired tokens: ${error.message}`);
            throw error;
        }
    }
    async getDomainVerificationStatus(domainId) {
        try {
            const domain = await this.domainRepository.findOne({
                where: { id: domainId },
                relations: ['verificationTokens']
            });
            if (!domain) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Domain with ID ${domainId} not found`);
            }
            const activeToken = domain.verificationTokens.find(token => token.status === _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationStatus.PENDING);
            return {
                status: domain.verificationStatus,
                method: activeToken === null || activeToken === void 0 ? void 0 : activeToken.method,
                token: activeToken === null || activeToken === void 0 ? void 0 : activeToken.token,
                expiresAt: activeToken === null || activeToken === void 0 ? void 0 : activeToken.expiresAt,
                verifiedAt: domain.verifiedAt
            };
        }
        catch (error) {
            this.logger.error(`Error getting domain verification status: ${error.message}`);
            throw error;
        }
    }
};
DomainVerificationService = DomainVerificationService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_domain_entity__WEBPACK_IMPORTED_MODULE_6__.Domain)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_7__.DomainVerificationToken)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _nestjs_config__WEBPACK_IMPORTED_MODULE_3__.ConfigService])
], DomainVerificationService);



/***/ }),
/* 59 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Domain: () => (/* binding */ Domain)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
/* harmony import */ var _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57);
/* harmony import */ var _enums_domain_status_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





let Domain = class Domain {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, name: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, status: { required: true, enum: (__webpack_require__(60).DomainStatus) }, verificationStatus: { required: true, enum: (__webpack_require__(57).DomainVerificationStatus) }, verificationTokens: { required: true, type: () => [Object] }, dnsRecords: { required: true, type: () => [Object] }, verifiedAt: { required: false, type: () => Date }, verificationDetails: { required: false, type: () => ({ method: { required: true, type: () => String }, value: { required: true, type: () => String }, checkedAt: { required: true, type: () => Date }, attempts: { required: true, type: () => Number }, lastAttemptAt: { required: false, type: () => Date }, error: { required: false, type: () => String } }) }, isDefault: { required: true, type: () => Boolean }, isPrimary: { required: true, type: () => Boolean }, dnsConfiguration: { required: false, type: () => ({ mx: { required: false, type: () => ({ records: { required: true, type: () => [String] }, verified: { required: true, type: () => Boolean }, lastChecked: { required: false, type: () => Date } }) }, spf: { required: false, type: () => ({ record: { required: true, type: () => String }, verified: { required: true, type: () => Boolean }, lastChecked: { required: false, type: () => Date } }) }, dkim: { required: false, type: () => ({ selector: { required: true, type: () => String }, publicKey: { required: true, type: () => String }, verified: { required: true, type: () => Boolean }, lastChecked: { required: false, type: () => Date } }) }, dmarc: { required: false, type: () => ({ record: { required: true, type: () => String }, verified: { required: true, type: () => Boolean }, lastChecked: { required: false, type: () => Date } }) } }) }, settings: { required: false, type: () => ({ customNameservers: { required: false, type: () => [String] }, autoRenew: { required: false, type: () => Boolean }, lockEnabled: { required: false, type: () => Boolean }, privacyEnabled: { required: false, type: () => Boolean }, emailForwarding: { required: false, type: () => ({ enabled: { required: true, type: () => Boolean }, rules: { required: false } }) } }) }, expiresAt: { required: false, type: () => Date }, renewalDate: { required: false, type: () => Date }, isExpired: { required: true, type: () => Boolean }, isLocked: { required: true, type: () => Boolean }, registrarInfo: { required: false, type: () => ({ registrar: { required: true, type: () => String }, registrarId: { required: false, type: () => String }, whoisServer: { required: false, type: () => String }, referralUrl: { required: false, type: () => String }, createdDate: { required: false, type: () => Date }, updatedDate: { required: false, type: () => Date }, registrantContact: { required: false, type: () => ({ name: { required: false, type: () => String }, organization: { required: false, type: () => String }, email: { required: false, type: () => String }, phone: { required: false, type: () => String } }) } }) }, sslCertificate: { required: false, type: () => ({ provider: { required: false, type: () => String }, issuer: { required: false, type: () => String }, validFrom: { required: false, type: () => Date }, validTo: { required: false, type: () => Date }, type: { required: false, type: () => String }, status: { required: false, type: () => String }, autoRenew: { required: false, type: () => Boolean }, lastRenewal: { required: false, type: () => Date } }) }, monitoring: { required: false, type: () => ({ enabled: { required: true, type: () => Boolean }, lastCheck: { required: false, type: () => Date }, status: { required: false, type: () => String }, uptime: { required: false, type: () => Number }, alerts: { required: false, type: () => ({ email: { required: false, type: () => [String] }, webhook: { required: false, type: () => [String] } }) } }) }, tags: { required: false, type: () => [String] }, usage: { required: false, type: () => ({ emailEnabled: { required: false, type: () => Boolean }, webEnabled: { required: false, type: () => Boolean }, services: { required: false, type: () => [String] } }) }, securitySettings: { required: false, type: () => ({ transferLock: { required: false, type: () => Boolean }, registrarLock: { required: false, type: () => Boolean }, dnssec: { required: false, type: () => ({ enabled: { required: true, type: () => Boolean }, keys: { required: false, type: () => [String] } }) }, twoFactorAuth: { required: false, type: () => Boolean } }) }, compliance: { required: false, type: () => ({ gdpr: { required: false, type: () => ({ compliant: { required: true, type: () => Boolean }, lastCheck: { required: false, type: () => Date }, issues: { required: false, type: () => [String] } }) }, privacyShield: { required: false, type: () => Boolean }, industryStandards: { required: false, type: () => [String] } }) }, analytics: { required: false, type: () => ({ lastUpdated: { required: false, type: () => Date }, metrics: { required: false, type: () => ({ emailVolume: { required: false, type: () => Number }, webTraffic: { required: false, type: () => Number }, bounceRate: { required: false, type: () => Number } }) } }) }, notes: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, createdBy: { required: false, type: () => String }, updatedBy: { required: false, type: () => String }, isDeleted: { required: true, type: () => Boolean }, deletedBy: { required: false, type: () => String }, deletedAt: { required: false, type: () => Date }, history: { required: false } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Domain.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)({ unique: true }),
    __metadata("design:type", String)
], Domain.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Domain.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization, { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization)
], Domain.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_domain_status_enum__WEBPACK_IMPORTED_MODULE_4__.DomainStatus,
        default: _enums_domain_status_enum__WEBPACK_IMPORTED_MODULE_4__.DomainStatus.PENDING
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Domain.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_3__.DomainVerificationStatus,
        default: _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_3__.DomainVerificationStatus.PENDING
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Domain.prototype, "verificationStatus", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('DomainVerificationToken', 'domain'),
    __metadata("design:type", Array)
], Domain.prototype, "verificationTokens", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)('DnsRecord', 'domain'),
    __metadata("design:type", Array)
], Domain.prototype, "dnsRecords", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Domain.prototype, "verifiedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "verificationDetails", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: true }),
    __metadata("design:type", Boolean)
], Domain.prototype, "isDefault", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], Domain.prototype, "isPrimary", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "dnsConfiguration", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "settings", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('date', { nullable: true }),
    __metadata("design:type", Date)
], Domain.prototype, "expiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('date', { nullable: true }),
    __metadata("design:type", Date)
], Domain.prototype, "renewalDate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Boolean)
], Domain.prototype, "isExpired", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Boolean)
], Domain.prototype, "isLocked", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "registrarInfo", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "sslCertificate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "monitoring", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { array: true, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Array)
], Domain.prototype, "tags", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "usage", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "securitySettings", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "compliance", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], Domain.prototype, "analytics", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], Domain.prototype, "notes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], Domain.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], Domain.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], Domain.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], Domain.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Boolean)
], Domain.prototype, "isDeleted", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], Domain.prototype, "deletedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Domain.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], Domain.prototype, "history", void 0);
Domain = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('domains')
], Domain);



/***/ }),
/* 60 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DomainStatus: () => (/* binding */ DomainStatus)
/* harmony export */ });
var DomainStatus;
(function (DomainStatus) {
    DomainStatus["PENDING"] = "pending";
    DomainStatus["ACTIVE"] = "active";
    DomainStatus["SUSPENDED"] = "suspended";
    DomainStatus["EXPIRED"] = "expired";
    DomainStatus["REDEMPTION"] = "redemption";
    DomainStatus["PENDING_DELETE"] = "pending_delete";
    DomainStatus["TRANSFER_IN_PROGRESS"] = "transfer_in_progress";
    DomainStatus["TRANSFER_PENDING"] = "transfer_pending";
    DomainStatus["LOCKED"] = "locked";
    DomainStatus["DISPUTED"] = "disputed";
    DomainStatus["INCOMPLETE"] = "incomplete";
    DomainStatus["MAINTENANCE"] = "maintenance";
    DomainStatus["FAILED"] = "failed";
    DomainStatus["REVIEW_REQUIRED"] = "review_required";
    DomainStatus["RESERVED"] = "reserved";
    DomainStatus["REGISTERING"] = "registering";
    DomainStatus["BLOCKED"] = "blocked";
    DomainStatus["INVALID"] = "invalid";
    DomainStatus["ARCHIVED"] = "archived";
    DomainStatus["PENDING_REMOVAL"] = "pending_removal";
    DomainStatus["VERIFYING"] = "verifying";
    DomainStatus["DNS_INVALID"] = "dns_invalid";
    DomainStatus["RENEWAL_REQUIRED"] = "renewal_required";
    DomainStatus["SECURITY_HOLD"] = "security_hold";
    DomainStatus["REGISTRAR_UPDATE"] = "registrar_update";
    DomainStatus["UPDATE_REQUIRED"] = "update_required";
    DomainStatus["GRACE_PERIOD"] = "grace_period";
    DomainStatus["WARNING"] = "warning";
    DomainStatus["DELETED"] = "deleted";
})(DomainStatus || (DomainStatus = {}));


/***/ }),
/* 61 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DomainVerificationToken: () => (/* binding */ DomainVerificationToken)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(57);
/* harmony import */ var _enums_domain_verification_method_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let DomainVerificationToken = class DomainVerificationToken {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, domainId: { required: true, type: () => String }, domain: { required: true, type: () => (__webpack_require__(59).Domain) }, token: { required: true, type: () => String }, method: { required: true, enum: (__webpack_require__(62).DomainVerificationMethod) }, status: { required: true, enum: (__webpack_require__(57).DomainVerificationStatus) }, verificationRecord: { required: true, type: () => ({ type: { required: true, type: () => String }, name: { required: true, type: () => String }, value: { required: true, type: () => String }, ttl: { required: false, type: () => Number } }) }, expiresAt: { required: true, type: () => Date }, verifiedAt: { required: false, type: () => Date }, attempts: { required: true, type: () => Number }, lastAttemptAt: { required: false, type: () => Date }, verificationResults: { required: false }, metadata: { required: false, type: () => ({ generatedBy: { required: false, type: () => String }, source: { required: false, type: () => String }, clientIp: { required: false, type: () => String }, userAgent: { required: false, type: () => String } }) }, isRevoked: { required: true, type: () => Boolean }, revokedAt: { required: false, type: () => Date }, revokedBy: { required: false, type: () => String }, revokeReason: { required: false, type: () => String }, retryPolicy: { required: false, type: () => ({ maxAttempts: { required: true, type: () => Number }, backoffPeriod: { required: true, type: () => Number }, timeoutPeriod: { required: true, type: () => Number } }) }, isActive: { required: true, type: () => Boolean }, validationRules: { required: false, type: () => ({ requiredRecords: { required: false, type: () => [String] }, propagationTime: { required: false, type: () => Number }, requiredNameservers: { required: false, type: () => [String] } }) }, alternativeTokens: { required: false, type: () => [String] }, customValidation: { required: false, type: () => ({ type: { required: true, type: () => String }, config: { required: true, type: () => Object }, results: { required: false, type: () => Object } }) }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, createdBy: { required: false, type: () => String }, updatedBy: { required: false, type: () => String }, history: { required: false }, notes: { required: false, type: () => String } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "domainId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Domain', { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'domainId' }),
    __metadata("design:type", Function)
], DomainVerificationToken.prototype, "domain", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "token", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_domain_verification_method_enum__WEBPACK_IMPORTED_MODULE_3__.DomainVerificationMethod
    }),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "method", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_2__.DomainVerificationStatus,
        default: _enums_domain_verification_status_enum__WEBPACK_IMPORTED_MODULE_2__.DomainVerificationStatus.PENDING
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DomainVerificationToken.prototype, "verificationRecord", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", Date)
], DomainVerificationToken.prototype, "expiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], DomainVerificationToken.prototype, "verifiedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('int', { default: 0 }),
    __metadata("design:type", Number)
], DomainVerificationToken.prototype, "attempts", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], DomainVerificationToken.prototype, "lastAttemptAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], DomainVerificationToken.prototype, "verificationResults", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DomainVerificationToken.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], DomainVerificationToken.prototype, "isRevoked", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], DomainVerificationToken.prototype, "revokedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "revokedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "revokeReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DomainVerificationToken.prototype, "retryPolicy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: true }),
    __metadata("design:type", Boolean)
], DomainVerificationToken.prototype, "isActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DomainVerificationToken.prototype, "validationRules", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { array: true, nullable: true }),
    __metadata("design:type", Array)
], DomainVerificationToken.prototype, "alternativeTokens", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DomainVerificationToken.prototype, "customValidation", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], DomainVerificationToken.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], DomainVerificationToken.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], DomainVerificationToken.prototype, "history", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], DomainVerificationToken.prototype, "notes", void 0);
DomainVerificationToken = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('domain_verification_tokens'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['domainId', 'token']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['domainId', 'status'])
], DomainVerificationToken);



/***/ }),
/* 62 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DomainVerificationMethod: () => (/* binding */ DomainVerificationMethod)
/* harmony export */ });
var DomainVerificationMethod;
(function (DomainVerificationMethod) {
    DomainVerificationMethod["DNS_TXT"] = "dns_txt";
    DomainVerificationMethod["DNS_CNAME"] = "dns_cname";
    DomainVerificationMethod["HTML_FILE"] = "html_file";
    DomainVerificationMethod["META_TAG"] = "meta_tag";
    DomainVerificationMethod["EMAIL"] = "email";
    DomainVerificationMethod["GOOGLE_SEARCH_CONSOLE"] = "google_search_console";
    DomainVerificationMethod["REGISTRAR"] = "registrar";
    DomainVerificationMethod["HTTPS"] = "https";
    DomainVerificationMethod["REDIRECT"] = "redirect";
    DomainVerificationMethod["CONTACT"] = "contact";
    DomainVerificationMethod["THIRD_PARTY"] = "third_party";
    DomainVerificationMethod["DNS_CAA"] = "dns_caa";
    DomainVerificationMethod["MANUAL"] = "manual";
    DomainVerificationMethod["DOMAIN_TRANSFER"] = "domain_transfer";
    DomainVerificationMethod["DNS_DELEGATION"] = "dns_delegation";
    DomainVerificationMethod["API_TOKEN"] = "api_token";
    DomainVerificationMethod["HOSTING_PROVIDER"] = "hosting_provider";
    DomainVerificationMethod["WEBHOOK"] = "webhook";
    DomainVerificationMethod["MULTI_METHOD"] = "multi_method";
    DomainVerificationMethod["FILE"] = "FILE";
})(DomainVerificationMethod || (DomainVerificationMethod = {}));


/***/ }),
/* 63 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SmsService: () => (/* binding */ SmsService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var twilio__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(64);
/* harmony import */ var twilio__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(twilio__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var SmsService_1;



let SmsService = SmsService_1 = class SmsService {
    constructor(configService) {
        this.configService = configService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(SmsService_1.name);
        this.mockMode = false;
        try {
            const accountSid = this.configService.get('TWILIO_ACCOUNT_SID');
            const authToken = this.configService.get('TWILIO_AUTH_TOKEN');
            this.fromNumber = this.configService.get('TWILIO_FROM_NUMBER') || '+15555555555';
            if (accountSid && accountSid.startsWith('AC') && authToken) {
                this.twilioClient = twilio__WEBPACK_IMPORTED_MODULE_2___default()(accountSid, authToken);
                this.logger.log('Twilio client initialized successfully');
            }
            else {
                this.logger.warn('Invalid Twilio credentials - using mock client');
                this.initializeMockClient();
                this.mockMode = true;
            }
        }
        catch (error) {
            this.logger.warn(`Failed to initialize Twilio client: ${error.message}`);
            this.logger.warn('Using mock client instead');
            this.initializeMockClient();
            this.mockMode = true;
        }
    }
    initializeMockClient() {
        this.twilioClient = {
            messages: {
                create: async (params) => {
                    this.logger.log(`[MOCK] Sending SMS to ${params.to}: ${params.body}`);
                    return {
                        sid: `MOCK_${Date.now()}`,
                        to: params.to,
                        from: params.from,
                        body: params.body,
                        status: 'queued',
                        dateCreated: new Date(),
                        dateUpdated: new Date(),
                        errorMessage: null
                    };
                }
            }
        };
        const originalMessages = this.twilioClient.messages;
        this.twilioClient.messages = (messageSid) => {
            if (typeof messageSid === 'string') {
                return {
                    fetch: async () => {
                        this.logger.log(`[MOCK] Fetching message status for ${messageSid}`);
                        return {
                            sid: messageSid,
                            status: 'delivered',
                            dateCreated: new Date(),
                            dateUpdated: new Date(),
                            errorMessage: null
                        };
                    }
                };
            }
            return originalMessages;
        };
    }
    async send(notification) {
        try {
            const { recipient, content } = notification;
            const toNumber = this.formatPhoneNumber(recipient.phoneNumber);
            const smsContent = this.formatContent(content);
            const message = await this.twilioClient.messages.create(Object.assign({ body: smsContent, from: this.fromNumber, to: toNumber }, this.getOptionalParams(notification.metadata)));
            this.logger.debug(`SMS sent to ${toNumber}: ${message.sid}`);
        }
        catch (error) {
            this.logger.error('Failed to send SMS:', error);
            throw new Error(`SMS delivery failed: ${error.message}`);
        }
    }
    formatPhoneNumber(phoneNumber) {
        const cleaned = phoneNumber.replace(/\D/g, '');
        if (!cleaned.startsWith('1') && cleaned.length === 10) {
            return `+1${cleaned}`;
        }
        return `+${cleaned}`;
    }
    formatContent(content) {
        let smsContent = content.replace(/<[^>]*>/g, '');
        smsContent = smsContent.replace(/\s+/g, ' ').trim();
        if (smsContent.length > 160) {
            smsContent = smsContent.substring(0, 157) + '...';
        }
        return smsContent;
    }
    getOptionalParams(metadata = {}) {
        const params = {};
        if (metadata === null || metadata === void 0 ? void 0 : metadata.statusCallback) {
            params.statusCallback = metadata.statusCallback;
        }
        if (metadata === null || metadata === void 0 ? void 0 : metadata.mediaUrl) {
            params.mediaUrl = metadata.mediaUrl;
        }
        return params;
    }
    async sendSms(phoneNumber, message) {
        if (this.mockMode) {
            this.logger.log(`[MOCK] Sending SMS to ${phoneNumber}: ${message}`);
            return {
                success: true,
                sid: `MOCK_${Date.now()}`,
                status: 'sent'
            };
        }
        const result = await this.twilioClient.messages.create({
            body: message,
            from: this.fromNumber,
            to: this.formatPhoneNumber(phoneNumber)
        });
        return {
            success: true,
            sid: result.sid,
            status: result.status
        };
    }
    async getDeliveryStatus(messageSid) {
        try {
            const message = await this.twilioClient.messages(messageSid).fetch();
            return {
                status: message.status,
                error: message.errorMessage,
                dateCreated: message.dateCreated,
                dateUpdated: message.dateUpdated
            };
        }
        catch (error) {
            this.logger.error(`Failed to get SMS status for ${messageSid}:`, error);
            throw new Error(`Failed to get SMS status: ${error.message}`);
        }
    }
};
SmsService = SmsService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService])
], SmsService);



/***/ }),
/* 64 */
/***/ ((module) => {

module.exports = require("twilio");

/***/ }),
/* 65 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WhatsappService: () => (/* binding */ WhatsappService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _entities_whatsapp_message_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(67);
/* harmony import */ var _entities_whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(68);
/* harmony import */ var _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(70);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var WhatsappService_1;









let WhatsappService = WhatsappService_1 = class WhatsappService {
    constructor(configService, eventEmitter, messageRepository, templateRepository) {
        this.configService = configService;
        this.eventEmitter = eventEmitter;
        this.messageRepository = messageRepository;
        this.templateRepository = templateRepository;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(WhatsappService_1.name);
        this.maxRetries = 3;
        this.client = axios__WEBPACK_IMPORTED_MODULE_5___default().create({
            baseURL: this.configService.get('WHATSAPP_API_URL'),
            headers: {
                'Authorization': `Bearer ${this.configService.get('WHATSAPP_API_TOKEN')}`,
                'Content-Type': 'application/json',
            },
            timeout: 10000,
        });
    }
    async sendAppointmentReminder(whatsappNumber, data) {
        try {
            const template = await this.templateRepository.findOne({
                where: { name: 'appointment_reminder' }
            });
            if (!template) {
                throw new Error('Appointment reminder template not found');
            }
            await this.sendMessage({
                to: whatsappNumber,
                template: 'appointment_reminder',
                parameters: {
                    header: data.organizationName,
                    body: {
                        patientName: data.patientName,
                        doctorName: data.doctorName,
                        dateTime: data.dateTime.toLocaleString(),
                        location: data.location
                    }
                },
                metadata: {
                    appointmentId: data.appointmentId,
                    type: 'APPOINTMENT_REMINDER'
                }
            });
        }
        catch (error) {
            this.logger.error(`Failed to send WhatsApp reminder to ${whatsappNumber}:`, error);
            throw error;
        }
    }
    async sendMessage(options) {
        try {
            const formattedNumber = this.formatPhoneNumber(options.to);
            if (!this.isValidPhoneNumber(formattedNumber)) {
                throw new Error(`Invalid phone number: ${options.to}`);
            }
            let messageData;
            if (options.template) {
                messageData = await this.prepareTemplateMessage(options);
            }
            else if (options.mediaUrl) {
                messageData = await this.prepareMediaMessage(options);
            }
            else {
                messageData = this.prepareTextMessage(options);
            }
            const message = this.messageRepository.create({
                to: formattedNumber,
                messageType: options.template ? 'template' : options.mediaUrl ? 'media' : 'text',
                content: messageData,
                metadata: options.metadata,
                status: this.mapWhatsAppStatus(_enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.PENDING),
                retryCount: 0,
            });
            await this.messageRepository.save(message);
            const response = await this.client.post('/messages', Object.assign({ messaging_product: 'whatsapp', recipient_type: 'individual', to: formattedNumber }, messageData));
            message.whatsappMessageId = response.data.messages[0].id;
            message.status = this.mapWhatsAppStatus(_enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.SENT);
            message.sentAt = new Date();
            await this.messageRepository.save(message);
            this.eventEmitter.emit('whatsapp.message.sent', message);
            return message;
        }
        catch (error) {
            this.logger.error('Error sending WhatsApp message:', error);
            throw error;
        }
    }
    async prepareTemplateMessage(options) {
        const template = await this.templateRepository.findOne({
            where: { name: options.template }
        });
        if (!template) {
            throw new Error(`Template not found: ${options.template}`);
        }
        return {
            type: 'template',
            template: {
                name: template.name,
                language: {
                    code: template.language
                },
                components: this.buildTemplateComponents(template, options.parameters)
            }
        };
    }
    async prepareMediaMessage(options) {
        if (!options.mediaType) {
            throw new Error('Media type is required for media messages');
        }
        return {
            type: options.mediaType.toLowerCase(),
            [options.mediaType.toLowerCase()]: {
                link: options.mediaUrl
            },
            text: options.text
        };
    }
    prepareTextMessage(options) {
        if (!options.text) {
            throw new Error('Text is required for text messages');
        }
        return {
            type: 'text',
            text: {
                body: options.text,
                preview_url: true
            }
        };
    }
    buildTemplateComponents(template, parameters) {
        const components = [];
        const headerComponent = template.components.find(c => c.type === _entities_whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_7__.WhatsappTemplateComponentType.HEADER);
        if (headerComponent && (parameters === null || parameters === void 0 ? void 0 : parameters.header)) {
            components.push({
                type: 'header',
                parameters: this.formatParameters(headerComponent.format || _entities_whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_7__.WhatsappTemplateHeaderType.TEXT, parameters.header)
            });
        }
        if (parameters === null || parameters === void 0 ? void 0 : parameters.body) {
            components.push({
                type: 'body',
                parameters: this.formatParameters('text', parameters.body)
            });
        }
        const buttonComponent = template.components.find(c => c.type === _entities_whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_7__.WhatsappTemplateComponentType.BUTTONS);
        if ((buttonComponent === null || buttonComponent === void 0 ? void 0 : buttonComponent.buttons) && (parameters === null || parameters === void 0 ? void 0 : parameters.buttons)) {
            components.push({
                type: 'button',
                sub_type: 'quick_reply',
                index: 0,
                parameters: parameters.buttons
            });
        }
        return components;
    }
    formatParameters(type, value) {
        switch (type) {
            case 'text':
                return [{ type: 'text', text: value }];
            case 'image':
                return [{ type: 'image', image: { link: value } }];
            case 'document':
                return [{ type: 'document', document: { link: value } }];
            case 'video':
                return [{ type: 'video', video: { link: value } }];
            default:
                return [{ type: 'text', text: value }];
        }
    }
    async handleWebhook(data) {
        try {
            const { entry } = data;
            for (const e of entry) {
                for (const change of e.changes) {
                    if (change.value.messages) {
                        await this.handleIncomingMessages(change.value.messages);
                    }
                    if (change.value.statuses) {
                        await this.handleMessageStatuses(change.value.statuses);
                    }
                }
            }
        }
        catch (error) {
            this.logger.error('Error processing WhatsApp webhook:', error);
            throw error;
        }
    }
    async handleIncomingMessages(messages) {
        for (const message of messages) {
            try {
                const incomingMessage = this.messageRepository.create({
                    whatsappMessageId: message.id,
                    from: message.from,
                    messageType: message.type,
                    content: message,
                    status: this.mapWhatsAppStatus(_enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.RECEIVED),
                    receivedAt: new Date(),
                });
                await this.messageRepository.save(incomingMessage);
                this.eventEmitter.emit('whatsapp.message.received', incomingMessage);
            }
            catch (error) {
                this.logger.error('Error processing incoming WhatsApp message:', error);
            }
        }
    }
    async handleMessageStatuses(statuses) {
        for (const status of statuses) {
            try {
                const message = await this.messageRepository.findOne({
                    where: { whatsappMessageId: status.id }
                });
                if (message) {
                    message.status = this.mapWhatsAppStatus(status.status);
                    message.deliveredAt = status.status === 'delivered' ? new Date() : null;
                    message.readAt = status.status === 'read' ? new Date() : null;
                    await this.messageRepository.save(message);
                    this.eventEmitter.emit('whatsapp.message.status_updated', message);
                }
            }
            catch (error) {
                this.logger.error('Error processing WhatsApp message status:', error);
            }
        }
    }
    mapWhatsAppStatus(status) {
        const statusMapping = {
            'sent': _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.SENT,
            'delivered': _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.DELIVERED,
            'read': _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.READ,
            'failed': _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.FAILED,
            'pending': _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.PENDING
        };
        const mappedStatus = statusMapping[status.toLowerCase()] || _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.UNKNOWN;
        return mappedStatus;
    }
    formatPhoneNumber(phone) {
        const cleaned = phone.replace(/\D/g, '');
        if (!cleaned.startsWith('1') && cleaned.length === 10) {
            return `1${cleaned}`;
        }
        return cleaned;
    }
    isValidPhoneNumber(phone) {
        return /^\d{11,15}$/.test(phone);
    }
    async getMessageStatus(messageId) {
        try {
            return await this.messageRepository.findOne({
                where: { id: messageId }
            });
        }
        catch (error) {
            this.logger.error(`Error getting message status for ${messageId}:`, error);
            throw error;
        }
    }
    async retryFailedMessages() {
        try {
            const failedMessages = await this.messageRepository.find({
                where: {
                    status: _enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.FAILED,
                    retryCount: (0,typeorm__WEBPACK_IMPORTED_MODULE_3__.LessThan)(this.maxRetries)
                }
            });
            for (const message of failedMessages) {
                try {
                    const response = await this.client.post('/messages', message.content);
                    message.whatsappMessageId = response.data.messages[0].id;
                    message.status = this.mapWhatsAppStatus(_enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.SENT);
                    message.sentAt = new Date();
                    message.retryCount += 1;
                    await this.messageRepository.save(message);
                }
                catch (error) {
                    this.logger.error(`Error retrying message ${message.id}:`, error);
                    message.retryCount += 1;
                    message.lastError = error.message;
                    if (message.retryCount >= this.maxRetries) {
                        message.status = this.mapWhatsAppStatus(_enums_whatsapp_message_status_enum__WEBPACK_IMPORTED_MODULE_8__.WhatsAppMessageStatus.PERMANENTLY_FAILED);
                    }
                    await this.messageRepository.save(message);
                }
            }
        }
        catch (error) {
            this.logger.error('Error retrying failed messages:', error);
            throw error;
        }
    }
};
WhatsappService = WhatsappService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_whatsapp_message_entity__WEBPACK_IMPORTED_MODULE_6__.WhatsAppMessage)),
    __param(3, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_7__.WhatsappTemplate)),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__.EventEmitter2,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository])
], WhatsappService);



/***/ }),
/* 66 */
/***/ ((module) => {

module.exports = require("axios");

/***/ }),
/* 67 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageDirection: () => (/* binding */ MessageDirection),
/* harmony export */   MessageStatus: () => (/* binding */ MessageStatus),
/* harmony export */   MessageType: () => (/* binding */ MessageType),
/* harmony export */   WhatsAppMessage: () => (/* binding */ WhatsAppMessage)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var MessageType;
(function (MessageType) {
    MessageType["TEXT"] = "TEXT";
    MessageType["IMAGE"] = "IMAGE";
    MessageType["VIDEO"] = "VIDEO";
    MessageType["DOCUMENT"] = "DOCUMENT";
    MessageType["AUDIO"] = "AUDIO";
    MessageType["LOCATION"] = "LOCATION";
    MessageType["CONTACT"] = "CONTACT";
    MessageType["TEMPLATE"] = "TEMPLATE";
    MessageType["INTERACTIVE"] = "INTERACTIVE";
})(MessageType || (MessageType = {}));
var MessageStatus;
(function (MessageStatus) {
    MessageStatus["QUEUED"] = "QUEUED";
    MessageStatus["SENT"] = "SENT";
    MessageStatus["DELIVERED"] = "DELIVERED";
    MessageStatus["READ"] = "READ";
    MessageStatus["FAILED"] = "FAILED";
    MessageStatus["UNKNOWN"] = "UNKNOWN";
})(MessageStatus || (MessageStatus = {}));
var MessageDirection;
(function (MessageDirection) {
    MessageDirection["INBOUND"] = "INBOUND";
    MessageDirection["OUTBOUND"] = "OUTBOUND";
})(MessageDirection || (MessageDirection = {}));
let WhatsAppMessage = class WhatsAppMessage {
    canRetry() {
        return (this.status === MessageStatus.FAILED &&
            this.retryCount < 3 &&
            !this.isExpired());
    }
    isExpired() {
        if (this.isScheduled && this.scheduledFor) {
            return this.scheduledFor < new Date();
        }
        if (this.requiresUserReply && this.replyDeadline) {
            return this.replyDeadline < new Date();
        }
        return false;
    }
    shouldSendNow() {
        if (!this.isScheduled) {
            return true;
        }
        if (!this.scheduledFor) {
            return true;
        }
        return this.scheduledFor <= new Date();
    }
    updateStatus(status) {
        this.status = status;
        switch (status) {
            case MessageStatus.SENT:
                this.sentAt = new Date();
                break;
            case MessageStatus.DELIVERED:
                this.deliveredAt = new Date();
                break;
            case MessageStatus.READ:
                this.readAt = new Date();
                break;
            case MessageStatus.FAILED:
                this.failedAt = new Date();
                break;
        }
    }
    retry() {
        if (!this.canRetry()) {
            throw new Error('Message cannot be retried');
        }
        this.retryCount += 1;
        this.lastRetryAt = new Date();
        this.status = MessageStatus.QUEUED;
        this.errorCode = null;
        this.errorMessage = null;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, from: { required: true, type: () => String }, to: { required: true, type: () => String }, messageType: { required: true, type: () => String }, content: { required: true, type: () => String }, receivedAt: { required: false, type: () => Date }, lastError: { required: false, type: () => String }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, userId: { required: true, type: () => String }, user: { required: true, type: () => (__webpack_require__(21).User) }, recipientPhone: { required: true, type: () => String }, recipientName: { required: true, type: () => String }, direction: { required: true, enum: (__webpack_require__(67).MessageDirection) }, type: { required: true, enum: (__webpack_require__(67).MessageType) }, metadata: { required: false, type: () => Object }, templateName: { required: true, type: () => String }, templateData: { required: true, type: () => Object }, status: { required: true, enum: (__webpack_require__(67).MessageStatus) }, whatsappMessageId: { required: true, type: () => String }, errorCode: { required: true, type: () => String, nullable: true }, errorMessage: { required: true, type: () => String, nullable: true }, retryCount: { required: true, type: () => Number }, lastRetryAt: { required: true, type: () => Date }, sentAt: { required: false, type: () => Date }, queuedAt: { required: true, type: () => Date }, deliveredAt: { required: true, type: () => Date, nullable: true }, readAt: { required: true, type: () => Date, nullable: true }, failedAt: { required: true, type: () => Date }, attachments: { required: true }, locationData: { required: true, type: () => ({ latitude: { required: true, type: () => Number }, longitude: { required: true, type: () => Number }, name: { required: false, type: () => String }, address: { required: false, type: () => String } }) }, contactData: { required: true }, interactiveData: { required: true, type: () => ({ type: { required: true, type: () => String }, title: { required: true, type: () => String }, body: { required: true, type: () => String }, buttons: { required: false, type: () => [Object] }, selectedOption: { required: false, type: () => String } }) }, isScheduled: { required: true, type: () => Boolean }, scheduledFor: { required: true, type: () => Date }, isTemplate: { required: true, type: () => Boolean }, requiresUserReply: { required: true, type: () => Boolean }, replyTimeoutHours: { required: true, type: () => Number }, replyDeadline: { required: true, type: () => Date }, isAutomatedReply: { required: true, type: () => Boolean }, automationTriggerId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization)
], WhatsAppMessage.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "userId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'userId' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User)
], WhatsAppMessage.prototype, "user", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "recipientPhone", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "recipientName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: MessageDirection,
        default: MessageDirection.OUTBOUND
    }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "direction", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: MessageType,
        default: MessageType.TEXT
    }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], WhatsAppMessage.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "templateName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], WhatsAppMessage.prototype, "templateData", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: MessageStatus,
        default: MessageStatus.QUEUED
    }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "whatsappMessageId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "errorCode", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "errorMessage", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'int', default: 0 }),
    __metadata("design:type", Number)
], WhatsAppMessage.prototype, "retryCount", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "lastRetryAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "sentAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "queuedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "deliveredAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "readAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], WhatsAppMessage.prototype, "attachments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], WhatsAppMessage.prototype, "locationData", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], WhatsAppMessage.prototype, "contactData", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], WhatsAppMessage.prototype, "interactiveData", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], WhatsAppMessage.prototype, "isScheduled", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "scheduledFor", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], WhatsAppMessage.prototype, "isTemplate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], WhatsAppMessage.prototype, "requiresUserReply", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 0 }),
    __metadata("design:type", Number)
], WhatsAppMessage.prototype, "replyTimeoutHours", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "replyDeadline", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], WhatsAppMessage.prototype, "isAutomatedReply", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsAppMessage.prototype, "automationTriggerId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], WhatsAppMessage.prototype, "updatedAt", void 0);
WhatsAppMessage = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('whatsapp_messages'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'createdAt']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['recipientPhone', 'createdAt'])
], WhatsAppMessage);



/***/ }),
/* 68 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WhatsappTemplate: () => (/* binding */ WhatsappTemplate),
/* harmony export */   WhatsappTemplateButtonType: () => (/* reexport safe */ _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateButtonType),
/* harmony export */   WhatsappTemplateCategory: () => (/* reexport safe */ _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateCategory),
/* harmony export */   WhatsappTemplateComponentType: () => (/* reexport safe */ _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateComponentType),
/* harmony export */   WhatsappTemplateHeaderType: () => (/* reexport safe */ _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateHeaderType),
/* harmony export */   WhatsappTemplateStatus: () => (/* reexport safe */ _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateStatus)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let WhatsappTemplate = class WhatsappTemplate {
    getVariables() {
        const variables = new Set();
        const regex = /{{([^{}]+)}}/g;
        this.components.forEach(component => {
            if (component.text) {
                let match;
                while ((match = regex.exec(component.text)) !== null) {
                    variables.add(match[1].trim());
                }
            }
            if (component.buttons) {
                component.buttons.forEach(button => {
                    if (button.url) {
                        let match;
                        while ((match = regex.exec(button.url)) !== null) {
                            variables.add(match[1].trim());
                        }
                    }
                });
            }
        });
        return Array.from(variables);
    }
    getBodyText() {
        const bodyComponent = this.components.find(c => c.type === _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateComponentType.BODY);
        return (bodyComponent === null || bodyComponent === void 0 ? void 0 : bodyComponent.text) || null;
    }
    getHeaderText() {
        const headerComponent = this.components.find(c => c.type === _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateComponentType.HEADER &&
            c.format === _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateHeaderType.TEXT);
        return (headerComponent === null || headerComponent === void 0 ? void 0 : headerComponent.text) || null;
    }
    processTemplate(variables = {}) {
        const result = {
            body: ''
        };
        for (const component of this.components) {
            switch (component.type) {
                case _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateComponentType.BODY:
                    result.body = this.processText(component.text || '', variables);
                    break;
                case _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateComponentType.HEADER:
                    if (component.format === _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateHeaderType.TEXT) {
                        result.header = this.processText(component.text || '', variables);
                    }
                    break;
                case _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateComponentType.FOOTER:
                    result.footer = this.processText(component.text || '', variables);
                    break;
                case _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateComponentType.BUTTONS:
                    if (component.buttons) {
                        result.buttons = component.buttons.map(button => {
                            const processedButton = Object.assign({}, button);
                            if (button.url) {
                                processedButton.url = this.processText(button.url, variables);
                            }
                            return processedButton;
                        });
                    }
                    break;
            }
        }
        return result;
    }
    processText(text, variables) {
        let processed = text;
        for (const [key, value] of Object.entries(variables)) {
            const regex = new RegExp(`{{\\s*${key}\\s*}}`, 'g');
            processed = processed.replace(regex, String(value !== null && value !== void 0 ? value : ''));
        }
        return processed;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: false, type: () => String }, category: { required: true, enum: (__webpack_require__(69).WhatsappTemplateCategory) }, status: { required: true, enum: (__webpack_require__(69).WhatsappTemplateStatus) }, language: { required: true, type: () => String }, externalTemplateId: { required: false, type: () => String }, components: { required: true, type: () => [Object] }, isDefault: { required: true, type: () => Boolean }, submittedAt: { required: false, type: () => Date }, approvedAt: { required: false, type: () => Date }, rejectionReason: { required: false, type: () => String }, metadata: { required: false, type: () => Object }, useCount: { required: true, type: () => Number }, lastUsedAt: { required: false, type: () => Date }, createdById: { required: false, type: () => String }, updatedById: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateCategory,
        default: _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateCategory.UTILITY
    }),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "category", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateStatus,
        default: _enums_whatsapp_template_enums__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplateStatus.DRAFT
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 'en' }),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "language", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "externalTemplateId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb' }),
    __metadata("design:type", Array)
], WhatsappTemplate.prototype, "components", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], WhatsappTemplate.prototype, "isDefault", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], WhatsappTemplate.prototype, "submittedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], WhatsappTemplate.prototype, "approvedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "rejectionReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], WhatsappTemplate.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 0 }),
    __metadata("design:type", Number)
], WhatsappTemplate.prototype, "useCount", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], WhatsappTemplate.prototype, "lastUsedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappTemplate.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], WhatsappTemplate.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], WhatsappTemplate.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], WhatsappTemplate.prototype, "deletedAt", void 0);
WhatsappTemplate = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('whatsapp_templates')
], WhatsappTemplate);



/***/ }),
/* 69 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WhatsappTemplateButtonType: () => (/* binding */ WhatsappTemplateButtonType),
/* harmony export */   WhatsappTemplateCategory: () => (/* binding */ WhatsappTemplateCategory),
/* harmony export */   WhatsappTemplateComponentType: () => (/* binding */ WhatsappTemplateComponentType),
/* harmony export */   WhatsappTemplateHeaderType: () => (/* binding */ WhatsappTemplateHeaderType),
/* harmony export */   WhatsappTemplateStatus: () => (/* binding */ WhatsappTemplateStatus)
/* harmony export */ });
var WhatsappTemplateStatus;
(function (WhatsappTemplateStatus) {
    WhatsappTemplateStatus["DRAFT"] = "draft";
    WhatsappTemplateStatus["PENDING_APPROVAL"] = "pending_approval";
    WhatsappTemplateStatus["APPROVED"] = "approved";
    WhatsappTemplateStatus["REJECTED"] = "rejected";
    WhatsappTemplateStatus["ACTIVE"] = "active";
    WhatsappTemplateStatus["INACTIVE"] = "inactive";
    WhatsappTemplateStatus["DELETED"] = "deleted";
})(WhatsappTemplateStatus || (WhatsappTemplateStatus = {}));
var WhatsappTemplateCategory;
(function (WhatsappTemplateCategory) {
    WhatsappTemplateCategory["ACCOUNT_UPDATE"] = "account_update";
    WhatsappTemplateCategory["PAYMENT_UPDATE"] = "payment_update";
    WhatsappTemplateCategory["PERSONAL_FINANCE_UPDATE"] = "personal_finance_update";
    WhatsappTemplateCategory["SHIPPING_UPDATE"] = "shipping_update";
    WhatsappTemplateCategory["RESERVATION_UPDATE"] = "reservation_update";
    WhatsappTemplateCategory["ISSUE_RESOLUTION"] = "issue_resolution";
    WhatsappTemplateCategory["APPOINTMENT_UPDATE"] = "appointment_update";
    WhatsappTemplateCategory["TRANSPORTATION_UPDATE"] = "transportation_update";
    WhatsappTemplateCategory["TICKET_UPDATE"] = "ticket_update";
    WhatsappTemplateCategory["ALERT_UPDATE"] = "alert_update";
    WhatsappTemplateCategory["AUTO_REPLY"] = "auto_reply";
    WhatsappTemplateCategory["TRANSACTIONAL"] = "transactional";
    WhatsappTemplateCategory["MARKETING"] = "marketing";
    WhatsappTemplateCategory["UTILITY"] = "utility";
    WhatsappTemplateCategory["AUTHENTICATION"] = "authentication";
})(WhatsappTemplateCategory || (WhatsappTemplateCategory = {}));
var WhatsappTemplateComponentType;
(function (WhatsappTemplateComponentType) {
    WhatsappTemplateComponentType["HEADER"] = "header";
    WhatsappTemplateComponentType["BODY"] = "body";
    WhatsappTemplateComponentType["FOOTER"] = "footer";
    WhatsappTemplateComponentType["BUTTONS"] = "buttons";
})(WhatsappTemplateComponentType || (WhatsappTemplateComponentType = {}));
var WhatsappTemplateHeaderType;
(function (WhatsappTemplateHeaderType) {
    WhatsappTemplateHeaderType["TEXT"] = "text";
    WhatsappTemplateHeaderType["IMAGE"] = "image";
    WhatsappTemplateHeaderType["VIDEO"] = "video";
    WhatsappTemplateHeaderType["DOCUMENT"] = "document";
    WhatsappTemplateHeaderType["LOCATION"] = "location";
})(WhatsappTemplateHeaderType || (WhatsappTemplateHeaderType = {}));
var WhatsappTemplateButtonType;
(function (WhatsappTemplateButtonType) {
    WhatsappTemplateButtonType["PHONE_NUMBER"] = "phone_number";
    WhatsappTemplateButtonType["URL"] = "url";
    WhatsappTemplateButtonType["QUICK_REPLY"] = "quick_reply";
})(WhatsappTemplateButtonType || (WhatsappTemplateButtonType = {}));


/***/ }),
/* 70 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MESSAGE_STATUS_PROPERTIES: () => (/* binding */ MESSAGE_STATUS_PROPERTIES),
/* harmony export */   WhatsAppMessageStatus: () => (/* binding */ WhatsAppMessageStatus)
/* harmony export */ });
var WhatsAppMessageStatus;
(function (WhatsAppMessageStatus) {
    WhatsAppMessageStatus["DRAFT"] = "DRAFT";
    WhatsAppMessageStatus["QUEUED"] = "QUEUED";
    WhatsAppMessageStatus["SCHEDULED"] = "SCHEDULED";
    WhatsAppMessageStatus["PENDING"] = "PENDING";
    WhatsAppMessageStatus["SENT"] = "SENT";
    WhatsAppMessageStatus["DELIVERED"] = "DELIVERED";
    WhatsAppMessageStatus["READ"] = "READ";
    WhatsAppMessageStatus["FAILED"] = "FAILED";
    WhatsAppMessageStatus["CANCELED"] = "CANCELED";
    WhatsAppMessageStatus["BLOCKED"] = "BLOCKED";
    WhatsAppMessageStatus["EXPIRED"] = "EXPIRED";
    WhatsAppMessageStatus["DELETED"] = "DELETED";
    WhatsAppMessageStatus["UNDELIVERABLE"] = "UNDELIVERABLE";
    WhatsAppMessageStatus["UNKNOWN"] = "UNKNOWN";
    WhatsAppMessageStatus["PERMANENTLY_FAILED"] = "PERMANENTLY_FAILED";
    WhatsAppMessageStatus["RECEIVED"] = "RECEIVED";
})(WhatsAppMessageStatus || (WhatsAppMessageStatus = {}));
const MESSAGE_STATUS_PROPERTIES = {
    [WhatsAppMessageStatus.DRAFT]: {
        final: false,
        retryable: true,
        description: 'Message is drafted but not yet queued for sending',
    },
    [WhatsAppMessageStatus.QUEUED]: {
        final: false,
        retryable: true,
        description: 'Message is queued for sending',
    },
    [WhatsAppMessageStatus.SCHEDULED]: {
        final: false,
        retryable: true,
        description: 'Message is scheduled to be sent at a later time',
    },
    [WhatsAppMessageStatus.PENDING]: {
        final: false,
        retryable: true,
        description: 'Message is being processed for sending',
    },
    [WhatsAppMessageStatus.SENT]: {
        final: false,
        retryable: false,
        description: 'Message has been sent to WhatsApp servers',
    },
    [WhatsAppMessageStatus.DELIVERED]: {
        final: false,
        retryable: false,
        description: 'Message has been delivered to the recipient',
    },
    [WhatsAppMessageStatus.READ]: {
        final: true,
        retryable: false,
        description: 'Message has been read by the recipient',
    },
    [WhatsAppMessageStatus.FAILED]: {
        final: false,
        retryable: true,
        description: 'Message failed to send but can be retried',
    },
    [WhatsAppMessageStatus.CANCELED]: {
        final: true,
        retryable: false,
        description: 'Message was canceled before it could be sent',
    },
    [WhatsAppMessageStatus.BLOCKED]: {
        final: true,
        retryable: false,
        description: 'Message was blocked by WhatsApp',
    },
    [WhatsAppMessageStatus.EXPIRED]: {
        final: true,
        retryable: false,
        description: 'Message expired before it could be delivered',
    },
    [WhatsAppMessageStatus.DELETED]: {
        final: true,
        retryable: false,
        description: 'Message was deleted',
    },
    [WhatsAppMessageStatus.UNDELIVERABLE]: {
        final: true,
        retryable: false,
        description: 'Message cannot be delivered to the recipient',
    },
    [WhatsAppMessageStatus.UNKNOWN]: {
        final: false,
        retryable: false,
        description: 'Message status is unknown',
    },
    [WhatsAppMessageStatus.PERMANENTLY_FAILED]: {
        final: true,
        retryable: false,
        description: 'Message has permanently failed to send after max retries',
    },
    [WhatsAppMessageStatus.RECEIVED]: {
        final: false,
        retryable: false,
        description: 'Message has been received from a user',
    },
};


/***/ }),
/* 71 */
/***/ ((module) => {

module.exports = require("nestjs-typeorm-paginate");

/***/ }),
/* 72 */
/***/ ((module) => {

module.exports = require("uuid");

/***/ }),
/* 73 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IS_PUBLIC_KEY: () => (/* binding */ IS_PUBLIC_KEY),
/* harmony export */   Public: () => (/* binding */ Public)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);

const IS_PUBLIC_KEY = 'isPublic';
const Public = () => (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(IS_PUBLIC_KEY, true);


/***/ }),
/* 74 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RolesGuard: () => (/* binding */ RolesGuard)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22);
/* harmony import */ var _decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75);
/* harmony import */ var _decorators_permissions_decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(76);
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var RolesGuard_1;






let RolesGuard = RolesGuard_1 = class RolesGuard {
    constructor(reflector, authService) {
        this.reflector = reflector;
        this.authService = authService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(RolesGuard_1.name);
    }
    async canActivate(context) {
        const requiredRoles = this.reflector.getAllAndOverride(_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_3__.ROLES_KEY, [
            context.getHandler(),
            context.getClass(),
        ]);
        const requiredPermissions = this.reflector.getAllAndOverride(_decorators_permissions_decorator__WEBPACK_IMPORTED_MODULE_4__.PERMISSIONS_KEY, [context.getHandler(), context.getClass()]);
        if (!requiredRoles && !requiredPermissions) {
            return true;
        }
        const request = context.switchToHttp().getRequest();
        const user = request.user;
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('User not found in request');
        }
        try {
            if ((requiredRoles === null || requiredRoles === void 0 ? void 0 : requiredRoles.length) > 0) {
                const hasRole = this.matchRoles(requiredRoles, user.role);
                if (!hasRole) {
                    this.logger.warn(`User ${user.id} with role ${user.role} attempted to access resource requiring roles: ${requiredRoles.join(', ')}`);
                    return false;
                }
            }
            if ((requiredPermissions === null || requiredPermissions === void 0 ? void 0 : requiredPermissions.length) > 0) {
                const hasPermissions = await this.matchPermissions(requiredPermissions, user);
                if (!hasPermissions) {
                    this.logger.warn(`User ${user.id} attempted to access resource requiring permissions: ${requiredPermissions.join(', ')}`);
                    return false;
                }
            }
            if (request.params.organizationId) {
                const hasOrgAccess = await this.authService.checkOrganizationAccess(user.id, request.params.organizationId);
                if (!hasOrgAccess) {
                    this.logger.warn(`User ${user.id} attempted to access organization ${request.params.organizationId} without permission`);
                    return false;
                }
            }
            return true;
        }
        catch (error) {
            this.logger.error(`Error in roles guard: ${error.message}`, error.stack);
            return false;
        }
    }
    matchRoles(requiredRoles, userRole) {
        if (userRole === _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_2__.Role.SUPER_ADMIN) {
            return true;
        }
        return requiredRoles.includes(userRole);
    }
    async matchPermissions(requiredPermissions, user) {
        const userPermissions = await this.authService.getUserPermissions(user.id);
        if (user.role === _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_2__.Role.SUPER_ADMIN) {
            return true;
        }
        return requiredPermissions.every((permission) => userPermissions.includes(permission));
    }
    async checkResourceOwnership(user, resourceId, resourceType) {
        return this.authService.checkResourceOwnership(user.id, resourceId, resourceType);
    }
};
RolesGuard = RolesGuard_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_core__WEBPACK_IMPORTED_MODULE_1__.Reflector,
        _services_auth_service__WEBPACK_IMPORTED_MODULE_5__.AuthService])
], RolesGuard);



/***/ }),
/* 75 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ROLES_KEY: () => (/* binding */ ROLES_KEY),
/* harmony export */   Roles: () => (/* binding */ Roles)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);

const ROLES_KEY = 'roles';
const Roles = (...roles) => (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(ROLES_KEY, roles);


/***/ }),
/* 76 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PERMISSIONS_KEY: () => (/* binding */ PERMISSIONS_KEY),
/* harmony export */   Permissions: () => (/* binding */ Permissions)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);

const PERMISSIONS_KEY = 'permissions';
const Permissions = (...permissions) => (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(PERMISSIONS_KEY, permissions);


/***/ }),
/* 77 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateUserDto: () => (/* binding */ CreateUserDto),
/* harmony export */   EmergencyContact: () => (/* binding */ EmergencyContact),
/* harmony export */   UserAddress: () => (/* binding */ UserAddress)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_role_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class UserAddress {
    static _OPENAPI_METADATA_FACTORY() {
        return { street: { required: true, type: () => String, maxLength: 100 }, city: { required: true, type: () => String, maxLength: 100 }, state: { required: true, type: () => String, maxLength: 100 }, postalCode: { required: true, type: () => String, maxLength: 20 }, country: { required: true, type: () => String, maxLength: 100 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UserAddress.prototype, "street", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UserAddress.prototype, "city", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UserAddress.prototype, "state", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(20),
    __metadata("design:type", String)
], UserAddress.prototype, "postalCode", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UserAddress.prototype, "country", void 0);
class EmergencyContact {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String, maxLength: 100 }, relationship: { required: true, type: () => String, maxLength: 100 }, phone: { required: true, type: () => String }, address: { required: false, type: () => String, maxLength: 200 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], EmergencyContact.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], EmergencyContact.prototype, "relationship", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], EmergencyContact.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(200),
    __metadata("design:type", String)
], EmergencyContact.prototype, "address", void 0);
class CreateUserDto {
    constructor() {
        this.requirePasswordChange = true;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { firstName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, lastName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, email: { required: true, type: () => String, maxLength: 100, format: "email" }, password: { required: true, type: () => String, minLength: 8, maxLength: 100, pattern: "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/" }, phoneNumber: { required: true, type: () => String }, role: { required: true, enum: (__webpack_require__(22).Role) }, title: { required: false, type: () => String, maxLength: 100 }, department: { required: false, type: () => String, maxLength: 100 }, employeeId: { required: false, type: () => String, maxLength: 50 }, address: { required: false, type: () => (__webpack_require__(77).UserAddress) }, emergencyContact: { required: false, type: () => (__webpack_require__(77).EmergencyContact) }, licenseNumber: { required: false, type: () => String, maxLength: 50 }, specialization: { required: false, type: () => String, maxLength: 50 }, qualifications: { required: false, type: () => [String] }, certifications: { required: false, type: () => [String] }, isOnCall: { required: false, type: () => Boolean }, languages: { required: false, type: () => [String] }, requirePasswordChange: { required: false, type: () => Boolean, default: true }, preferences: { required: false, type: () => ({ theme: { required: false, type: () => String }, notifications: { required: false, type: () => ({ email: { required: false, type: () => Boolean }, sms: { required: false, type: () => Boolean }, inApp: { required: false, type: () => Boolean } }) }, timezone: { required: false, type: () => String }, language: { required: false, type: () => String } }) }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateUserDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateUserDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateUserDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(8),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/, {
        message: 'Password must contain at least one uppercase letter, one lowercase letter, one number and one special character',
    }),
    __metadata("design:type", String)
], CreateUserDto.prototype, "password", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], CreateUserDto.prototype, "phoneNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: _enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role),
    __metadata("design:type", String)
], CreateUserDto.prototype, "role", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateUserDto.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], CreateUserDto.prototype, "department", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateUserDto.prototype, "employeeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => UserAddress),
    __metadata("design:type", UserAddress)
], CreateUserDto.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => EmergencyContact),
    __metadata("design:type", EmergencyContact)
], CreateUserDto.prototype, "emergencyContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateUserDto.prototype, "licenseNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateUserDto.prototype, "specialization", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateUserDto.prototype, "qualifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateUserDto.prototype, "certifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateUserDto.prototype, "isOnCall", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateUserDto.prototype, "languages", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateUserDto.prototype, "requirePasswordChange", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], CreateUserDto.prototype, "preferences", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], CreateUserDto.prototype, "metadata", void 0);


/***/ }),
/* 78 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateUserDto: () => (/* binding */ UpdateUserDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _create_user_dto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class UpdateUserDto extends (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.PartialType)((0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.OmitType)(_create_user_dto__WEBPACK_IMPORTED_MODULE_1__.CreateUserDto, ['password', 'email'])) {
    static _OPENAPI_METADATA_FACTORY() {
        return { isActive: { required: false, type: () => Boolean }, isLocked: { required: false, type: () => Boolean }, isEmailVerified: { required: false, type: () => Boolean }, isPhoneVerified: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateUserDto.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateUserDto.prototype, "isLocked", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateUserDto.prototype, "isEmailVerified", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateUserDto.prototype, "isPhoneVerified", void 0);


/***/ }),
/* 79 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UserQueryDto: () => (/* binding */ UserQueryDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_role_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class UserQueryDto {
    constructor() {
        this.orderDirection = 'DESC';
        this.skip = 0;
        this.take = 10;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { search: { required: false, type: () => String }, role: { required: false, enum: (__webpack_require__(22).Role) }, isActive: { required: false, type: () => Boolean }, department: { required: false, type: () => String }, page: { required: false, type: () => Number }, limit: { required: false, type: () => Number }, roles: { required: false, enum: (__webpack_require__(22).Role), isArray: true }, departmentIds: { required: false, type: () => [String] }, hasVerifiedEmail: { required: false, type: () => Boolean }, relations: { required: false, type: () => [String] }, orderBy: { required: false, type: () => String }, orderDirection: { required: false, type: () => Object, default: "DESC" }, skip: { required: false, type: () => Number, default: 0, minimum: 0 }, take: { required: false, type: () => Number, default: 10, minimum: 1, maximum: 100 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UserQueryDto.prototype, "search", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role, isArray: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role, { each: true }),
    __metadata("design:type", Array)
], UserQueryDto.prototype, "roles", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    __metadata("design:type", Array)
], UserQueryDto.prototype, "departmentIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Boolean),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Boolean),
    __metadata("design:type", Boolean)
], UserQueryDto.prototype, "hasVerifiedEmail", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], UserQueryDto.prototype, "relations", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Order by field (e.g., "firstName", "lastName", "createdAt")'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UserQueryDto.prototype, "orderBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        enum: ['ASC', 'DESC'],
        default: 'DESC'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UserQueryDto.prototype, "orderDirection", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ default: 0 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], UserQueryDto.prototype, "skip", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ default: 10 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], UserQueryDto.prototype, "take", void 0);


/***/ }),
/* 80 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdatePasswordDto: () => (/* binding */ UpdatePasswordDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class UpdatePasswordDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { currentPassword: { required: true, type: () => String }, newPassword: { required: true, type: () => String, minLength: 8, pattern: "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/" }, confirmPassword: { required: true, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdatePasswordDto.prototype, "currentPassword", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'New password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(8),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]+$/, {
        message: 'Password too weak - must contain at least one uppercase letter, one lowercase letter, one number, and one special character'
    }),
    __metadata("design:type", String)
], UpdatePasswordDto.prototype, "newPassword", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdatePasswordDto.prototype, "confirmPassword", void 0);


/***/ }),
/* 81 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateProfileDto: () => (/* binding */ UpdateProfileDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class UpdateProfileDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { firstName: { required: false, type: () => String, maxLength: 100 }, lastName: { required: false, type: () => String, maxLength: 100 }, email: { required: false, type: () => String, format: "email" }, phone: { required: false, type: () => String }, title: { required: false, type: () => String, maxLength: 200 }, bio: { required: false, type: () => String, maxLength: 500 }, timezone: { required: false, type: () => String }, language: { required: false, type: () => String }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(200),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(500),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "bio", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "timezone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateProfileDto.prototype, "language", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], UpdateProfileDto.prototype, "preferences", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], UpdateProfileDto.prototype, "metadata", void 0);


/***/ }),
/* 82 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SimpleUserDto: () => (/* binding */ SimpleUserDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


class SimpleUserDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, email: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, role: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", String)
], SimpleUserDto.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", String)
], SimpleUserDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", String)
], SimpleUserDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", String)
], SimpleUserDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", String)
], SimpleUserDto.prototype, "role", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Boolean)
], SimpleUserDto.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    __metadata("design:type", Date)
], SimpleUserDto.prototype, "createdAt", void 0);


/***/ }),
/* 83 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityType: () => (/* binding */ ActivityType),
/* harmony export */   UserActivityService: () => (/* binding */ UserActivityService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_user_activity_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(42);
/* harmony import */ var _entities_user_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var UserActivityService_1;





var ActivityType;
(function (ActivityType) {
    ActivityType["LOGIN"] = "LOGIN";
    ActivityType["LOGOUT"] = "LOGOUT";
    ActivityType["PASSWORD_CHANGE"] = "PASSWORD_CHANGE";
    ActivityType["PROFILE_UPDATE"] = "PROFILE_UPDATE";
    ActivityType["MFA_ENABLED"] = "MFA_ENABLED";
    ActivityType["MFA_DISABLED"] = "MFA_DISABLED";
    ActivityType["API_ACCESS"] = "API_ACCESS";
    ActivityType["SETTINGS_CHANGE"] = "SETTINGS_CHANGE";
    ActivityType["ROLE_CHANGE"] = "ROLE_CHANGE";
    ActivityType["DEPARTMENT_ASSIGNMENT"] = "DEPARTMENT_ASSIGNMENT";
    ActivityType["PERMISSION_CHANGE"] = "PERMISSION_CHANGE";
    ActivityType["EXPORT_DATA"] = "EXPORT_DATA";
    ActivityType["BULK_ACTION"] = "BULK_ACTION";
})(ActivityType || (ActivityType = {}));
let UserActivityService = UserActivityService_1 = class UserActivityService {
    constructor(activityRepository, userRepository) {
        this.activityRepository = activityRepository;
        this.userRepository = userRepository;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(UserActivityService_1.name);
    }
    async logActivity(options) {
        try {
            const activity = this.activityRepository.create({
                userId: options.userId,
                organizationId: options.organizationId,
                type: options.type,
                description: options.description,
                metadata: options.metadata,
                ipAddress: options.ip,
                userAgent: options.userAgent,
                referrer: options.referrer,
                status: options.status || 'SUCCESS',
                failureReason: options.failureReason
            });
            const savedActivity = await this.activityRepository.save(activity);
            return Array.isArray(savedActivity) ? savedActivity[0] : savedActivity;
        }
        catch (error) {
            this.logger.error(`Failed to log activity for user ${options.userId}:`, error);
            throw error;
        }
    }
    async getUserActivity(userId, options = {}) {
        var _a;
        const queryBuilder = this.activityRepository
            .createQueryBuilder('activity')
            .where('activity.userId = :userId', { userId })
            .orderBy('activity.createdAt', 'DESC');
        if (options.startDate) {
            queryBuilder.andWhere('activity.createdAt >= :startDate', {
                startDate: options.startDate
            });
        }
        if (options.endDate) {
            queryBuilder.andWhere('activity.createdAt <= :endDate', {
                endDate: options.endDate
            });
        }
        if ((_a = options.types) === null || _a === void 0 ? void 0 : _a.length) {
            queryBuilder.andWhere('activity.type IN (:...types)', {
                types: options.types
            });
        }
        if (options.status) {
            queryBuilder.andWhere('activity.status = :status', {
                status: options.status
            });
        }
        return queryBuilder
            .take(options.limit || 50)
            .skip(options.offset || 0)
            .getManyAndCount();
    }
    async getOrganizationActivity(organizationId, options = {}) {
        var _a, _b;
        const queryBuilder = this.activityRepository
            .createQueryBuilder('activity')
            .where('activity.organizationId = :organizationId', { organizationId })
            .orderBy('activity.createdAt', 'DESC');
        if (options.startDate) {
            queryBuilder.andWhere('activity.createdAt >= :startDate', {
                startDate: options.startDate
            });
        }
        if (options.endDate) {
            queryBuilder.andWhere('activity.createdAt <= :endDate', {
                endDate: options.endDate
            });
        }
        if ((_a = options.types) === null || _a === void 0 ? void 0 : _a.length) {
            queryBuilder.andWhere('activity.type IN (:...types)', {
                types: options.types
            });
        }
        if ((_b = options.userIds) === null || _b === void 0 ? void 0 : _b.length) {
            queryBuilder.andWhere('activity.userId IN (:...userIds)', {
                userIds: options.userIds
            });
        }
        if (options.status) {
            queryBuilder.andWhere('activity.status = :status', {
                status: options.status
            });
        }
        return queryBuilder
            .take(options.limit || 50)
            .skip(options.offset || 0)
            .getManyAndCount();
    }
    async getUserActivitySummary(userId, days = 30) {
        const startDate = new Date();
        startDate.setDate(startDate.getDate() - days);
        const activities = await this.activityRepository
            .createQueryBuilder('activity')
            .select('activity.type')
            .addSelect('COUNT(*)', 'count')
            .where('activity.userId = :userId', { userId })
            .andWhere('activity.createdAt >= :startDate', { startDate })
            .groupBy('activity.type')
            .getRawMany();
        return activities.reduce((acc, curr) => {
            acc[curr.activity_type] = parseInt(curr.count);
            return acc;
        }, {});
    }
    async getMostActiveUsers(organizationId, options = {}) {
        const queryBuilder = this.activityRepository
            .createQueryBuilder('activity')
            .select('activity.userId')
            .addSelect('COUNT(*)', 'count')
            .where('activity.organizationId = :organizationId', { organizationId });
        if (options.startDate) {
            queryBuilder.andWhere('activity.createdAt >= :startDate', {
                startDate: options.startDate
            });
        }
        if (options.endDate) {
            queryBuilder.andWhere('activity.createdAt <= :endDate', {
                endDate: options.endDate
            });
        }
        const results = await queryBuilder
            .groupBy('activity.userId')
            .orderBy('count', 'DESC')
            .limit(options.limit || 10)
            .getRawMany();
        return results.map(result => ({
            userId: result.activity_userId,
            count: parseInt(result.count)
        }));
    }
    async cleanupOldLogs(retentionDays = 90) {
        const cutoffDate = new Date();
        cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
        const result = await this.activityRepository
            .createQueryBuilder()
            .delete()
            .where('createdAt < :cutoffDate', { cutoffDate })
            .execute();
        return result.affected || 0;
    }
};
UserActivityService = UserActivityService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_user_activity_entity__WEBPACK_IMPORTED_MODULE_3__.UserActivity)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_user_entity__WEBPACK_IMPORTED_MODULE_4__.User)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository])
], UserActivityService);



/***/ }),
/* 84 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SessionStatus: () => (/* binding */ SessionStatus),
/* harmony export */   UserSession: () => (/* binding */ UserSession)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _user_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SessionStatus;
(function (SessionStatus) {
    SessionStatus["ACTIVE"] = "ACTIVE";
    SessionStatus["EXPIRED"] = "EXPIRED";
    SessionStatus["REVOKED"] = "REVOKED";
    SessionStatus["LOGGED_OUT"] = "LOGGED_OUT";
})(SessionStatus || (SessionStatus = {}));
let UserSession = class UserSession {
    isExpired() {
        return new Date() > this.expiresAt;
    }
    isActive() {
        return (this.status === SessionStatus.ACTIVE &&
            !this.isExpired());
    }
    canBeExtended() {
        return (this.isActive() &&
            this.isRemembered &&
            this.tokenRotationCount < 10);
    }
    requiresRotation() {
        if (!this.lastTokenRotation) {
            return false;
        }
        const rotationThreshold = 24 * 60 * 60 * 1000;
        const timeSinceLastRotation = Date.now() - this.lastTokenRotation.getTime();
        return timeSinceLastRotation >= rotationThreshold;
    }
    extend(duration) {
        if (!this.canBeExtended()) {
            throw new Error('Session cannot be extended');
        }
        const newExpiryDate = new Date();
        newExpiryDate.setTime(newExpiryDate.getTime() + duration);
        this.expiresAt = newExpiryDate;
        this.tokenRotationCount += 1;
        this.lastTokenRotation = new Date();
    }
    updateActivity() {
        this.lastActivityAt = new Date();
    }
    revoke(revokedBy, reason = '') {
        this.status = SessionStatus.REVOKED;
        this.revokedAt = new Date();
        this.revokedBy = revokedBy;
        this.revokedReason = reason;
    }
    logout() {
        this.status = SessionStatus.LOGGED_OUT;
    }
    isSameIp(ip) {
        return this.ipAddress === ip;
    }
    isSameDevice(deviceId) {
        return this.deviceId === deviceId;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, userId: { required: true, type: () => String }, user: { required: true, type: () => (__webpack_require__(21).User) }, organizationId: { required: true, type: () => String }, token: { required: true, type: () => String }, refreshToken: { required: true, type: () => String }, status: { required: true, enum: (__webpack_require__(84).SessionStatus) }, expiresAt: { required: true, type: () => Date }, lastActivityAt: { required: true, type: () => Date }, ipAddress: { required: true, type: () => String }, userAgent: { required: true, type: () => String }, deviceId: { required: true, type: () => String }, deviceType: { required: true, type: () => String }, browser: { required: true, type: () => String }, operatingSystem: { required: true, type: () => String }, location: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, isMobile: { required: true, type: () => Boolean }, isRemembered: { required: true, type: () => Boolean }, revokedAt: { required: true, type: () => Date }, revokedBy: { required: true, type: () => String }, revokedReason: { required: true, type: () => String }, tokenRotationCount: { required: true, type: () => Number }, lastTokenRotation: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], UserSession.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], UserSession.prototype, "userId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _user_entity__WEBPACK_IMPORTED_MODULE_2__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'userId' }),
    __metadata("design:type", _user_entity__WEBPACK_IMPORTED_MODULE_2__.User)
], UserSession.prototype, "user", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ unique: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], UserSession.prototype, "token", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "refreshToken", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: SessionStatus,
        default: SessionStatus.ACTIVE
    }),
    __metadata("design:type", String)
], UserSession.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp' }),
    __metadata("design:type", Date)
], UserSession.prototype, "expiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], UserSession.prototype, "lastActivityAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "ipAddress", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "userAgent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "deviceId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "deviceType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "browser", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "operatingSystem", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "location", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], UserSession.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], UserSession.prototype, "isMobile", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], UserSession.prototype, "isRemembered", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], UserSession.prototype, "revokedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "revokedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], UserSession.prototype, "revokedReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 0 }),
    __metadata("design:type", Number)
], UserSession.prototype, "tokenRotationCount", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], UserSession.prototype, "lastTokenRotation", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], UserSession.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], UserSession.prototype, "updatedAt", void 0);
UserSession = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('user_sessions')
], UserSession);



/***/ }),
/* 85 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UserEventListener: () => (/* binding */ UserEventListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(46);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49);
/* harmony import */ var _shared_services_audit_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var UserEventListener_1;





let UserEventListener = UserEventListener_1 = class UserEventListener {
    constructor(notificationsService, emailService, auditService) {
        this.notificationsService = notificationsService;
        this.emailService = emailService;
        this.auditService = auditService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(UserEventListener_1.name);
    }
    async handleUserCreated(event) {
        try {
            await Promise.all([
                this.auditService.log({
                    action: 'USER_CREATED',
                    entityType: 'USER',
                    entityId: event.user.id,
                    actorId: event.performedBy,
                    organizationId: event.organizationId,
                    metadata: event.metadata,
                }),
                this.emailService.sendEmail({
                    to: event.user.email,
                    subject: 'Welcome to the Platform',
                    template: 'welcome-email',
                    context: {
                        firstName: event.user.firstName,
                        loginUrl: `${process.env.APP_URL}/login`,
                    },
                }),
                event.organizationId &&
                    this.notificationsService.send({
                        type: 'USER_CREATED',
                        title: 'New User Created',
                        message: `${event.user.firstName} ${event.user.lastName} has joined the organization`,
                        organizationId: event.organizationId,
                        data: {
                            userId: event.user.id,
                            email: event.user.email,
                        },
                        userId: '',
                    }),
            ].filter(Boolean));
        }
        catch (error) {
            this.logger.error('Error handling user created event', {
                error,
                userId: event.user.id
            });
            throw error;
        }
    }
    async handleUserUpdated(event) {
        var _a;
        try {
            await this.auditService.log({
                action: 'USER_UPDATED',
                entityType: 'USER',
                entityId: event.user.id,
                actorId: event.performedBy,
                organizationId: event.organizationId,
                metadata: event.metadata,
            });
            if ((_a = event.metadata) === null || _a === void 0 ? void 0 : _a.importantChanges) {
                await this.notificationsService.send({
                    type: 'PROFILE_UPDATED',
                    title: 'Profile Updates',
                    message: 'Your profile information has been updated',
                    data: {
                        changes: event.metadata.importantChanges,
                    },
                    userId: '',
                });
            }
        }
        catch (error) {
            this.logger.error('Error handling user updated event', {
                error,
                userId: event.user.id,
            });
            throw error;
        }
    }
    async handlePasswordChanged(event) {
        try {
            await Promise.all([
                this.auditService.log({
                    action: 'PASSWORD_CHANGED',
                    entityType: 'USER',
                    entityId: event.user.id,
                    actorId: event.performedBy || event.user.id,
                    organizationId: event.organizationId,
                    metadata: {
                        requiresReset: event.requiresReset,
                        expiresAt: event.expiresAt,
                    },
                }),
                this.emailService.sendEmail({
                    to: event.user.email,
                    subject: 'Password Changed',
                    template: 'password-changed',
                    context: {
                        firstName: event.user.firstName,
                        requiresReset: event.requiresReset,
                        expiresAt: event.expiresAt,
                    },
                }),
            ]);
        }
        catch (error) {
            this.logger.error('Error handling password changed event', {
                error,
                userId: event.user.id,
            });
            throw error;
        }
    }
    async handleStatusChanged(event) {
        try {
            const status = event.user.isActive ? 'activated' : 'deactivated';
            await Promise.all([
                this.auditService.log({
                    action: `USER_${status.toUpperCase()}`,
                    entityType: 'USER',
                    entityId: event.user.id,
                    actorId: event.performedBy,
                    organizationId: event.organizationId,
                    metadata: event.metadata,
                }),
                event.organizationId &&
                    this.notificationsService.send({
                        type: 'USER_STATUS_CHANGED',
                        title: `User Account ${status}`,
                        message: `${event.user.firstName} ${event.user.lastName}'s account has been ${status}`,
                        organizationId: event.organizationId,
                        data: {
                            userId: event.user.id,
                            status,
                        },
                        userId: '',
                    }),
                this.emailService.sendEmail({
                    to: event.user.email,
                    subject: `Account ${status}`,
                    template: `account-${status}`,
                    context: {
                        firstName: event.user.firstName,
                    },
                }),
            ].filter(Boolean));
        }
        catch (error) {
            this.logger.error('Error handling user status changed event', {
                error,
                userId: event.user.id,
            });
            throw error;
        }
    }
    async handleUserDeleted(event) {
        try {
            await Promise.all([
                this.auditService.log({
                    action: 'USER_DELETED',
                    entityType: 'USER',
                    entityId: event.user.id,
                    actorId: event.performedBy,
                    organizationId: event.organizationId,
                    metadata: event.metadata,
                }),
                event.organizationId &&
                    this.notificationsService.send({
                        type: 'USER_DELETED',
                        title: 'User Account Deleted',
                        message: `${event.user.firstName} ${event.user.lastName}'s account has been deleted`,
                        organizationId: event.organizationId,
                        data: {
                            userId: event.user.id,
                            email: event.user.email,
                        },
                        userId: '',
                    }),
            ].filter(Boolean));
        }
        catch (error) {
            this.logger.error('Error handling user deleted event', {
                error,
                userId: event.user.id,
            });
            throw error;
        }
    }
    async handleUserLogin(event) {
        var _a;
        try {
            await Promise.all([
                this.auditService.log({
                    action: 'USER_LOGIN',
                    entityType: 'USER',
                    entityId: event.user.id,
                    actorId: event.user.id,
                    organizationId: event.organizationId,
                    metadata: Object.assign({ ip: event.ip, userAgent: event.userAgent }, event.metadata),
                }),
                ((_a = event.metadata) === null || _a === void 0 ? void 0 : _a.suspicious) &&
                    this.notificationsService.send({
                        type: 'SUSPICIOUS_LOGIN',
                        title: 'Suspicious Login Detected',
                        message: 'A login attempt from an unrecognized device was detected',
                        userId: event.user.id,
                        priority: 'HIGH',
                        data: {
                            ip: event.ip,
                            userAgent: event.userAgent,
                            location: event.metadata.location,
                        },
                    }),
            ].filter(Boolean));
        }
        catch (error) {
            this.logger.error('Error handling user login event', {
                error,
                userId: event.user.id,
            });
            throw error;
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.created'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserEventListener.prototype, "handleUserCreated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.updated'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserEventListener.prototype, "handleUserUpdated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.password.changed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserEventListener.prototype, "handlePasswordChanged", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.status.changed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserEventListener.prototype, "handleStatusChanged", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.deleted'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserEventListener.prototype, "handleUserDeleted", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.login'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserEventListener.prototype, "handleUserLogin", null);
UserEventListener = UserEventListener_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_2__.NotificationsService,
        _shared_services_email_service__WEBPACK_IMPORTED_MODULE_3__.EmailService,
        _shared_services_audit_service__WEBPACK_IMPORTED_MODULE_4__.AuditService])
], UserEventListener);



/***/ }),
/* 86 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuditService: () => (/* binding */ AuditService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _modules_audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};




let AuditService = class AuditService {
    constructor(auditLogRepository) {
        this.auditLogRepository = auditLogRepository;
    }
    async log(dto, request) {
        var _a, _b;
        const auditLog = this.auditLogRepository.create({
            action: dto.action,
            entityType: dto.entityType,
            entityId: dto.entityId.toString(),
            changes: dto.changes || {},
            metadata: Object.assign(Object.assign({}, dto.metadata), { ipAddress: dto.ipAddress || (request === null || request === void 0 ? void 0 : request.ip), userAgent: dto.userAgent || (request === null || request === void 0 ? void 0 : request.headers['user-agent']), timestamp: new Date() }),
            actorId: (_a = dto.actorId) === null || _a === void 0 ? void 0 : _a.toString(),
            organizationId: (_b = dto.organizationId) === null || _b === void 0 ? void 0 : _b.toString(),
        });
        return this.auditLogRepository.save(auditLog);
    }
    async getEntityAuditLogs(entityType, entityId, options = {}) {
        var _a;
        const query = this.auditLogRepository
            .createQueryBuilder('audit_log')
            .where('audit_log.entityType = :entityType', { entityType })
            .andWhere('audit_log.entityId = :entityId', { entityId: entityId.toString() });
        if (options.startDate) {
            query.andWhere('audit_log.createdAt >= :startDate', { startDate: options.startDate });
        }
        if (options.endDate) {
            query.andWhere('audit_log.createdAt <= :endDate', { endDate: options.endDate });
        }
        if ((_a = options.actions) === null || _a === void 0 ? void 0 : _a.length) {
            query.andWhere('audit_log.action IN (:...actions)', { actions: options.actions });
        }
        query
            .orderBy('audit_log.createdAt', 'DESC')
            .skip(options.offset || 0)
            .take(options.limit || 50);
        return query.getManyAndCount();
    }
    async getUserAuditLogs(actorId, options = {}) {
        var _a, _b;
        const query = this.auditLogRepository
            .createQueryBuilder('audit_log')
            .where('audit_log.actorId = :actorId', { actorId: actorId.toString() });
        if (options.startDate) {
            query.andWhere('audit_log.createdAt >= :startDate', { startDate: options.startDate });
        }
        if (options.endDate) {
            query.andWhere('audit_log.createdAt <= :endDate', { endDate: options.endDate });
        }
        if ((_a = options.actions) === null || _a === void 0 ? void 0 : _a.length) {
            query.andWhere('audit_log.action IN (:...actions)', { actions: options.actions });
        }
        if ((_b = options.entityTypes) === null || _b === void 0 ? void 0 : _b.length) {
            query.andWhere('audit_log.entityType IN (:...entityTypes)', { entityTypes: options.entityTypes });
        }
        query
            .orderBy('audit_log.createdAt', 'DESC')
            .skip(options.offset || 0)
            .take(options.limit || 50);
        return query.getManyAndCount();
    }
    async getOrganizationAuditLogs(organizationId, options = {}) {
        var _a, _b, _c;
        const query = this.auditLogRepository
            .createQueryBuilder('audit_log')
            .where('audit_log.organizationId = :organizationId', { organizationId: organizationId.toString() });
        if (options.startDate) {
            query.andWhere('audit_log.createdAt >= :startDate', { startDate: options.startDate });
        }
        if (options.endDate) {
            query.andWhere('audit_log.createdAt <= :endDate', { endDate: options.endDate });
        }
        if ((_a = options.actions) === null || _a === void 0 ? void 0 : _a.length) {
            query.andWhere('audit_log.action IN (:...actions)', { actions: options.actions });
        }
        if ((_b = options.entityTypes) === null || _b === void 0 ? void 0 : _b.length) {
            query.andWhere('audit_log.entityType IN (:...entityTypes)', { entityTypes: options.entityTypes });
        }
        if ((_c = options.actorIds) === null || _c === void 0 ? void 0 : _c.length) {
            query.andWhere('audit_log.actorId IN (:...actorIds)', {
                actorIds: options.actorIds.map(id => id.toString()),
            });
        }
        query
            .orderBy('audit_log.createdAt', 'DESC')
            .skip(options.offset || 0)
            .take(options.limit || 50);
        return query.getManyAndCount();
    }
    async cleanupOldLogs(retentionDays = 90) {
        const cutoffDate = new Date();
        cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
        const result = await this.auditLogRepository
            .createQueryBuilder()
            .delete()
            .where('createdAt < :cutoffDate', { cutoffDate })
            .execute();
        return result.affected || 0;
    }
};
AuditService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_modules_audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.AuditLog)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository])
], AuditService);



/***/ }),
/* 87 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuditLog: () => (/* binding */ AuditLog),
/* harmony export */   AuditLogSeverity: () => (/* binding */ AuditLogSeverity),
/* harmony export */   AuditLogStatus: () => (/* binding */ AuditLogStatus),
/* harmony export */   AuditLogType: () => (/* binding */ AuditLogType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AuditLogType;
(function (AuditLogType) {
    AuditLogType["AUTHENTICATION"] = "authentication";
    AuditLogType["AUTHORIZATION"] = "authorization";
    AuditLogType["DATA_ACCESS"] = "data_access";
    AuditLogType["DATA_MODIFICATION"] = "data_modification";
    AuditLogType["SYSTEM"] = "system";
    AuditLogType["SECURITY"] = "security";
    AuditLogType["COMPLIANCE"] = "compliance";
    AuditLogType["BUSINESS"] = "business";
})(AuditLogType || (AuditLogType = {}));
var AuditLogSeverity;
(function (AuditLogSeverity) {
    AuditLogSeverity["INFO"] = "info";
    AuditLogSeverity["WARNING"] = "warning";
    AuditLogSeverity["ERROR"] = "error";
    AuditLogSeverity["CRITICAL"] = "critical";
})(AuditLogSeverity || (AuditLogSeverity = {}));
var AuditLogStatus;
(function (AuditLogStatus) {
    AuditLogStatus["SUCCESS"] = "success";
    AuditLogStatus["FAILURE"] = "failure";
    AuditLogStatus["PENDING"] = "pending";
    AuditLogStatus["CANCELLED"] = "cancelled";
})(AuditLogStatus || (AuditLogStatus = {}));
let AuditLog = class AuditLog {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(87).AuditLogType) }, severity: { required: true, enum: (__webpack_require__(87).AuditLogSeverity) }, organizationId: { required: true, type: () => String }, status: { required: true, enum: (__webpack_require__(87).AuditLogStatus) }, action: { required: true, type: () => String }, description: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, actorId: { required: true, type: () => String }, actorType: { required: true, type: () => String }, actor: { required: true, type: () => (__webpack_require__(21).User) }, entityId: { required: true, type: () => String }, entityType: { required: true, type: () => String }, changes: { required: true, type: () => ({ before: { required: true, type: () => Object }, after: { required: true, type: () => Object } }) }, ipAddress: { required: true, type: () => String }, userAgent: { required: true, type: () => String }, requestId: { required: true, type: () => String }, sessionId: { required: true, type: () => String }, origin: { required: true, type: () => String }, timestamp: { required: true, type: () => Date }, duration: { required: true, type: () => Number }, location: { required: true, type: () => ({ country: { required: false, type: () => String }, region: { required: false, type: () => String }, city: { required: false, type: () => String }, coordinates: { required: false, type: () => ({ latitude: { required: true, type: () => Number }, longitude: { required: true, type: () => Number } }) } }) }, securityContext: { required: true, type: () => ({ permissions: { required: false, type: () => [String] }, roles: { required: false, type: () => [String] }, authenticationType: { required: false, type: () => String }, authenticationMethod: { required: false, type: () => String }, mfaUsed: { required: false, type: () => Boolean } }) }, complianceMetadata: { required: true, type: () => ({ regulations: { required: false, type: () => [String] }, dataClassification: { required: false, type: () => String }, retentionPeriod: { required: false, type: () => Number }, piiInvolved: { required: false, type: () => Boolean }, dlpPolicies: { required: false, type: () => [String] } }) }, error: { required: true, type: () => ({ code: { required: false, type: () => String }, message: { required: false, type: () => String }, stack: { required: false, type: () => String }, details: { required: false, type: () => Object } }) }, tags: { required: true, type: () => [String] }, riskAssessment: { required: true, type: () => ({ level: { required: false, type: () => Object }, factors: { required: false, type: () => [String] }, score: { required: false, type: () => Number }, mitigations: { required: false, type: () => [String] } }) }, businessContext: { required: true, type: () => ({ process: { required: false, type: () => String }, department: { required: false, type: () => String }, costCenter: { required: false, type: () => String }, projectId: { required: false, type: () => String } }) }, systemContext: { required: true, type: () => ({ environment: { required: false, type: () => String }, version: { required: false, type: () => String }, component: { required: false, type: () => String }, hostname: { required: false, type: () => String } }) }, lastModified: { required: true, type: () => Date }, expiresAt: { required: true, type: () => Date }, archived: { required: true, type: () => Boolean }, archivedAt: { required: true, type: () => Date }, redacted: { required: true, type: () => Boolean }, redactedAt: { required: true, type: () => Date }, customMetadata: { required: true, type: () => Object } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], AuditLog.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: AuditLogType,
        default: AuditLogType.SYSTEM
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], AuditLog.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: AuditLogSeverity,
        default: AuditLogSeverity.INFO
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], AuditLog.prototype, "severity", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: AuditLogStatus,
        default: AuditLogStatus.SUCCESS
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], AuditLog.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], AuditLog.prototype, "action", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text'),
    __metadata("design:type", String)
], AuditLog.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "actorId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "actorType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'actorId' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_2__.User)
], AuditLog.prototype, "actor", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "entityId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "entityType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "changes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "ipAddress", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "userAgent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "requestId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "sessionId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { nullable: true }),
    __metadata("design:type", String)
], AuditLog.prototype, "origin", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Date)
], AuditLog.prototype, "timestamp", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Number)
], AuditLog.prototype, "duration", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "location", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "securityContext", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "complianceMetadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "error", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { array: true, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Array)
], AuditLog.prototype, "tags", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "riskAssessment", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "businessContext", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "systemContext", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], AuditLog.prototype, "lastModified", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], AuditLog.prototype, "expiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Boolean)
], AuditLog.prototype, "archived", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], AuditLog.prototype, "archivedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Boolean)
], AuditLog.prototype, "redacted", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], AuditLog.prototype, "redactedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], AuditLog.prototype, "customMetadata", void 0);
AuditLog = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('audit_logs'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['entityType', 'entityId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['actorType', 'actorId']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['timestamp', 'type'])
], AuditLog);



/***/ }),
/* 88 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UserActivityListener: () => (/* binding */ UserActivityListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var UserActivityListener_1;



let UserActivityListener = UserActivityListener_1 = class UserActivityListener {
    constructor(activityService) {
        this.activityService = activityService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(UserActivityListener_1.name);
    }
    async handleUserLogin(event) {
        var _a, _b, _c;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.LOGIN,
            status: event.status,
            failureReason: event.failureReason,
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
            referrer: (_c = event.request) === null || _c === void 0 ? void 0 : _c.headers.referer,
        });
    }
    async handleUserLogout(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.LOGOUT,
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handlePasswordChange(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.PASSWORD_CHANGE,
            status: event.status,
            failureReason: event.failureReason,
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handleProfileUpdate(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.PROFILE_UPDATE,
            metadata: { changes: event.changes },
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handleMfaEnabled(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.MFA_ENABLED,
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handleMfaDisabled(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.MFA_DISABLED,
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handleRoleChange(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.ROLE_CHANGE,
            metadata: {
                oldRole: event.oldRole,
                newRole: event.newRole,
                changedBy: event.changedBy,
            },
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handleDepartmentAssignment(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.DEPARTMENT_ASSIGNMENT,
            metadata: {
                departmentId: event.departmentId,
                action: event.action,
                performedBy: event.performedBy,
            },
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handlePermissionChange(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.PERMISSION_CHANGE,
            metadata: {
                changes: event.changes,
                performedBy: event.performedBy,
            },
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handleDataExport(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.EXPORT_DATA,
            metadata: {
                exportType: event.exportType,
                dataTypes: event.dataTypes,
            },
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
    async handleBulkAction(event) {
        var _a, _b;
        await this.activityService.logActivity({
            userId: event.userId,
            organizationId: event.organizationId,
            type: _services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.ActivityType.BULK_ACTION,
            metadata: Object.assign({ action: event.action, targetIds: event.targetIds }, event.metadata),
            ip: (_a = event.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = event.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.login'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleUserLogin", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.logout'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleUserLogout", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.password_change'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handlePasswordChange", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.profile_update'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleProfileUpdate", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.mfa.enabled'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleMfaEnabled", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.mfa.disabled'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleMfaDisabled", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.role_change'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleRoleChange", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.department_assignment'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleDepartmentAssignment", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.permission_change'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handlePermissionChange", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.data_export'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleDataExport", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.bulk_action'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], UserActivityListener.prototype, "handleBulkAction", null);
UserActivityListener = UserActivityListener_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_services_user_activity_service__WEBPACK_IMPORTED_MODULE_2__.UserActivityService])
], UserActivityListener);



/***/ }),
/* 89 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationsModule: () => (/* binding */ NotificationsModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _controllers_notifications_controller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(90);
/* harmony import */ var _services_notifications_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(46);
/* harmony import */ var _services_notification_scheduler_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94);
/* harmony import */ var _entities_notification_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(39);
/* harmony import */ var _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(48);
/* harmony import */ var _entities_notification_template_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(47);
/* harmony import */ var _entities_email_template_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(53);
/* harmony import */ var _entities_email_log_entity__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(54);
/* harmony import */ var _entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(56);
/* harmony import */ var _domain_entities_domain_entity__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(59);
/* harmony import */ var _domain_entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(61);
/* harmony import */ var _listeners_notification_listener__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(98);
/* harmony import */ var _listeners_notification_schedule_listener__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(102);
/* harmony import */ var _listeners_notification_delivery_listener__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(103);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(14);
/* harmony import */ var _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(104);
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(118);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(49);
/* harmony import */ var _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(63);
/* harmony import */ var _shared_services_push_notification_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(95);
/* harmony import */ var _shared_services_webhook_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(100);
/* harmony import */ var _whatsapp_services_whatsapp_services__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(65);
/* harmony import */ var _services_notification_delivery_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(99);
/* harmony import */ var _integrations_slack_services_slack_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(97);
/* harmony import */ var _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(58);
/* harmony import */ var _whatsapp_entities_whatsapp_message_entity__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(67);
/* harmony import */ var _whatsapp_entities_whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(68);
/* harmony import */ var _whatsapp_entities_whatsapp_log_entity__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(139);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
































let NotificationsModule = class NotificationsModule {
};
NotificationsModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_notification_entity__WEBPACK_IMPORTED_MODULE_7__.Notification,
                _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_8__.NotificationPreference,
                _entities_notification_template_entity__WEBPACK_IMPORTED_MODULE_9__.NotificationTemplate,
                _entities_email_template_entity__WEBPACK_IMPORTED_MODULE_10__.EmailTemplate,
                _entities_email_log_entity__WEBPACK_IMPORTED_MODULE_11__.EmailLog,
                _entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_12__.EmailQueue,
                _domain_entities_domain_entity__WEBPACK_IMPORTED_MODULE_13__.Domain,
                _domain_entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_14__.DomainVerificationToken,
                _whatsapp_entities_whatsapp_message_entity__WEBPACK_IMPORTED_MODULE_29__.WhatsAppMessage,
                _whatsapp_entities_whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_30__.WhatsappTemplate,
                _whatsapp_entities_whatsapp_log_entity__WEBPACK_IMPORTED_MODULE_31__.WhatsappLog
            ]),
            _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitterModule.forRoot({
                wildcard: true,
                maxListeners: 20,
                verboseMemoryLeak: true,
            }),
            _nestjs_config__WEBPACK_IMPORTED_MODULE_3__.ConfigModule,
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _users_users_module__WEBPACK_IMPORTED_MODULE_18__.UsersModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_19__.OrganizationsModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _auth_auth_module__WEBPACK_IMPORTED_MODULE_20__.AuthModule)
        ],
        controllers: [_controllers_notifications_controller__WEBPACK_IMPORTED_MODULE_4__.NotificationsController],
        providers: [
            _services_notifications_service__WEBPACK_IMPORTED_MODULE_5__.NotificationsService,
            _services_notification_scheduler_service__WEBPACK_IMPORTED_MODULE_6__.NotificationSchedulerService,
            _services_notification_delivery_service__WEBPACK_IMPORTED_MODULE_26__.NotificationDeliveryService,
            _listeners_notification_listener__WEBPACK_IMPORTED_MODULE_15__.NotificationListener,
            _listeners_notification_schedule_listener__WEBPACK_IMPORTED_MODULE_16__.NotificationScheduleListener,
            _listeners_notification_delivery_listener__WEBPACK_IMPORTED_MODULE_17__.NotificationDeliveryListener,
            _shared_services_email_service__WEBPACK_IMPORTED_MODULE_21__.EmailService,
            _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_22__.SmsService,
            _shared_services_push_notification_service__WEBPACK_IMPORTED_MODULE_23__.PushNotificationService,
            _shared_services_webhook_service__WEBPACK_IMPORTED_MODULE_24__.WebhookService,
            _whatsapp_services_whatsapp_services__WEBPACK_IMPORTED_MODULE_25__.WhatsappService,
            _integrations_slack_services_slack_service__WEBPACK_IMPORTED_MODULE_27__.SlackService,
            _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_28__.DomainVerificationService
        ],
        exports: [
            _services_notifications_service__WEBPACK_IMPORTED_MODULE_5__.NotificationsService,
            _services_notification_delivery_service__WEBPACK_IMPORTED_MODULE_26__.NotificationDeliveryService
        ]
    })
], NotificationsModule);



/***/ }),
/* 90 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationsController: () => (/* binding */ NotificationsController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74);
/* harmony import */ var _auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
/* harmony import */ var _services_notifications_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(46);
/* harmony import */ var _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(40);
/* harmony import */ var _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(41);
/* harmony import */ var _dto_notification_query_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(91);
/* harmony import */ var _dto_notification_preferences_dto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(92);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};












let NotificationsController = class NotificationsController {
    constructor(notificationsService) {
        this.notificationsService = notificationsService;
    }
    async create(createNotificationDto, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.create(Object.assign(Object.assign({}, createNotificationDto), { organizationId: req.organization.id, senderId: req.user.id }));
    }
    async findAll(query, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        const notificationQuery = {
            skip: query.skip,
            take: query.take,
            includeRead: query.includeRead,
            organizationId: req.organization.id,
        };
        return this.notificationsService.getUserNotifications(req.user.id, notificationQuery);
    }
    async getUnreadCount(req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.getUnreadCount(req.user.id);
    }
    async findOne(id, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        const notification = await this.notificationsService.getNotificationById(id, req.organization.id, req.user.id);
        if (!notification) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.NotFoundException('Notification not found');
        }
        return notification;
    }
    async update(id, updateNotificationDto, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.updateNotification(id, Object.assign(Object.assign({}, updateNotificationDto), { organizationId: req.organization.id }));
    }
    async remove(id, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        await this.notificationsService.updateNotification(id, { isDeleted: true, organizationId: req.organization.id });
    }
    async markAsRead(id, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.markAsRead(id, req.user.id);
    }
    async markAllAsRead(req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.markAllAsRead(req.user.id);
    }
    async getPreferences(req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.getUserPreferences(req.organization.id, req.user.id);
    }
    async updatePreferences(preferencesDto, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.getUserPreferences(req.organization.id, req.user.id);
    }
    async sendTestNotification(data, req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.sendNotification(req.user.id, data.type, Object.assign(Object.assign({}, data), { organizationId: req.organization.id, userId: req.user.id }));
    }
    async getChannels(req) {
        if (!req.organization || !req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User or organization not found');
        }
        return this.notificationsService.getNotificationChannels(req.organization.id, req.user.id);
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Create new notification' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Notification created successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__.CreateNotificationDto, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "create", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get user notifications' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return user notifications' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_notification_query_dto__WEBPACK_IMPORTED_MODULE_9__.NotificationQueryDto, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "findAll", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('unread'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get unread notifications count' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return unread notifications count' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Number }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "getUnreadCount", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get notification by id' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return notification details' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(39).Notification) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "findOne", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update notification' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Notification updated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(39).Notification) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_8__.UpdateNotificationDto, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "update", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Delete notification' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.NO_CONTENT, description: 'Notification deleted successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "remove", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/mark-read'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Mark notification as read' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Notification marked as read' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "markAsRead", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('mark-all-read'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Mark all notifications as read' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'All notifications marked as read' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "markAllAsRead", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('preferences'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get notification preferences' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return notification preferences' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "getPreferences", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)('preferences'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update notification preferences' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Preferences updated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_notification_preferences_dto__WEBPACK_IMPORTED_MODULE_10__.NotificationPreferencesDto, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "updatePreferences", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('test'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Send test notification' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Test notification sent successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "sendTestNotification", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('channels'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get available notification channels' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return available channels' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationsController.prototype, "getChannels", null);
NotificationsController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Notifications'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('notifications'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__.JwtAuthGuard, _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__.RolesGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    __metadata("design:paramtypes", [_services_notifications_service__WEBPACK_IMPORTED_MODULE_6__.NotificationsService])
], NotificationsController);



/***/ }),
/* 91 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DateRangeDto: () => (/* binding */ DateRangeDto),
/* harmony export */   NotificationQueryDto: () => (/* binding */ NotificationQueryDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class DateRangeDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { startDate: { required: false, type: () => String }, endDate: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Start date for the range' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], DateRangeDto.prototype, "startDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'End date for the range' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], DateRangeDto.prototype, "endDate", void 0);
class NotificationQueryDto {
    constructor() {
        this.page = 1;
        this.limit = 10;
        this.sortBy = 'createdAt';
        this.sortOrder = 'DESC';
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { skip: { required: false, type: () => Number, format: "uuid" }, take: { required: false, type: () => Number }, includeRead: { required: false, type: () => Boolean }, categories: { required: false, enum: (__webpack_require__(48).NotificationCategory), isArray: true }, userId: { required: false, type: () => String }, organizationId: { required: false, type: () => String }, channels: { required: false, enum: (__webpack_require__(48).NotificationChannel), isArray: true }, isRead: { required: false, type: () => Boolean }, isArchived: { required: false, type: () => Boolean }, userIds: { required: false, type: () => [String], format: "uuid", maxItems: 50 }, status: { required: false, type: () => String, format: "uuid", maxItems: 50 }, recipientIds: { required: false, type: () => [String] }, type: { required: false, type: () => String }, read: { required: false, type: () => Boolean }, priority: { required: false, type: () => String }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date }, senderIds: { required: false, type: () => [String], format: "uuid", maxItems: 50 }, dateRange: { required: false, type: () => (__webpack_require__(91).DateRangeDto) }, priorities: { required: false, type: () => [String], maxItems: 10 }, statuses: { required: false, type: () => [String], maxItems: 10 }, tags: { required: false, type: () => [String], maxItems: 20 }, isActionable: { required: false, type: () => Boolean }, isActionTaken: { required: false, type: () => Boolean }, includeDeleted: { required: false, type: () => Boolean }, groupBy: { required: false, type: () => String }, page: { required: false, type: () => Number, default: 1, minimum: 1 }, limit: { required: false, type: () => Number, default: 10, minimum: 1, maximum: 100 }, sortBy: { required: false, type: () => String, default: "createdAt" }, sortOrder: { required: false, type: () => Object, default: "DESC" }, templateIds: { required: false, type: () => [String], format: "uuid" }, deliveryStatuses: { required: false, type: () => [String] }, hasAttachments: { required: false, type: () => Boolean }, sources: { required: false, type: () => [String] }, includeMetadata: { required: false, type: () => Boolean }, includeReadReceipts: { required: false, type: () => Boolean }, importanceLevel: { required: false, type: () => Number, minimum: 1, maximum: 5 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Search term for notification content' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", Number)
], NotificationQueryDto.prototype, "skip", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationCategory, isArray: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationCategory, { each: true }),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "categories", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel, isArray: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel, { each: true }),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by read status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "isRead", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by archived status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "isArchived", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific user IDs' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(50),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "userIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific recipient IDs' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(50),
    __metadata("design:type", String)
], NotificationQueryDto.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific sender IDs' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(50),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "senderIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DateRangeDto),
    __metadata("design:type", DateRangeDto)
], NotificationQueryDto.prototype, "dateRange", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by priority levels' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(10),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "priorities", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by status types' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(10),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "statuses", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific tags' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(20),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by actionable status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "isActionable", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by action taken status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "isActionTaken", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include deleted notifications' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "includeDeleted", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Group results by field' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], NotificationQueryDto.prototype, "groupBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Page number', minimum: 1 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], NotificationQueryDto.prototype, "page", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Items per page', minimum: 1, maximum: 100 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], NotificationQueryDto.prototype, "limit", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Sort field' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], NotificationQueryDto.prototype, "sortBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Sort order', enum: ['ASC', 'DESC'] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(['ASC', 'DESC']),
    __metadata("design:type", String)
], NotificationQueryDto.prototype, "sortOrder", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific template IDs' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "templateIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by delivery status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "deliveryStatuses", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include only notifications with attachments' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "hasAttachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific source systems' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationQueryDto.prototype, "sources", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include metadata in response' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "includeMetadata", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include read receipts in response' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], NotificationQueryDto.prototype, "includeReadReceipts", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by importance level', minimum: 1, maximum: 5 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(5),
    __metadata("design:type", Number)
], NotificationQueryDto.prototype, "importanceLevel", void 0);


/***/ }),
/* 92 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateNotificationPreferenceDto: () => (/* binding */ CreateNotificationPreferenceDto),
/* harmony export */   NotificationPreferencesDto: () => (/* binding */ NotificationPreferencesDto),
/* harmony export */   UpdateNotificationPreferenceDto: () => (/* binding */ UpdateNotificationPreferenceDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48);
/* harmony import */ var _channel_settings_dto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(93);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






class NotificationPreferencesDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { category: { required: true, enum: (__webpack_require__(48).NotificationCategory) }, channels: { required: true, enum: (__webpack_require__(48).NotificationChannel), isArray: true }, frequency: { required: true, enum: (__webpack_require__(48).NotificationFrequency) }, enabled: { required: false, type: () => Boolean }, startTime: { required: false, type: () => String }, endTime: { required: false, type: () => String }, workDays: { required: false, type: () => [String] }, customSchedule: { required: false, type: () => ({ days: { required: true, type: () => [String] }, times: { required: true, type: () => [String] }, timezone: { required: true, type: () => String } }) }, channelSpecificSettings: { required: false, type: () => (__webpack_require__(93).ChannelSettingsDto) }, filters: { required: false, type: () => ({ priority: { required: false, type: () => [String] }, status: { required: false, type: () => [String] }, types: { required: false, type: () => [String] }, senders: { required: false, type: () => [String] }, keywords: { required: false, type: () => [String] }, excludeKeywords: { required: false, type: () => [String] } }) }, importanceThreshold: { required: false, type: () => Number }, muteAll: { required: false, type: () => Boolean }, muteUntil: { required: false, type: () => Date }, digestSettings: { required: false, type: () => ({ groupBy: { required: false, type: () => [String] }, sortBy: { required: false, type: () => String }, maxItems: { required: false, type: () => Number }, format: { required: false, type: () => String } }) }, allowReminders: { required: false, type: () => Boolean }, reminderInterval: { required: false, type: () => Number }, maxReminders: { required: false, type: () => Number }, enabledChannels: { required: true, enum: (__webpack_require__(48).NotificationChannel), isArray: true } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel,
        isArray: true,
        default: [_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.EMAIL, _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel.IN_APP],
        description: 'Enabled notification channels'
    }),
    __metadata("design:type", Array)
], NotificationPreferencesDto.prototype, "enabledChannels", void 0);
class CreateNotificationPreferenceDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { category: { required: true, enum: (__webpack_require__(48).NotificationCategory) }, channels: { required: true, enum: (__webpack_require__(48).NotificationChannel), isArray: true, minItems: 1 }, frequency: { required: true, enum: (__webpack_require__(48).NotificationFrequency) }, enabled: { required: false, type: () => Boolean }, startTime: { required: false, type: () => String, pattern: "/^([01]\\d|2[0-3]):([0-5]\\d)$/" }, endTime: { required: false, type: () => String, pattern: "/^([01]\\d|2[0-3]):([0-5]\\d)$/" }, workDays: { required: false, type: () => [String] }, customSchedule: { required: false, type: () => ({ days: { required: true, type: () => [String] }, times: { required: true, type: () => [String] }, timezone: { required: true, type: () => String } }) }, channelSpecificSettings: { required: false, type: () => (__webpack_require__(93).ChannelSettingsDto) }, filters: { required: false, type: () => ({ priority: { required: false, type: () => [String] }, status: { required: false, type: () => [String] }, types: { required: false, type: () => [String] }, senders: { required: false, type: () => [String] }, keywords: { required: false, type: () => [String] }, excludeKeywords: { required: false, type: () => [String] } }) }, importanceThreshold: { required: false, type: () => Number, minimum: 0, maximum: 100 }, muteAll: { required: false, type: () => Boolean }, muteUntil: { required: false, type: () => Date }, digestSettings: { required: false, type: () => ({ groupBy: { required: false, type: () => [String] }, sortBy: { required: false, type: () => String }, maxItems: { required: false, type: () => Number }, format: { required: false, type: () => String } }) }, allowReminders: { required: false, type: () => Boolean }, reminderInterval: { required: false, type: () => Number, minimum: 1 }, maxReminders: { required: false, type: () => Number, minimum: 0, maximum: 10 }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationCategory }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationCategory),
    __metadata("design:type", String)
], CreateNotificationPreferenceDto.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel, isArray: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMinSize)(1),
    __metadata("design:type", Array)
], CreateNotificationPreferenceDto.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationFrequency }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationFrequency),
    __metadata("design:type", String)
], CreateNotificationPreferenceDto.prototype, "frequency", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateNotificationPreferenceDto.prototype, "enabled", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^([01]\d|2[0-3]):([0-5]\d)$/, {
        message: 'Start time must be in HH:mm format'
    }),
    __metadata("design:type", String)
], CreateNotificationPreferenceDto.prototype, "startTime", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^([01]\d|2[0-3]):([0-5]\d)$/, {
        message: 'End time must be in HH:mm format'
    }),
    __metadata("design:type", String)
], CreateNotificationPreferenceDto.prototype, "endTime", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateNotificationPreferenceDto.prototype, "workDays", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => CustomScheduleDto),
    __metadata("design:type", Object)
], CreateNotificationPreferenceDto.prototype, "customSchedule", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => _channel_settings_dto__WEBPACK_IMPORTED_MODULE_4__.ChannelSettingsDto),
    __metadata("design:type", _channel_settings_dto__WEBPACK_IMPORTED_MODULE_4__.ChannelSettingsDto)
], CreateNotificationPreferenceDto.prototype, "channelSpecificSettings", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => NotificationFiltersDto),
    __metadata("design:type", Object)
], CreateNotificationPreferenceDto.prototype, "filters", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], CreateNotificationPreferenceDto.prototype, "importanceThreshold", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateNotificationPreferenceDto.prototype, "muteAll", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", Date)
], CreateNotificationPreferenceDto.prototype, "muteUntil", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DigestSettingsDto),
    __metadata("design:type", Object)
], CreateNotificationPreferenceDto.prototype, "digestSettings", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CreateNotificationPreferenceDto.prototype, "allowReminders", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], CreateNotificationPreferenceDto.prototype, "reminderInterval", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(10),
    __metadata("design:type", Number)
], CreateNotificationPreferenceDto.prototype, "maxReminders", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], CreateNotificationPreferenceDto.prototype, "metadata", void 0);
class CustomScheduleDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { days: { required: true, type: () => [String] }, times: { required: true, type: () => [String], pattern: "/^([01]\\d|2[0-3]):([0-5]\\d)$/" }, timezone: { required: true, type: () => String } };
    }
}
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CustomScheduleDto.prototype, "days", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^([01]\d|2[0-3]):([0-5]\d)$/, {
        message: 'Times must be in HH:mm format',
        each: true
    }),
    __metadata("design:type", Array)
], CustomScheduleDto.prototype, "times", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], CustomScheduleDto.prototype, "timezone", void 0);
class NotificationFiltersDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { priority: { required: false, type: () => [String] }, status: { required: false, type: () => [String] }, types: { required: false, type: () => [String] }, senders: { required: false, type: () => [String] }, keywords: { required: false, type: () => [String] }, excludeKeywords: { required: false, type: () => [String] } };
    }
}
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationFiltersDto.prototype, "priority", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationFiltersDto.prototype, "status", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationFiltersDto.prototype, "types", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationFiltersDto.prototype, "senders", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationFiltersDto.prototype, "keywords", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], NotificationFiltersDto.prototype, "excludeKeywords", void 0);
class DigestSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { groupBy: { required: false, type: () => [String] }, sortBy: { required: false, type: () => String }, maxItems: { required: false, type: () => Number, minimum: 1 }, format: { required: false, type: () => String } };
    }
}
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], DigestSettingsDto.prototype, "groupBy", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], DigestSettingsDto.prototype, "sortBy", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], DigestSettingsDto.prototype, "maxItems", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], DigestSettingsDto.prototype, "format", void 0);
class UpdateNotificationPreferenceDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { category: { required: false, enum: (__webpack_require__(48).NotificationCategory) }, channels: { required: false, enum: (__webpack_require__(48).NotificationChannel), isArray: true }, frequency: { required: false, enum: (__webpack_require__(48).NotificationFrequency) }, enabled: { required: false, type: () => Boolean }, startTime: { required: false, type: () => String, pattern: "/^([01]\\d|2[0-3]):([0-5]\\d)$/" }, endTime: { required: false, type: () => String, pattern: "/^([01]\\d|2[0-3]):([0-5]\\d)$/" }, workDays: { required: false, type: () => [String] }, customSchedule: { required: false, type: () => ({ days: { required: true, type: () => [String] }, times: { required: true, type: () => [String] }, timezone: { required: true, type: () => String } }) }, channelSpecificSettings: { required: false, type: () => (__webpack_require__(93).ChannelSettingsDto) }, filters: { required: false, type: () => ({ priority: { required: false, type: () => [String] }, status: { required: false, type: () => [String] }, types: { required: false, type: () => [String] }, senders: { required: false, type: () => [String] }, keywords: { required: false, type: () => [String] }, excludeKeywords: { required: false, type: () => [String] } }) }, importanceThreshold: { required: false, type: () => Number, minimum: 0, maximum: 100 }, muteAll: { required: false, type: () => Boolean }, muteUntil: { required: false, type: () => Date }, digestSettings: { required: false, type: () => ({ groupBy: { required: false, type: () => [String] }, sortBy: { required: false, type: () => String }, maxItems: { required: false, type: () => Number }, format: { required: false, type: () => String } }) }, allowReminders: { required: false, type: () => Boolean }, reminderInterval: { required: false, type: () => Number, minimum: 1 }, maxReminders: { required: false, type: () => Number, minimum: 0, maximum: 10 }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationCategory }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationCategory),
    __metadata("design:type", String)
], UpdateNotificationPreferenceDto.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel, isArray: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationChannel, { each: true }),
    __metadata("design:type", Array)
], UpdateNotificationPreferenceDto.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationFrequency }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_notification_preference_entity__WEBPACK_IMPORTED_MODULE_3__.NotificationFrequency),
    __metadata("design:type", String)
], UpdateNotificationPreferenceDto.prototype, "frequency", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateNotificationPreferenceDto.prototype, "enabled", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^([01]\d|2[0-3]):([0-5]\d)$/, {
        message: 'Start time must be in HH:mm format'
    }),
    __metadata("design:type", String)
], UpdateNotificationPreferenceDto.prototype, "startTime", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^([01]\d|2[0-3]):([0-5]\d)$/, {
        message: 'End time must be in HH:mm format'
    }),
    __metadata("design:type", String)
], UpdateNotificationPreferenceDto.prototype, "endTime", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], UpdateNotificationPreferenceDto.prototype, "workDays", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => CustomScheduleDto),
    __metadata("design:type", Object)
], UpdateNotificationPreferenceDto.prototype, "customSchedule", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => _channel_settings_dto__WEBPACK_IMPORTED_MODULE_4__.ChannelSettingsDto),
    __metadata("design:type", _channel_settings_dto__WEBPACK_IMPORTED_MODULE_4__.ChannelSettingsDto)
], UpdateNotificationPreferenceDto.prototype, "channelSpecificSettings", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => NotificationFiltersDto),
    __metadata("design:type", Object)
], UpdateNotificationPreferenceDto.prototype, "filters", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], UpdateNotificationPreferenceDto.prototype, "importanceThreshold", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateNotificationPreferenceDto.prototype, "muteAll", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", Date)
], UpdateNotificationPreferenceDto.prototype, "muteUntil", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DigestSettingsDto),
    __metadata("design:type", Object)
], UpdateNotificationPreferenceDto.prototype, "digestSettings", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateNotificationPreferenceDto.prototype, "allowReminders", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], UpdateNotificationPreferenceDto.prototype, "reminderInterval", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(10),
    __metadata("design:type", Number)
], UpdateNotificationPreferenceDto.prototype, "maxReminders", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], UpdateNotificationPreferenceDto.prototype, "metadata", void 0);


/***/ }),
/* 93 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChannelSettingsDto: () => (/* binding */ ChannelSettingsDto),
/* harmony export */   EmailSettingsDto: () => (/* binding */ EmailSettingsDto),
/* harmony export */   InAppSettingsDto: () => (/* binding */ InAppSettingsDto),
/* harmony export */   PushSettingsDto: () => (/* binding */ PushSettingsDto),
/* harmony export */   SlackSettingsDto: () => (/* binding */ SlackSettingsDto),
/* harmony export */   SmsSettingsDto: () => (/* binding */ SmsSettingsDto),
/* harmony export */   TeamsSettingsDto: () => (/* binding */ TeamsSettingsDto),
/* harmony export */   WebhookRetryConfigDto: () => (/* binding */ WebhookRetryConfigDto),
/* harmony export */   WebhookSettingsDto: () => (/* binding */ WebhookSettingsDto),
/* harmony export */   WhatsappSettingsDto: () => (/* binding */ WhatsappSettingsDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class WebhookRetryConfigDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { maxAttempts: { required: false, type: () => Number, minimum: 0, maximum: 5 }, retryDelay: { required: false, type: () => Number, minimum: 1, maximum: 300 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Maximum number of retry attempts' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(5),
    __metadata("design:type", Number)
], WebhookRetryConfigDto.prototype, "maxAttempts", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Delay between retry attempts in seconds' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(300),
    __metadata("design:type", Number)
], WebhookRetryConfigDto.prototype, "retryDelay", void 0);
class WebhookSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { url: { required: false, type: () => String, format: "uri" }, secret: { required: false, type: () => String }, headers: { required: false, type: () => Object }, retryConfig: { required: false, type: () => (__webpack_require__(93).WebhookRetryConfigDto) } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Webhook URL' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUrl)(),
    __metadata("design:type", String)
], WebhookSettingsDto.prototype, "url", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Secret key for webhook authentication' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], WebhookSettingsDto.prototype, "secret", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Custom headers for webhook requests' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], WebhookSettingsDto.prototype, "headers", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Retry configuration for failed webhooks' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => WebhookRetryConfigDto),
    __metadata("design:type", WebhookRetryConfigDto)
], WebhookSettingsDto.prototype, "retryConfig", void 0);
class EmailSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { addresses: { required: false, type: () => [String], format: "email", maxItems: 5 }, format: { required: false, type: () => Object }, includeAttachments: { required: false, type: () => Boolean }, templateId: { required: false, type: () => String }, signature: { required: false, type: () => String, maxLength: 500 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String], description: 'List of email addresses' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)({}, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(5),
    __metadata("design:type", Array)
], EmailSettingsDto.prototype, "addresses", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: ['HTML', 'TEXT'], description: 'Email format preference' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(['HTML', 'TEXT']),
    __metadata("design:type", String)
], EmailSettingsDto.prototype, "format", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to include attachments in email notifications' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], EmailSettingsDto.prototype, "includeAttachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Custom email template ID' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], EmailSettingsDto.prototype, "templateId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Email signature' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(500),
    __metadata("design:type", String)
], EmailSettingsDto.prototype, "signature", void 0);
class SmsSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { phoneNumbers: { required: false, type: () => [String], maxItems: 3 }, includeMedia: { required: false, type: () => Boolean }, provider: { required: false, type: () => String }, useUrlShortening: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String], description: 'List of phone numbers' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(undefined, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(3),
    __metadata("design:type", Array)
], SmsSettingsDto.prototype, "phoneNumbers", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to include media in SMS' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], SmsSettingsDto.prototype, "includeMedia", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Preferred SMS provider' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], SmsSettingsDto.prototype, "provider", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to use URL shortening in SMS' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], SmsSettingsDto.prototype, "useUrlShortening", void 0);
class PushSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { deviceTokens: { required: false, type: () => [String], maxItems: 10 }, sound: { required: false, type: () => Boolean }, badge: { required: false, type: () => Boolean }, useRichNotifications: { required: false, type: () => Boolean }, soundName: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String], description: 'Device tokens for push notifications' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(10),
    __metadata("design:type", Array)
], PushSettingsDto.prototype, "deviceTokens", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to play sound with push notifications' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], PushSettingsDto.prototype, "sound", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to show badge count' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], PushSettingsDto.prototype, "badge", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to use rich notifications' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], PushSettingsDto.prototype, "useRichNotifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Custom notification sound name' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], PushSettingsDto.prototype, "soundName", void 0);
class InAppSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { showBadge: { required: false, type: () => Boolean }, playSound: { required: false, type: () => Boolean }, markAsRead: { required: false, type: () => Boolean }, showDesktopNotifications: { required: false, type: () => Boolean }, maxUnreadCount: { required: false, type: () => Number, minimum: 1, maximum: 100 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to show badge count' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], InAppSettingsDto.prototype, "showBadge", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to play sound' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], InAppSettingsDto.prototype, "playSound", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to mark as read when opened' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], InAppSettingsDto.prototype, "markAsRead", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to show desktop notifications' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], InAppSettingsDto.prototype, "showDesktopNotifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Maximum number of unread notifications to show' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], InAppSettingsDto.prototype, "maxUnreadCount", void 0);
class WhatsappSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { numbers: { required: false, type: () => [String], maxItems: 2 }, allowMedia: { required: false, type: () => Boolean }, language: { required: false, type: () => String }, templateNamespace: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String], description: 'WhatsApp numbers' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(undefined, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(2),
    __metadata("design:type", Array)
], WhatsappSettingsDto.prototype, "numbers", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to allow media messages' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], WhatsappSettingsDto.prototype, "allowMedia", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Language preference for WhatsApp messages' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], WhatsappSettingsDto.prototype, "language", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Template namespace for business accounts' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], WhatsappSettingsDto.prototype, "templateNamespace", void 0);
class SlackSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { channels: { required: false, type: () => [String], maxItems: 5 }, mentionUser: { required: false, type: () => Boolean }, workspaceId: { required: false, type: () => String }, useThreads: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String], description: 'Slack channel names' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(5),
    __metadata("design:type", Array)
], SlackSettingsDto.prototype, "channels", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to mention user in messages' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], SlackSettingsDto.prototype, "mentionUser", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Slack workspace ID' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], SlackSettingsDto.prototype, "workspaceId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Use thread replies for updates' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], SlackSettingsDto.prototype, "useThreads", void 0);
class TeamsSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { channelIds: { required: false, type: () => [String], maxItems: 5 }, useAdaptiveCards: { required: false, type: () => Boolean }, showMentions: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [String], description: 'Teams channel IDs' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMaxSize)(5),
    __metadata("design:type", Array)
], TeamsSettingsDto.prototype, "channelIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to use adaptive cards' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], TeamsSettingsDto.prototype, "useAdaptiveCards", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to show user mentions' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], TeamsSettingsDto.prototype, "showMentions", void 0);
class ChannelSettingsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { email: { required: false, type: () => (__webpack_require__(93).EmailSettingsDto) }, sms: { required: false, type: () => (__webpack_require__(93).SmsSettingsDto) }, push: { required: false, type: () => (__webpack_require__(93).PushSettingsDto) }, inApp: { required: false, type: () => (__webpack_require__(93).InAppSettingsDto) }, whatsapp: { required: false, type: () => (__webpack_require__(93).WhatsappSettingsDto) }, slack: { required: false, type: () => (__webpack_require__(93).SlackSettingsDto) }, teams: { required: false, type: () => (__webpack_require__(93).TeamsSettingsDto) }, webhook: { required: false, type: () => (__webpack_require__(93).WebhookSettingsDto) } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => EmailSettingsDto),
    __metadata("design:type", EmailSettingsDto)
], ChannelSettingsDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => SmsSettingsDto),
    __metadata("design:type", SmsSettingsDto)
], ChannelSettingsDto.prototype, "sms", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => PushSettingsDto),
    __metadata("design:type", PushSettingsDto)
], ChannelSettingsDto.prototype, "push", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => InAppSettingsDto),
    __metadata("design:type", InAppSettingsDto)
], ChannelSettingsDto.prototype, "inApp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => WhatsappSettingsDto),
    __metadata("design:type", WhatsappSettingsDto)
], ChannelSettingsDto.prototype, "whatsapp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => SlackSettingsDto),
    __metadata("design:type", SlackSettingsDto)
], ChannelSettingsDto.prototype, "slack", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => TeamsSettingsDto),
    __metadata("design:type", TeamsSettingsDto)
], ChannelSettingsDto.prototype, "teams", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => WebhookSettingsDto),
    __metadata("design:type", WebhookSettingsDto)
], ChannelSettingsDto.prototype, "webhook", void 0);


/***/ }),
/* 94 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationSchedulerService: () => (/* binding */ NotificationSchedulerService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9);
/* harmony import */ var _nestjs_schedule__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _entities_notification_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39);
/* harmony import */ var _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(41);
/* harmony import */ var _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(40);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(49);
/* harmony import */ var _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(63);
/* harmony import */ var _shared_services_push_notification_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(95);
/* harmony import */ var _whatsapp_services_whatsapp_services__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(65);
/* harmony import */ var _integrations_slack_services_slack_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(97);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var NotificationSchedulerService_1;













let NotificationSchedulerService = NotificationSchedulerService_1 = class NotificationSchedulerService {
    constructor(notificationRepository, emailService, smsService, pushNotificationService, whatsappService, slackService, eventEmitter) {
        this.notificationRepository = notificationRepository;
        this.emailService = emailService;
        this.smsService = smsService;
        this.pushNotificationService = pushNotificationService;
        this.whatsappService = whatsappService;
        this.slackService = slackService;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(NotificationSchedulerService_1.name);
        this.MAX_RETRY_ATTEMPTS = 3;
        this.BATCH_SIZE = 100;
    }
    async rescheduleNotification(notificationId, newScheduledFor) {
        this.logger.debug(`Rescheduling notification ${notificationId} to ${newScheduledFor}`);
        try {
            const notificationObj = await this.notificationRepository.findOne({ where: { id: notificationId } });
            if (!notificationObj) {
                throw new Error(`Notification with ID ${notificationId} not found`);
            }
            if (notificationObj.status === _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.DELIVERED ||
                notificationObj.status === _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.FAILED) {
                throw new Error(`Cannot reschedule notification with status ${notificationObj.status}`);
            }
            notificationObj.scheduledFor = newScheduledFor;
            notificationObj.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.SCHEDULED;
            notificationObj.updatedAt = new Date();
            await this.notificationRepository.save(notificationObj);
            this.eventEmitter.emit('notification.rescheduled', notificationObj);
            return notificationObj;
        }
        catch (error) {
            this.logger.error(`Error rescheduling notification ${notificationId}`, error);
            throw error;
        }
    }
    async scheduleNotification(notificationData, scheduledFor) {
        this.logger.debug('Scheduling new notification');
        try {
            notificationData.scheduledFor = scheduledFor;
            notificationData.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.SCHEDULED;
            if (notificationData.retryCount === undefined) {
                notificationData.retryCount = 0;
            }
            const savedNotification = await this.notificationRepository.save(notificationData);
            this.eventEmitter.emit('notification.scheduled', savedNotification);
            return savedNotification;
        }
        catch (error) {
            this.logger.error('Error scheduling notification', error);
            throw error;
        }
    }
    async cancelScheduledNotification(notificationId) {
        this.logger.debug(`Cancelling notification ${notificationId}`);
        try {
            const notificationObj = await this.notificationRepository.findOne({ where: { id: notificationId } });
            if (!notificationObj) {
                throw new Error(`Notification with ID ${notificationId} not found`);
            }
            if (notificationObj.status === _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.DELIVERED ||
                notificationObj.status === _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.FAILED) {
                throw new Error(`Cannot cancel notification with status ${notificationObj.status}`);
            }
            notificationObj.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.CANCELLED;
            notificationObj.updatedAt = new Date();
            await this.notificationRepository.save(notificationObj);
            this.eventEmitter.emit('notification.cancelled', notificationObj);
            return notificationObj;
        }
        catch (error) {
            this.logger.error(`Error cancelling notification ${notificationId}`, error);
            throw error;
        }
    }
    async processScheduledNotifications() {
        this.logger.debug('Processing scheduled notifications');
        try {
            const notifications = await this.notificationRepository.find({
                where: {
                    status: _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.SCHEDULED,
                    scheduledFor: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.LessThanOrEqual)(new Date()),
                },
                take: this.BATCH_SIZE,
            });
            for (const notification of notifications) {
                await this.processNotification(notification);
            }
        }
        catch (error) {
            this.logger.error('Error processing scheduled notifications', error);
        }
    }
    async retryFailedNotifications() {
        this.logger.debug('Retrying failed notifications');
        try {
            const notifications = await this.notificationRepository.find({
                where: {
                    status: _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.FAILED,
                    retryCount: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.LessThanOrEqual)(this.MAX_RETRY_ATTEMPTS),
                },
                take: this.BATCH_SIZE,
            });
            for (const notification of notifications) {
                await this.processNotification(notification, true);
            }
        }
        catch (error) {
            this.logger.error('Error retrying failed notifications', error);
        }
    }
    async cleanupExpiredNotifications() {
        this.logger.debug('Cleaning up expired notifications');
        try {
            const expiryDate = new Date();
            expiryDate.setDate(expiryDate.getDate() - 30);
            await this.notificationRepository.update({
                status: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Not)((0,typeorm__WEBPACK_IMPORTED_MODULE_2__.In)([_dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.DELIVERED, _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.FAILED])),
                createdAt: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.LessThanOrEqual)(expiryDate),
            }, {
                status: _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.EXPIRED,
            });
        }
        catch (error) {
            this.logger.error('Error cleaning up expired notifications', error);
        }
    }
    async processNotification(notification, isRetry = false) {
        this.logger.debug(`Processing notification ${notification.id}`);
        try {
            notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.PROCESSING;
            await this.notificationRepository.save(notification);
            for (const channel of notification.channels) {
                await this.sendNotificationByChannel(notification, channel);
            }
            notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.DELIVERED;
            notification.deliveredAt = new Date();
            await this.notificationRepository.save(notification);
            this.eventEmitter.emit('notification.delivered', notification);
        }
        catch (error) {
            this.logger.error(`Error processing notification ${notification.id}`, error);
            if (isRetry) {
                notification.retryCount = (notification.retryCount || 0) + 1;
            }
            if (notification.retryCount >= this.MAX_RETRY_ATTEMPTS) {
                notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.FAILED;
                notification.error = error.message;
                this.eventEmitter.emit('notification.failed', notification);
            }
            else {
                notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.PENDING;
            }
            await this.notificationRepository.save(notification);
        }
    }
    async sendNotificationByChannel(notification, channel) {
        switch (channel) {
            case _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__.NotificationChannel.EMAIL:
                await this.sendEmailNotification(notification);
                break;
            case _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__.NotificationChannel.SMS:
                await this.sendSmsNotification(notification);
                break;
            case _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__.NotificationChannel.PUSH:
                await this.sendPushNotification(notification);
                break;
            case _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__.NotificationChannel.WHATSAPP:
                await this.sendWhatsappNotification(notification, notification.recipientDetails);
                break;
            case _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__.NotificationChannel.SLACK:
                await this.sendSlackNotification(notification);
                break;
            case _dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_7__.NotificationChannel.IN_APP:
                break;
            default:
                this.logger.warn(`Unknown notification channel: ${channel}`);
        }
    }
    async sendEmailNotification(notification) {
        var _a;
        if (!((_a = notification.recipientDetails) === null || _a === void 0 ? void 0 : _a.email)) {
            throw new Error('Email address not provided');
        }
        await this.emailService.send(notification);
    }
    async sendSmsNotification(notification) {
        var _a;
        if (!((_a = notification.recipientDetails) === null || _a === void 0 ? void 0 : _a.phone)) {
            throw new Error('Phone number not provided');
        }
        await this.smsService.send(notification);
    }
    async sendPushNotification(notification) {
        var _a, _b;
        if (!((_b = (_a = notification.recipientDetails) === null || _a === void 0 ? void 0 : _a.deviceTokens) === null || _b === void 0 ? void 0 : _b.length)) {
            throw new Error('No device tokens available');
        }
        await this.pushNotificationService.send(notification);
    }
    async sendWhatsappNotification(notification, user) {
        try {
            if (!user || !user.phoneNumber) {
                throw new Error('Phone number not provided for WhatsApp notification');
            }
            await this.whatsappService.sendMessage({
                to: user.phoneNumber,
                text: notification.content
            });
            return true;
        }
        catch (error) {
            this.logger.error(`Failed to send WhatsApp notification: ${error.message}`, error.stack);
            return false;
        }
    }
    async sendSlackNotification(notification) {
        var _a;
        if (!((_a = notification.recipientDetails) === null || _a === void 0 ? void 0 : _a.slackUserId)) {
            throw new Error('Slack user ID not provided');
        }
        await this.slackService.sendDirectMessage({
            userId: notification.recipientDetails.slackUserId,
            message: {
                text: notification.title,
                blocks: [
                    {
                        type: 'section',
                        text: {
                            type: 'mrkdwn',
                            text: notification.content,
                        },
                    },
                ],
            },
        });
    }
};
__decorate([
    (0,_nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__.Cron)(_nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__.CronExpression.EVERY_MINUTE),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], NotificationSchedulerService.prototype, "processScheduledNotifications", null);
__decorate([
    (0,_nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__.Cron)(_nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__.CronExpression.EVERY_5_MINUTES),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], NotificationSchedulerService.prototype, "retryFailedNotifications", null);
__decorate([
    (0,_nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__.Cron)(_nestjs_schedule__WEBPACK_IMPORTED_MODULE_3__.CronExpression.EVERY_HOUR),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], NotificationSchedulerService.prototype, "cleanupExpiredNotifications", null);
NotificationSchedulerService = NotificationSchedulerService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_5__.Notification)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _shared_services_email_service__WEBPACK_IMPORTED_MODULE_8__.EmailService,
        _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_9__.SmsService,
        _shared_services_push_notification_service__WEBPACK_IMPORTED_MODULE_10__.PushNotificationService,
        _whatsapp_services_whatsapp_services__WEBPACK_IMPORTED_MODULE_11__.WhatsappService,
        _integrations_slack_services_slack_service__WEBPACK_IMPORTED_MODULE_12__.SlackService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_4__.EventEmitter2])
], NotificationSchedulerService);



/***/ }),
/* 95 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PushNotificationService: () => (/* binding */ PushNotificationService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96);
/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(firebase_admin__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var PushNotificationService_1;



let PushNotificationService = PushNotificationService_1 = class PushNotificationService {
    constructor(configService) {
        this.configService = configService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(PushNotificationService_1.name);
        this.mockMode = false;
        this.initializeFirebase();
    }
    initializeFirebase() {
        try {
            const projectId = this.configService.get('FIREBASE_PROJECT_ID');
            const clientEmail = this.configService.get('FIREBASE_CLIENT_EMAIL');
            let privateKey = this.configService.get('FIREBASE_PRIVATE_KEY');
            if (projectId === 'mock' || clientEmail === 'mock' || privateKey === 'mock') {
                this.logger.warn('Mock Firebase configuration detected - using mock implementation');
                this.initMockFirebase();
                this.mockMode = true;
                return;
            }
            if (!projectId || !clientEmail || !privateKey) {
                this.logger.warn('Firebase credentials incomplete - using mock implementation');
                this.initMockFirebase();
                this.mockMode = true;
                return;
            }
            if (privateKey) {
                if (!privateKey.includes('-----BEGIN PRIVATE KEY-----')) {
                    privateKey = privateKey.replace(/\\n/g, '\n');
                }
                if (!privateKey.startsWith('-----BEGIN PRIVATE KEY-----')) {
                    privateKey = `-----BEGIN PRIVATE KEY-----\n${privateKey}`;
                }
                if (!privateKey.endsWith('-----END PRIVATE KEY-----')) {
                    privateKey = `${privateKey}\n-----END PRIVATE KEY-----`;
                }
            }
            if (firebase_admin__WEBPACK_IMPORTED_MODULE_2__.apps.length) {
                this.firebaseApp = firebase_admin__WEBPACK_IMPORTED_MODULE_2__.apps[0];
                this.logger.log('Using existing Firebase Admin SDK instance');
            }
            else {
                this.firebaseApp = firebase_admin__WEBPACK_IMPORTED_MODULE_2__.initializeApp({
                    credential: firebase_admin__WEBPACK_IMPORTED_MODULE_2__.credential.cert({
                        projectId,
                        clientEmail,
                        privateKey,
                    }),
                    databaseURL: this.configService.get('FIREBASE_DATABASE_URL'),
                });
                this.logger.log('Firebase Admin SDK initialized successfully');
            }
        }
        catch (error) {
            this.logger.warn(`Failed to initialize Firebase: ${error.message}`);
            this.logger.warn('Using mock implementation instead');
            this.initMockFirebase();
            this.mockMode = true;
        }
    }
    initMockFirebase() {
        this.firebaseApp = {
            messaging: () => ({
                send: async (message) => {
                    var _a, _b;
                    this.logger.log(`[MOCK] Sending push notification to ${message.token || 'unknown'}`);
                    this.logger.debug('[MOCK] Push notification payload:', {
                        title: (_a = message.notification) === null || _a === void 0 ? void 0 : _a.title,
                        body: (_b = message.notification) === null || _b === void 0 ? void 0 : _b.body
                    });
                    return `mock-message-id-${Date.now()}`;
                },
                sendAll: async (messages) => {
                    this.logger.log(`[MOCK] Sending batch of ${messages.length} push notifications`);
                    return {
                        successCount: messages.length,
                        failureCount: 0,
                        responses: messages.map(() => ({
                            success: true,
                            messageId: `mock-message-id-${Date.now()}`,
                            error: null
                        }))
                    };
                },
                subscribeToTopic: async (tokens, topic) => {
                    this.logger.log(`[MOCK] Subscribing ${tokens.length} tokens to topic ${topic}`);
                    return { successCount: tokens.length, failureCount: 0, errors: [] };
                },
                unsubscribeFromTopic: async (tokens, topic) => {
                    this.logger.log(`[MOCK] Unsubscribing ${tokens.length} tokens from topic ${topic}`);
                    return { successCount: tokens.length, failureCount: 0, errors: [] };
                }
            })
        };
    }
    async send(notification) {
        try {
            const { recipient, content, subject, metadata } = notification;
            if (!this.mockMode && !recipient.fcmToken) {
                throw new Error('Recipient FCM token not found');
            }
            const token = recipient.fcmToken || 'mock-token';
            const message = {
                notification: {
                    title: subject,
                    body: this.formatContent(content),
                },
                data: this.prepareData(metadata),
                token,
                android: this.getAndroidConfig(metadata),
                apns: this.getApnsConfig(metadata),
                webpush: this.getWebPushConfig(metadata),
            };
            const response = await this.firebaseApp.messaging().send(message);
            this.logger.debug(`Push notification sent: ${response}`);
        }
        catch (error) {
            this.logger.error('Failed to send push notification:', error);
            if (!this.mockMode) {
                throw new Error(`Push notification delivery failed: ${error.message}`);
            }
            else {
                this.logger.warn('[MOCK] Continuing despite push notification error');
            }
        }
    }
    formatContent(content) {
        return content.replace(/<[^>]*>/g, '').substring(0, 1000);
    }
    prepareData(metadata = {}) {
        const data = {};
        Object.entries(metadata || {}).forEach(([key, value]) => {
            if (typeof value !== 'undefined' && value !== null) {
                data[key] = String(value);
            }
        });
        return data;
    }
    getAndroidConfig(metadata = {}) {
        return {
            priority: 'high',
            notification: {
                icon: (metadata === null || metadata === void 0 ? void 0 : metadata.androidIcon) || 'default_icon',
                color: (metadata === null || metadata === void 0 ? void 0 : metadata.androidColor) || '#000000',
                clickAction: (metadata === null || metadata === void 0 ? void 0 : metadata.androidClickAction) || 'FLUTTER_NOTIFICATION_CLICK',
            },
            data: this.prepareData(metadata === null || metadata === void 0 ? void 0 : metadata.androidData),
        };
    }
    getApnsConfig(metadata = {}) {
        return {
            payload: Object.assign({ aps: {
                    alert: {
                        title: metadata === null || metadata === void 0 ? void 0 : metadata.apnsTitle,
                        body: metadata === null || metadata === void 0 ? void 0 : metadata.apnsBody,
                    },
                    badge: (metadata === null || metadata === void 0 ? void 0 : metadata.apnsBadge) || 1,
                    sound: (metadata === null || metadata === void 0 ? void 0 : metadata.apnsSound) || 'default',
                } }, this.prepareData(metadata === null || metadata === void 0 ? void 0 : metadata.apnsData)),
        };
    }
    getWebPushConfig(metadata = {}) {
        return {
            notification: {
                icon: metadata === null || metadata === void 0 ? void 0 : metadata.webIcon,
                badge: metadata === null || metadata === void 0 ? void 0 : metadata.webBadge,
                actions: metadata === null || metadata === void 0 ? void 0 : metadata.webActions,
            },
            data: this.prepareData(metadata === null || metadata === void 0 ? void 0 : metadata.webData),
        };
    }
    async sendBatch(notifications) {
        try {
            const messages = notifications.map(notification => ({
                token: notification.recipient.fcmToken || 'mock-token',
                notification: {
                    title: notification.subject,
                    body: this.formatContent(notification.content),
                },
                data: this.prepareData(notification.metadata),
            }));
            return await this.firebaseApp.messaging().sendAll(messages);
        }
        catch (error) {
            this.logger.error('Failed to send batch push notifications:', error);
            if (!this.mockMode) {
                throw new Error(`Batch push notification delivery failed: ${error.message}`);
            }
            else {
                this.logger.warn('[MOCK] Continuing despite batch push notification error');
                return {
                    successCount: notifications.length,
                    failureCount: 0,
                    responses: []
                };
            }
        }
    }
    async subscribeTopic(tokens, topic) {
        try {
            await this.firebaseApp.messaging().subscribeToTopic(tokens, topic);
            this.logger.log(`Subscribed ${tokens.length} tokens to topic ${topic}`);
        }
        catch (error) {
            this.logger.error(`Failed to subscribe tokens to topic ${topic}:`, error);
            if (!this.mockMode) {
                throw new Error(`Topic subscription failed: ${error.message}`);
            }
            else {
                this.logger.warn('[MOCK] Continuing despite topic subscription error');
            }
        }
    }
    async unsubscribeTopic(tokens, topic) {
        try {
            await this.firebaseApp.messaging().unsubscribeFromTopic(tokens, topic);
            this.logger.log(`Unsubscribed ${tokens.length} tokens from topic ${topic}`);
        }
        catch (error) {
            this.logger.error(`Failed to unsubscribe tokens from topic ${topic}:`, error);
            if (!this.mockMode) {
                throw new Error(`Topic unsubscription failed: ${error.message}`);
            }
            else {
                this.logger.warn('[MOCK] Continuing despite topic unsubscription error');
            }
        }
    }
};
PushNotificationService = PushNotificationService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService])
], PushNotificationService);



/***/ }),
/* 96 */
/***/ ((module) => {

module.exports = require("firebase-admin");

/***/ }),
/* 97 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SlackService: () => (/* binding */ SlackService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var SlackService_1;



let SlackService = SlackService_1 = class SlackService {
    constructor(configService, eventEmitter) {
        this.configService = configService;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(SlackService_1.name);
        const token = this.configService.get('SLACK_BOT_TOKEN');
        this.client = {
            chat: {
                postMessage: async () => ({ ok: true, ts: String(Date.now()) }),
                update: async () => ({ ok: true }),
                delete: async () => ({ ok: true }),
            },
            conversations: {
                info: async () => ({ channel: { id: 'mock-channel', name: 'mock-channel-name' } }),
                join: async () => ({ ok: true }),
                history: async () => ({ messages: [] }),
            }
        };
    }
    async sendMessage(channel, text, threadTs) {
        try {
            this.logger.log(`[MOCK] Sending Slack message to channel ${channel}: ${text}`);
            const response = { ok: true, ts: String(Date.now()) };
            this.eventEmitter.emit('slack.message.sent', {
                channel,
                messageTs: response.ts,
                text,
            });
            return response;
        }
        catch (error) {
            this.logger.error('Failed to send Slack message', error);
            this.eventEmitter.emit('slack.message.failed', {
                channel,
                text,
                error: error.message,
            });
            throw error;
        }
    }
    sendDirectMessage(arg0) {
        this.logger.log(`[MOCK] Sending direct message to user ${arg0.userId}: ${arg0.message.text}`);
        return Promise.resolve({ ok: true, ts: String(Date.now()) });
    }
    async sendBlockMessage(channel, blocks, text) {
        try {
            this.logger.log(`[MOCK] Sending Slack block message to channel ${channel}`);
            const response = { ok: true, ts: String(Date.now()) };
            this.eventEmitter.emit('slack.message.sent', {
                channel,
                messageTs: response.ts,
                blocks,
            });
            return response;
        }
        catch (error) {
            this.logger.error('Failed to send Slack block message', error);
            this.eventEmitter.emit('slack.message.failed', {
                channel,
                blocks,
                error: error.message,
            });
            throw error;
        }
    }
    async sendAttachmentMessage(channel, attachments, text) {
        try {
            this.logger.log(`[MOCK] Sending Slack attachment message to channel ${channel}`);
            const response = { ok: true, ts: String(Date.now()) };
            this.eventEmitter.emit('slack.message.sent', {
                channel,
                messageTs: response.ts,
                attachments,
            });
            return response;
        }
        catch (error) {
            this.logger.error('Failed to send Slack attachment message', error);
            this.eventEmitter.emit('slack.message.failed', {
                channel,
                attachments,
                error: error.message,
            });
            throw error;
        }
    }
    async updateMessage(channel, ts, text, blocks) {
        try {
            this.logger.log(`[MOCK] Updating Slack message in channel ${channel}, ts: ${ts}, text: ${text}`);
            this.eventEmitter.emit('slack.message.updated', {
                channel,
                messageTs: ts,
                text,
                blocks,
            });
        }
        catch (error) {
            this.logger.error('Failed to update Slack message', error);
            this.eventEmitter.emit('slack.message.update.failed', {
                channel,
                ts,
                error: error.message,
            });
            throw error;
        }
    }
    async deleteMessage(channel, ts) {
        try {
            this.logger.log(`[MOCK] Deleting Slack message from channel ${channel}, ts: ${ts}`);
            this.eventEmitter.emit('slack.message.deleted', {
                channel,
                messageTs: ts,
            });
        }
        catch (error) {
            this.logger.error('Failed to delete Slack message', error);
            this.eventEmitter.emit('slack.message.delete.failed', {
                channel,
                ts,
                error: error.message,
            });
            throw error;
        }
    }
    async getChannelInfo(channelId) {
        this.logger.log(`[MOCK] Getting info for channel ${channelId}`);
        return { id: channelId, name: `mock-channel-${channelId}` };
    }
    async joinChannel(channelId) {
        this.logger.log(`[MOCK] Joining channel ${channelId}`);
        return { ok: true };
    }
    async getChannelHistory(channel, limit = 100) {
        this.logger.log(`[MOCK] Getting history for channel ${channel}, limit: ${limit}`);
        return Array(Math.min(limit, 10)).fill(null).map((_, i) => ({
            ts: String(Date.now() - i * 60000),
            text: `Mock message ${i + 1}`,
            user: `U${Math.random().toString(36).substring(2, 8).toUpperCase()}`
        }));
    }
};
SlackService = SlackService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitter2])
], SlackService);



/***/ }),
/* 98 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationListener: () => (/* binding */ NotificationListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39);
/* harmony import */ var _services_notification_delivery_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99);
/* harmony import */ var _entities_notification_template_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(47);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var NotificationListener_1;







let NotificationListener = NotificationListener_1 = class NotificationListener {
    constructor(templateRepository, deliveryService) {
        this.templateRepository = templateRepository;
        this.deliveryService = deliveryService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(NotificationListener_1.name);
    }
    async handleNotificationCreated(notification) {
        try {
            this.logger.debug(`Processing new notification: ${notification.id}`);
            if (notification.templateId) {
                await this.processTemplate(notification);
            }
            await this.deliveryService.processNotification(notification);
        }
        catch (error) {
            this.logger.error(`Error processing notification ${notification.id}:`, error);
            throw error;
        }
    }
    async handleNotificationResend(notification) {
        try {
            this.logger.debug(`Resending notification: ${notification.id}`);
            await this.deliveryService.retryNotification(notification);
        }
        catch (error) {
            this.logger.error(`Error resending notification ${notification.id}:`, error);
            throw error;
        }
    }
    async processTemplate(notification) {
        var _a, _b;
        const template = await this.templateRepository.findOne({
            where: { id: notification.templateId }
        });
        if (!template) {
            throw new Error(`Template ${notification.templateId} not found`);
        }
        await this.templateRepository.update(template.id, {
            lastUsedAt: new Date(),
            useCount: () => 'use_count + 1'
        });
        const metadata = notification.metadata || {};
        notification.subject = this.interpolateVariables(template.subject, metadata);
        notification.content = this.interpolateVariables(template.content, metadata);
        if (template.channelSpecificContent) {
            notification.channelContent = Object.assign(Object.assign({}, notification.channelContent), this.processChannelContent(template.channelSpecificContent, metadata));
        }
        if (!((_a = notification.channels) === null || _a === void 0 ? void 0 : _a.length) && ((_b = template.channels) === null || _b === void 0 ? void 0 : _b.length)) {
            notification.channels = template.channels.map(channel => ({
                name: channel,
                type: 'default',
                isActive: true,
                additionalProperty: 'value'
            }));
        }
    }
    interpolateVariables(content, variables) {
        return content.replace(/\{\{(.*?)\}\}/g, (match, variable) => {
            const key = variable.trim();
            return variables[key] !== undefined ? variables[key] : match;
        });
    }
    processChannelContent(channelContent, variables) {
        const processed = {};
        for (const [channel, content] of Object.entries(channelContent)) {
            processed[channel] = {};
            for (const [key, value] of Object.entries(content)) {
                if (typeof value === 'string') {
                    processed[channel][key] = this.interpolateVariables(value, variables);
                }
                else {
                    processed[channel][key] = value;
                }
            }
        }
        return processed;
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.created'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__.Notification]),
    __metadata("design:returntype", Promise)
], NotificationListener.prototype, "handleNotificationCreated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.resend'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__.Notification]),
    __metadata("design:returntype", Promise)
], NotificationListener.prototype, "handleNotificationResend", null);
NotificationListener = NotificationListener_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_notification_template_entity__WEBPACK_IMPORTED_MODULE_6__.NotificationTemplate)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _services_notification_delivery_service__WEBPACK_IMPORTED_MODULE_5__.NotificationDeliveryService])
], NotificationListener);



/***/ }),
/* 99 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationDeliveryService: () => (/* binding */ NotificationDeliveryService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39);
/* harmony import */ var _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(41);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(49);
/* harmony import */ var _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63);
/* harmony import */ var _shared_services_push_notification_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(95);
/* harmony import */ var _shared_services_webhook_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(100);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var NotificationDeliveryService_1;










let NotificationDeliveryService = NotificationDeliveryService_1 = class NotificationDeliveryService {
    constructor(notificationRepository, emailService, smsService, pushNotificationService, webhookService, eventEmitter) {
        this.notificationRepository = notificationRepository;
        this.emailService = emailService;
        this.smsService = smsService;
        this.pushNotificationService = pushNotificationService;
        this.webhookService = webhookService;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(NotificationDeliveryService_1.name);
        this.MAX_RETRY_ATTEMPTS = 3;
    }
    async processNotification(notification) {
        try {
            notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationStatus.PROCESSING;
            await this.notificationRepository.save(notification);
            const deliveryPromises = notification.channels.map(channel => this.deliverToChannel(notification, channel));
            await Promise.all(deliveryPromises);
        }
        catch (error) {
            this.logger.error(`Failed to process notification ${notification.id}:`, error);
            notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationStatus.FAILED;
            await this.notificationRepository.save(notification);
            this.eventEmitter.emit('notification.failed', {
                notification,
                error
            });
        }
    }
    async retryNotification(notification) {
        var _a, _b, _c, _d, _e, _f, _g;
        if (((_b = (_a = notification.deliveryDetails) === null || _a === void 0 ? void 0 : _a.attempts) !== null && _b !== void 0 ? _b : 0) >= this.MAX_RETRY_ATTEMPTS) {
            throw new Error('Maximum retry attempts exceeded');
        }
        notification.deliveryDetails = Object.assign(Object.assign({}, notification.deliveryDetails), { attempts: (_d = (_c = notification.deliveryDetails) === null || _c === void 0 ? void 0 : _c.attempts) !== null && _d !== void 0 ? _d : 0, lastAttempt: (_f = (_e = notification.deliveryDetails) === null || _e === void 0 ? void 0 : _e.lastAttempt) !== null && _f !== void 0 ? _f : new Date(), channels: ((_g = notification.deliveryDetails) === null || _g === void 0 ? void 0 : _g.channels.filter(c => c.status === 'SUCCESS')) || [] });
        return this.processNotification(notification);
    }
    async deliverToChannel(notification, channel) {
        try {
            switch (channel.toLowerCase()) {
                case 'email':
                    await this.emailService.send(notification);
                    break;
                case 'sms':
                    await this.smsService.send(notification);
                    break;
                case 'push':
                    await this.pushNotificationService.send(notification);
                    break;
                case 'webhook':
                    await this.webhookService.send(notification);
                    break;
                default:
                    throw new Error(`Unsupported channel: ${channel}`);
            }
            this.eventEmitter.emit('notification.delivered', {
                notification,
                channel
            });
        }
        catch (error) {
            this.logger.error(`Failed to deliver notification ${notification.id} to channel ${channel}:`, error);
            this.eventEmitter.emit('notification.failed', {
                notification,
                channel,
                error
            });
        }
    }
    async getDeliveryStatus(notificationId) {
        const notification = await this.notificationRepository.findOne({
            where: { id: notificationId }
        });
        if (!notification) {
            throw new Error('Notification not found');
        }
        return {
            status: notification.status,
            deliveryDetails: notification.deliveryDetails,
            channels: notification.channels
        };
    }
};
NotificationDeliveryService = NotificationDeliveryService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__.Notification)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _shared_services_email_service__WEBPACK_IMPORTED_MODULE_6__.EmailService,
        _shared_services_sms_service__WEBPACK_IMPORTED_MODULE_7__.SmsService,
        _shared_services_push_notification_service__WEBPACK_IMPORTED_MODULE_8__.PushNotificationService,
        _shared_services_webhook_service__WEBPACK_IMPORTED_MODULE_9__.WebhookService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.EventEmitter2])
], NotificationDeliveryService);



/***/ }),
/* 100 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WebhookService: () => (/* binding */ WebhookService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(66);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(101);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_3__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var WebhookService_1;




const SENSITIVE_FIELDS = ['password', 'token', 'secret', 'key', 'auth', 'credentials'];
let WebhookService = WebhookService_1 = class WebhookService {
    constructor(configService) {
        this.configService = configService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(WebhookService_1.name);
        this.axiosInstance = axios__WEBPACK_IMPORTED_MODULE_2___default().create({
            timeout: this.configService.get('WEBHOOK_TIMEOUT', 5000),
            headers: {
                'Content-Type': 'application/json',
                'User-Agent': `${this.configService.get('APP_NAME', 'NotificationService')}/1.0`,
            },
            validateStatus: (status) => status >= 200 && status < 300,
        });
        this.defaultConfig = {
            method: 'POST',
            timeout: 5000,
            retryAttempts: 3,
            retryDelay: 1000,
            validateResponse: true,
        };
        this.axiosInstance.interceptors.request.use((config) => {
            config.metadata = { startTime: Date.now() };
            return config;
        }, (error) => {
            return Promise.reject(error);
        });
        this.axiosInstance.interceptors.response.use((response) => {
            var _a;
            const metadata = response.config.metadata;
            const duration = Date.now() - ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.startTime) !== null && _a !== void 0 ? _a : Date.now());
            this.logger.debug(`Webhook request completed in ${duration}ms`);
            return response;
        }, (error) => {
            const duration = Date.now() - error.config.metadata.startTime;
            this.logger.error(`Webhook request failed after ${duration}ms: ${error.message}`);
            return Promise.reject(error);
        });
    }
    async send(notification) {
        var _a, _b, _c, _d, _e, _f;
        const startTime = Date.now();
        const webhookConfig = this.getWebhookConfig(notification);
        let attempt = 0;
        let lastError = null;
        while (attempt < ((_b = (_a = webhookConfig.retryAttempts) !== null && _a !== void 0 ? _a : this.defaultConfig.retryAttempts) !== null && _b !== void 0 ? _b : 3)) {
            try {
                const response = await this.makeRequest(notification, webhookConfig);
                const duration = Date.now() - startTime;
                if (webhookConfig.validateResponse && !this.isValidResponse(response)) {
                    throw new Error('Invalid response received from webhook endpoint');
                }
                return {
                    success: true,
                    statusCode: response.status,
                    retryCount: attempt,
                    duration,
                };
            }
            catch (error) {
                attempt++;
                lastError = error;
                this.logger.warn(`Webhook delivery attempt ${attempt} failed for notification ${notification.id}:`, error.message);
                if (attempt < ((_d = ((_c = webhookConfig.retryAttempts) !== null && _c !== void 0 ? _c : this.defaultConfig.retryAttempts)) !== null && _d !== void 0 ? _d : 3)) {
                    await this.delay(((_f = ((_e = webhookConfig.retryDelay) !== null && _e !== void 0 ? _e : this.defaultConfig.retryDelay)) !== null && _f !== void 0 ? _f : 1000) * Math.pow(2, attempt - 1));
                }
            }
        }
        return {
            success: false,
            error: (lastError === null || lastError === void 0 ? void 0 : lastError.message) || 'Unknown error',
            retryCount: attempt,
            duration: Date.now() - startTime,
        };
    }
    async makeRequest(notification, config) {
        var _a;
        const payload = this.preparePayload(notification);
        const signature = this.generateSignature(payload, config.secret);
        const requestId = crypto__WEBPACK_IMPORTED_MODULE_3__.randomUUID();
        const requestConfig = {
            method: config.method,
            url: config.url,
            data: payload,
            timeout: config.timeout,
            headers: Object.assign(Object.assign({}, config.headers), { 'X-Webhook-Signature': signature, 'X-Notification-ID': notification.id, 'X-Request-ID': requestId, 'X-Timestamp': new Date().toISOString() }),
        };
        try {
            return await this.axiosInstance.request(requestConfig);
        }
        catch (error) {
            if (axios__WEBPACK_IMPORTED_MODULE_2___default().isAxiosError(error)) {
                const responseData = (_a = error.response) === null || _a === void 0 ? void 0 : _a.data;
                throw new Error(`Webhook request failed: ${error.message}. Response: ${JSON.stringify(responseData)}`);
            }
            throw error;
        }
    }
    generateSignature(payload, secret) {
        if (!secret)
            return '';
        return crypto__WEBPACK_IMPORTED_MODULE_3__.createHmac('sha256', secret)
            .update(JSON.stringify(payload))
            .digest('hex');
    }
    preparePayload(notification) {
        const basePayload = {
            id: notification.id,
            type: notification.type,
            subject: notification.subject,
            content: notification.content,
            recipient: this.filterSensitiveData(notification.recipient),
            metadata: notification.metadata,
            timestamp: new Date().toISOString(),
            version: '1.0',
            context: notification.context ? this.filterSensitiveData(notification.context) : undefined,
        };
        if (notification.context) {
            basePayload['context'] = this.filterSensitiveData(notification.context);
        }
        return basePayload;
    }
    filterSensitiveData(data) {
        const filtered = {};
        for (const [key, value] of Object.entries(data)) {
            if (SENSITIVE_FIELDS.some(field => key.toLowerCase().includes(field))) {
                continue;
            }
            if (value && typeof value === 'object' && !Array.isArray(value)) {
                filtered[key] = this.filterSensitiveData(value);
            }
            else {
                filtered[key] = value;
            }
        }
        return filtered;
    }
    getWebhookConfig(notification) {
        const webhookUrl = this.getWebhookUrl(notification);
        if (!webhookUrl) {
            throw new Error('No webhook URL configured for notification');
        }
        return Object.assign(Object.assign({}, this.defaultConfig), { url: webhookUrl, secret: this.configService.get('WEBHOOK_SECRET'), headers: this.getCustomHeaders(notification) });
    }
    getWebhookUrl(notification) {
        var _a;
        if ((_a = notification.metadata) === null || _a === void 0 ? void 0 : _a.webhookUrl) {
            return notification.metadata.webhookUrl;
        }
        const typeSpecificUrl = this.configService.get(`WEBHOOK_URL_${notification.type}`);
        if (typeSpecificUrl) {
            return typeSpecificUrl;
        }
        return this.configService.get('WEBHOOK_URL') || '';
    }
    getCustomHeaders(notification) {
        const customHeaders = {};
        if (notification.type) {
            customHeaders['X-Notification-Type'] = notification.type;
        }
        if (notification.organizationId) {
            customHeaders['X-Organization-ID'] = notification.organizationId;
        }
        return customHeaders;
    }
    isValidResponse(response) {
        return response.status >= 200 && response.status < 300;
    }
    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
};
WebhookService = WebhookService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService])
], WebhookService);



/***/ }),
/* 101 */
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),
/* 102 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationScheduleListener: () => (/* binding */ NotificationScheduleListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39);
/* harmony import */ var _services_notification_scheduler_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(94);
/* harmony import */ var _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(41);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var NotificationScheduleListener_1;







let NotificationScheduleListener = NotificationScheduleListener_1 = class NotificationScheduleListener {
    constructor(notificationRepository, schedulerService) {
        this.notificationRepository = notificationRepository;
        this.schedulerService = schedulerService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(NotificationScheduleListener_1.name);
    }
    async handleNotificationSchedule(payload) {
        try {
            const { notification, scheduledFor } = payload;
            this.logger.debug(`Scheduling notification ${notification.id} for ${scheduledFor}`);
            await this.schedulerService.scheduleNotification(notification, scheduledFor);
        }
        catch (error) {
            this.logger.error(`Error scheduling notification ${payload.notification.id}:`, error);
            throw error;
        }
    }
    async handleNotificationReschedule(payload) {
        try {
            const { notificationId, newScheduledFor } = payload;
            this.logger.debug(`Rescheduling notification ${notificationId} for ${newScheduledFor}`);
            await this.schedulerService.rescheduleNotification(notificationId, newScheduledFor);
        }
        catch (error) {
            this.logger.error(`Error rescheduling notification ${payload.notificationId}:`, error);
            throw error;
        }
    }
    async handleNotificationCancelSchedule(notificationId) {
        try {
            this.logger.debug(`Canceling scheduled notification ${notificationId}`);
            await this.schedulerService.cancelScheduledNotification(notificationId);
        }
        catch (error) {
            this.logger.error(`Error canceling scheduled notification ${notificationId}:`, error);
            throw error;
        }
    }
    async handleScheduleExpired(notification) {
        try {
            this.logger.debug(`Schedule expired for notification ${notification.id}`);
            notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_6__.NotificationStatus.EXPIRED;
            notification.metadata = Object.assign(Object.assign({}, notification.metadata), { expirationReason: 'schedule_expired', expiredAt: new Date() });
            await this.notificationRepository.save(notification);
        }
        catch (error) {
            this.logger.error(`Error handling expired schedule for notification ${notification.id}:`, error);
            throw error;
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.schedule'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationScheduleListener.prototype, "handleNotificationSchedule", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.reschedule'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationScheduleListener.prototype, "handleNotificationReschedule", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.cancel_schedule'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], NotificationScheduleListener.prototype, "handleNotificationCancelSchedule", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.schedule_expired'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__.Notification]),
    __metadata("design:returntype", Promise)
], NotificationScheduleListener.prototype, "handleScheduleExpired", null);
NotificationScheduleListener = NotificationScheduleListener_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__.Notification)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _services_notification_scheduler_service__WEBPACK_IMPORTED_MODULE_5__.NotificationSchedulerService])
], NotificationScheduleListener);



/***/ }),
/* 103 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NotificationDeliveryListener: () => (/* binding */ NotificationDeliveryListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(39);
/* harmony import */ var _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(41);
/* harmony import */ var _services_notification_delivery_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(99);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var NotificationDeliveryListener_1;







let NotificationDeliveryListener = NotificationDeliveryListener_1 = class NotificationDeliveryListener {
    constructor(notificationRepository, deliveryService) {
        this.notificationRepository = notificationRepository;
        this.deliveryService = deliveryService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(NotificationDeliveryListener_1.name);
    }
    async handleNotificationDelivered(payload) {
        var _a, _b, _c;
        try {
            const { notification, channel } = payload;
            this.logger.debug(`Handling delivery success for notification ${notification.id} on channel ${channel}`);
            notification.deliveryDetails = Object.assign(Object.assign({}, notification.deliveryDetails), { attempts: ((_a = notification.deliveryDetails) === null || _a === void 0 ? void 0 : _a.attempts) || 0, lastAttempt: ((_b = notification.deliveryDetails) === null || _b === void 0 ? void 0 : _b.lastAttempt) || new Date(), channels: [
                    ...(((_c = notification.deliveryDetails) === null || _c === void 0 ? void 0 : _c.channels) || []),
                    {
                        channel,
                        status: 'SUCCESS',
                        sentAt: new Date(),
                    }
                ] });
            const allChannelsDelivered = notification.channels.every(ch => {
                var _a, _b;
                return (_b = (_a = notification.deliveryDetails) === null || _a === void 0 ? void 0 : _a.channels) === null || _b === void 0 ? void 0 : _b.some(d => d.channel === ch && d.status === 'SUCCESS');
            });
            if (allChannelsDelivered) {
                notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationStatus.DELIVERED;
                notification.deliveredAt = new Date();
            }
            await this.notificationRepository.save(notification);
        }
        catch (error) {
            this.logger.error(`Error handling delivery success for notification ${payload.notification.id}:`, error);
            throw error;
        }
    }
    async handleNotificationFailed(payload) {
        var _a, _b;
        try {
            const { notification, channel, error, retry = true } = payload;
            this.logger.debug(`Handling delivery failure for notification ${notification.id} on channel ${channel}`);
            notification.deliveryDetails = Object.assign(Object.assign({}, notification.deliveryDetails), { attempts: (((_a = notification.deliveryDetails) === null || _a === void 0 ? void 0 : _a.attempts) || 0) + 1, lastAttempt: new Date(), channels: [
                    ...(((_b = notification.deliveryDetails) === null || _b === void 0 ? void 0 : _b.channels) || []),
                    {
                        channel,
                        status: 'FAILED',
                        sentAt: new Date(),
                        error: error.message || 'Unknown error',
                    }
                ] });
            const allChannelsFailed = notification.channels.every(ch => {
                var _a, _b;
                return (_b = (_a = notification.deliveryDetails) === null || _a === void 0 ? void 0 : _a.channels) === null || _b === void 0 ? void 0 : _b.some(d => d.channel === ch && d.status === 'FAILED');
            });
            if (allChannelsFailed) {
                if (retry && notification.deliveryDetails.attempts < 3) {
                    notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationStatus.RETRY_PENDING;
                    await this.notificationRepository.save(notification);
                    const retryDelay = Math.pow(2, notification.deliveryDetails.attempts) * 1000;
                    setTimeout(() => {
                        this.deliveryService.retryNotification(notification);
                    }, retryDelay);
                }
                else {
                    notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationStatus.FAILED;
                    await this.notificationRepository.save(notification);
                }
            }
            else {
                await this.notificationRepository.save(notification);
            }
        }
        catch (error) {
            this.logger.error(`Error handling delivery failure for notification ${payload.notification.id}:`, error);
            throw error;
        }
    }
    async handleDeliveryTimeout(notification) {
        var _a, _b, _c;
        try {
            this.logger.debug(`Handling delivery timeout for notification ${notification.id}`);
            notification.status = _dto_update_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationStatus.FAILED;
            notification.deliveryDetails = Object.assign(Object.assign({}, notification.deliveryDetails), { attempts: ((_a = notification.deliveryDetails) === null || _a === void 0 ? void 0 : _a.attempts) || 0, lastAttempt: ((_b = notification.deliveryDetails) === null || _b === void 0 ? void 0 : _b.lastAttempt) || new Date(), channels: ((_c = notification.deliveryDetails) === null || _c === void 0 ? void 0 : _c.channels) || [], error: 'Delivery timeout exceeded', timeoutAt: new Date() });
            await this.notificationRepository.save(notification);
        }
        catch (error) {
            this.logger.error(`Error handling delivery timeout for notification ${notification.id}:`, error);
            throw error;
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.delivered'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationDeliveryListener.prototype, "handleNotificationDelivered", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.failed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], NotificationDeliveryListener.prototype, "handleNotificationFailed", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('notification.delivery_timeout'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__.Notification]),
    __metadata("design:returntype", Promise)
], NotificationDeliveryListener.prototype, "handleDeliveryTimeout", null);
NotificationDeliveryListener = NotificationDeliveryListener_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_notification_entity__WEBPACK_IMPORTED_MODULE_4__.Notification)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _services_notification_delivery_service__WEBPACK_IMPORTED_MODULE_6__.NotificationDeliveryService])
], NotificationDeliveryListener);



/***/ }),
/* 104 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationsModule: () => (/* binding */ OrganizationsModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _controllers_organizations_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(105);
/* harmony import */ var _services_organizations_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(107);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(28);
/* harmony import */ var _entities_organization_invitation_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(116);
/* harmony import */ var _entities_organization_audit_log_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(117);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(21);
/* harmony import */ var _audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(87);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(14);
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(118);
/* harmony import */ var _listeners_organization_billing_listener__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(131);
/* harmony import */ var _listeners_organization_audit_listener__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(133);
/* harmony import */ var _services_organization_subscription_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(132);
/* harmony import */ var _services_organization_invitation_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(135);
/* harmony import */ var _services_organization_audit_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(134);
/* harmony import */ var _guards_organization_access_guard__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(136);
/* harmony import */ var _guards_organization_role_guard__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(137);
/* harmony import */ var _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(58);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(49);
/* harmony import */ var _storage_services_storage_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(109);
/* harmony import */ var domain__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(138);
/* harmony import */ var domain__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(domain__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _domain_entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(61);
/* harmony import */ var _notifications_entities_email_template_entity__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(53);
/* harmony import */ var _notifications_entities_email_log_entity__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(54);
/* harmony import */ var _notifications_entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(56);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



























let OrganizationsModule = class OrganizationsModule {
};
OrganizationsModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_organization_entity__WEBPACK_IMPORTED_MODULE_5__.Organization,
                _entities_organization_invitation_entity__WEBPACK_IMPORTED_MODULE_6__.OrganizationInvitation,
                _entities_organization_audit_log_entity__WEBPACK_IMPORTED_MODULE_7__.OrganizationAuditLog,
                _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_8__.User,
                _audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_9__.AuditLog,
                domain__WEBPACK_IMPORTED_MODULE_22__.Domain,
                _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_19__.DomainVerificationService,
                _domain_entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_23__.DomainVerificationToken,
                _notifications_entities_email_template_entity__WEBPACK_IMPORTED_MODULE_24__.EmailTemplate,
                _notifications_entities_email_log_entity__WEBPACK_IMPORTED_MODULE_25__.EmailLog,
                _notifications_entities_email_queue_entity__WEBPACK_IMPORTED_MODULE_26__.EmailQueue,
                _shared_services_email_service__WEBPACK_IMPORTED_MODULE_20__.EmailService,
            ]),
            _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitterModule.forRoot({
                wildcard: true,
                delimiter: '.',
                maxListeners: 20,
                verboseMemoryLeak: true,
            }),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _users_users_module__WEBPACK_IMPORTED_MODULE_10__.UsersModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _auth_auth_module__WEBPACK_IMPORTED_MODULE_11__.AuthModule),
        ],
        controllers: [
            _controllers_organizations_controller__WEBPACK_IMPORTED_MODULE_3__.OrganizationsController
        ],
        providers: [
            _services_organizations_service__WEBPACK_IMPORTED_MODULE_4__.OrganizationsService,
            _services_organization_subscription_service__WEBPACK_IMPORTED_MODULE_14__.OrganizationSubscriptionService,
            _services_organization_invitation_service__WEBPACK_IMPORTED_MODULE_15__.OrganizationInvitationService,
            _services_organization_audit_service__WEBPACK_IMPORTED_MODULE_16__.OrganizationAuditService,
            _listeners_organization_billing_listener__WEBPACK_IMPORTED_MODULE_12__.OrganizationBillingListener,
            _listeners_organization_audit_listener__WEBPACK_IMPORTED_MODULE_13__.OrganizationAuditListener,
            _guards_organization_access_guard__WEBPACK_IMPORTED_MODULE_17__.OrganizationAccessGuard,
            _guards_organization_role_guard__WEBPACK_IMPORTED_MODULE_18__.OrganizationRoleGuard,
            _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_19__.DomainVerificationService,
            _shared_services_email_service__WEBPACK_IMPORTED_MODULE_20__.EmailService,
            _storage_services_storage_service__WEBPACK_IMPORTED_MODULE_21__.StorageService,
        ],
        exports: [
            _services_organizations_service__WEBPACK_IMPORTED_MODULE_4__.OrganizationsService,
            _services_organization_subscription_service__WEBPACK_IMPORTED_MODULE_14__.OrganizationSubscriptionService,
            _services_organization_invitation_service__WEBPACK_IMPORTED_MODULE_15__.OrganizationInvitationService,
            _guards_organization_access_guard__WEBPACK_IMPORTED_MODULE_17__.OrganizationAccessGuard,
            _guards_organization_role_guard__WEBPACK_IMPORTED_MODULE_18__.OrganizationRoleGuard,
        ]
    })
], OrganizationsModule);



/***/ }),
/* 105 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationsController: () => (/* binding */ OrganizationsController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74);
/* harmony import */ var _common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(106);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
/* harmony import */ var _services_organizations_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(107);
/* harmony import */ var _dto_create_organization_dto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(111);
/* harmony import */ var _dto_update_organization_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(112);
/* harmony import */ var _dto_organization_query_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(113);
/* harmony import */ var _dto_add_user_dto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(114);
/* harmony import */ var _dto_update_subscription_dto__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(115);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};













let OrganizationsController = class OrganizationsController {
    constructor(organizationsService) {
        this.organizationsService = organizationsService;
    }
    async create(createOrganizationDto, req) {
        if (!req.user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('User not authenticated');
        }
        return this.organizationsService.create(Object.assign(Object.assign({}, createOrganizationDto), { createdById: req.user.id }));
    }
    async findAll(query) {
        return this.organizationsService.findAll(query);
    }
    async getCurrentOrganization(req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('No organization context found');
        }
        return this.organizationsService.findOne(req.organization.id);
    }
    async findOne(id) {
        const organization = await this.organizationsService.findOne(id);
        if (!organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.NotFoundException('Organization not found');
        }
        return organization;
    }
    async update(id, updateOrganizationDto, req) {
        if (!req.user || !req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('User or organization context not found');
        }
        if (id !== req.organization.id && req.user.role !== _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.SUPER_ADMIN) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Cannot update other organizations');
        }
        return this.organizationsService.update(id, Object.assign(Object.assign({}, updateOrganizationDto), { updatedBy: req.user.id }));
    }
    async remove(id) {
        await this.organizationsService.remove(id);
    }
    async addUser(id, addUserDto, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('No organization context found');
        }
        if (id !== req.organization.id) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Cannot add users to other organizations');
        }
        return this.organizationsService.addUser(id, addUserDto);
    }
    async removeUser(id, userId, req) {
        if (!req.user || !req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('User or organization context not found');
        }
        if (id !== req.organization.id) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Cannot remove users from other organizations');
        }
        if (req.user.id === userId) {
            const admins = await this.organizationsService.getAdminCount(id);
            if (admins === 1) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Cannot remove the last administrator');
            }
        }
        await this.organizationsService.removeUser(id, userId);
    }
    async updateSubscription(id, updateSubscriptionDto, req) {
        if (!req.user || !req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('User or organization context not found');
        }
        if (id !== req.organization.id && req.user.role !== _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.SUPER_ADMIN) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Cannot update other organizations\' subscriptions');
        }
        return this.organizationsService.updateSubscription(id, updateSubscriptionDto);
    }
    async getStatistics(id, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('No organization context found');
        }
        if (id !== req.organization.id) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Cannot view other organizations\' statistics');
        }
        return this.organizationsService.getStatistics(id);
    }
    async verifyDomain(id, domain, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('No organization context found');
        }
        if (id !== req.organization.id) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Cannot verify other organizations\' domains');
        }
        return this.organizationsService.verifyDomain(id, domain);
    }
    async getAuditLogs(id, query, req) {
        if (!req.organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('No organization context found');
        }
        if (id !== req.organization.id) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ForbiddenException('Cannot view other organizations\' audit logs');
        }
        return this.organizationsService.getAuditLogs(id, query);
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(28).Organization) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_create_organization_dto__WEBPACK_IMPORTED_MODULE_7__.CreateOrganizationDto, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "create", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.SUPER_ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get all organizations' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return all organizations' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_organization_query_dto__WEBPACK_IMPORTED_MODULE_9__.OrganizationQueryDto]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "findAll", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('current'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get current organization' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return current organization details' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(28).Organization) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "getCurrentOrganization", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.SUPER_ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get organization by id' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return organization details' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(28).Organization) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "findOne", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update organization' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Organization updated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(28).Organization) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_organization_dto__WEBPACK_IMPORTED_MODULE_8__.UpdateOrganizationDto, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "update", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.SUPER_ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Delete organization' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.NO_CONTENT, description: 'Organization deleted successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "remove", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/users'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Add user to organization' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'User added successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(21).User) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_add_user_dto__WEBPACK_IMPORTED_MODULE_10__.AddUserDto, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "addUser", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id/users/:userId'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Remove user from organization' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.NO_CONTENT, description: 'User removed successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('userId', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "removeUser", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id/subscription'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.SUPER_ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update organization subscription' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Subscription updated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(28).Organization) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_subscription_dto__WEBPACK_IMPORTED_MODULE_11__.UpdateSubscriptionDto, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "updateSubscription", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/statistics'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get organization statistics' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return organization statistics' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "getStatistics", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/verify-domain'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Verify organization domain' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Domain verified successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: Boolean }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)('domain')),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "verifyDomain", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/audit-logs'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get organization audit logs' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return organization audit logs' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, Object]),
    __metadata("design:returntype", Promise)
], OrganizationsController.prototype, "getAuditLogs", null);
OrganizationsController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Organizations'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('organizations'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__.JwtAuthGuard, _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__.RolesGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    __metadata("design:paramtypes", [_services_organizations_service__WEBPACK_IMPORTED_MODULE_6__.OrganizationsService])
], OrganizationsController);



/***/ }),
/* 106 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PERMISSIONS_KEY: () => (/* binding */ PERMISSIONS_KEY),
/* harmony export */   Permission: () => (/* binding */ Permission),
/* harmony export */   Permissions: () => (/* binding */ Permissions),
/* harmony export */   ROLES_KEY: () => (/* binding */ ROLES_KEY),
/* harmony export */   RolePermissions: () => (/* binding */ RolePermissions),
/* harmony export */   Roles: () => (/* binding */ Roles),
/* harmony export */   getRolePermissions: () => (/* binding */ getRolePermissions),
/* harmony export */   hasPermission: () => (/* binding */ hasPermission)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(22);


const ROLES_KEY = 'roles';
const Roles = (...roles) => (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(ROLES_KEY, roles);
const PERMISSIONS_KEY = 'permissions';
var Permission;
(function (Permission) {
    Permission["MANAGE_USERS"] = "manage_users";
    Permission["VIEW_USERS"] = "view_users";
    Permission["MANAGE_CONTACTS"] = "manage_contacts";
    Permission["VIEW_CONTACTS"] = "view_contacts";
    Permission["MANAGE_APPOINTMENTS"] = "manage_appointments";
    Permission["VIEW_APPOINTMENTS"] = "view_appointments";
    Permission["BOOK_APPOINTMENTS"] = "book_appointments";
    Permission["MANAGE_TICKETS"] = "manage_tickets";
    Permission["VIEW_TICKETS"] = "view_tickets";
    Permission["CREATE_TICKETS"] = "create_tickets";
    Permission["ASSIGN_TICKETS"] = "assign_tickets";
    Permission["SEND_MESSAGES"] = "send_messages";
    Permission["VIEW_MESSAGES"] = "view_messages";
    Permission["MANAGE_ORGANIZATION"] = "manage_organization";
    Permission["VIEW_ORGANIZATION"] = "view_organization";
    Permission["MANAGE_SETTINGS"] = "manage_settings";
    Permission["VIEW_SETTINGS"] = "view_settings";
})(Permission || (Permission = {}));
const Permissions = (...permissions) => (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(PERMISSIONS_KEY, permissions);
const RolePermissions = {
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.SUPER_ADMIN]: Object.values(Permission),
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.ADMIN]: [
        Permission.MANAGE_USERS,
        Permission.VIEW_USERS,
        Permission.MANAGE_CONTACTS,
        Permission.VIEW_CONTACTS,
        Permission.MANAGE_APPOINTMENTS,
        Permission.VIEW_APPOINTMENTS,
        Permission.MANAGE_TICKETS,
        Permission.VIEW_TICKETS,
        Permission.SEND_MESSAGES,
        Permission.VIEW_MESSAGES,
        Permission.MANAGE_ORGANIZATION,
        Permission.VIEW_ORGANIZATION,
        Permission.MANAGE_SETTINGS,
        Permission.VIEW_SETTINGS,
    ],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.DOCTOR]: [
        Permission.VIEW_CONTACTS,
        Permission.MANAGE_APPOINTMENTS,
        Permission.VIEW_APPOINTMENTS,
        Permission.VIEW_TICKETS,
        Permission.CREATE_TICKETS,
        Permission.SEND_MESSAGES,
        Permission.VIEW_MESSAGES,
    ],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.STAFF]: [
        Permission.VIEW_CONTACTS,
        Permission.VIEW_APPOINTMENTS,
        Permission.BOOK_APPOINTMENTS,
        Permission.VIEW_TICKETS,
        Permission.CREATE_TICKETS,
        Permission.SEND_MESSAGES,
        Permission.VIEW_MESSAGES,
    ],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.RECEPTIONIST]: [
        Permission.VIEW_CONTACTS,
        Permission.BOOK_APPOINTMENTS,
        Permission.VIEW_APPOINTMENTS,
        Permission.CREATE_TICKETS,
        Permission.VIEW_TICKETS,
        Permission.SEND_MESSAGES,
        Permission.VIEW_MESSAGES,
    ],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.AGENT]: [],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.SUPERVISOR]: [],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.CLIENT]: [],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.USER]: [],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.GUEST]: [],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.MANAGER]: [],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.NURSE]: [],
    [_modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_1__.Role.PATIENT]: []
};
function hasPermission(role, permission) {
    var _a;
    return ((_a = RolePermissions[role]) === null || _a === void 0 ? void 0 : _a.includes(permission)) || false;
}
function getRolePermissions(role) {
    return RolePermissions[role] || [];
}


/***/ }),
/* 107 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationsService: () => (/* binding */ OrganizationsService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21);
/* harmony import */ var _audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22);
/* harmony import */ var _utils_slug_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(108);
/* harmony import */ var _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(58);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(49);
/* harmony import */ var _storage_services_storage_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(109);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};












let OrganizationsService = class OrganizationsService {
    getMemberContext(organizationId, id) {
        throw new Error('Method not implemented.');
    }
    findById(organizationId) {
        throw new Error('Method not implemented.');
    }
    constructor(organizationRepository, userRepository, auditLogRepository, domainVerificationService, emailService, storageService) {
        this.organizationRepository = organizationRepository;
        this.userRepository = userRepository;
        this.auditLogRepository = auditLogRepository;
        this.domainVerificationService = domainVerificationService;
        this.emailService = emailService;
        this.storageService = storageService;
    }
    async create(createOrganizationDto) {
        const existingOrg = await this.organizationRepository.findOne({
            where: { name: createOrganizationDto.name }
        });
        if (existingOrg) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ConflictException('Organization with this name already exists');
        }
        const slug = await this.generateUniqueSlug(createOrganizationDto.name);
        const organizationData = {
            name: createOrganizationDto.name,
            description: createOrganizationDto.description,
            slug,
            type: createOrganizationDto.type,
            status: _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.OrganizationStatus.PENDING,
            subscriptionTier: _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.SubscriptionTier.FREE,
            settings: this.getDefaultSettings(),
            createdById: createOrganizationDto.createdById,
        };
        const organization = this.organizationRepository.create(organizationData);
        const result = await this.organizationRepository.save(organization);
        const savedOrg = Array.isArray(result) ? result[0] : result;
        await this.createAuditLog({
            organizationId: savedOrg.id,
            action: 'CREATE_ORGANIZATION',
            metadata: { userId: createOrganizationDto.createdById, organizationId: savedOrg.id }
        });
        return savedOrg;
    }
    async findAll(query) {
        const queryBuilder = this.organizationRepository.createQueryBuilder('organization');
        if (query.search) {
            queryBuilder.andWhere('(organization.name ILIKE :search OR organization.domain ILIKE :search)', { search: `%${query.search}%` });
        }
        if (query.status) {
            queryBuilder.andWhere('organization.status = :status', { status: query.status });
        }
        if (query.subscriptionTier) {
            queryBuilder.andWhere('organization.subscriptionTier = :tier', { tier: query.subscriptionTier });
        }
        queryBuilder.leftJoinAndSelect('organization.users', 'users');
        const page = query.page || 1;
        const limit = query.limit || 10;
        const skip = (page - 1) * limit;
        queryBuilder.skip(skip).take(limit);
        const sortBy = query.sortBy || 'createdAt';
        const sortOrder = query.sortOrder || 'DESC';
        queryBuilder.orderBy(`organization.${sortBy}`, sortOrder);
        const [items, total] = await queryBuilder.getManyAndCount();
        return { items, total };
    }
    async findOne(id) {
        const organization = await this.organizationRepository.findOne({
            where: { id },
            relations: ['users']
        });
        if (!organization) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('Organization not found');
        }
        return organization;
    }
    async update(id, updateOrganizationDto) {
        const organization = await this.findOne(id);
        if (updateOrganizationDto.domain && updateOrganizationDto.domain !== organization.domain) {
            organization.isDomainVerified = false;
        }
        Object.assign(organization, updateOrganizationDto);
        const updatedOrg = await this.organizationRepository.save(organization);
        await this.createAuditLog({
            organizationId: id,
            action: 'UPDATE_ORGANIZATION',
            metadata: {
                userId: updateOrganizationDto.updatedBy,
                organizationId: id,
                changes: updateOrganizationDto
            }
        });
        return updatedOrg;
    }
    async remove(id) {
        const organization = await this.findOne(id);
        await this.organizationRepository.softDelete(id);
        await this.createAuditLog({
            organizationId: id,
            action: 'DELETE_ORGANIZATION',
            metadata: { organizationId: id }
        });
    }
    async addUser(id, addUserDto) {
        const organization = await this.findOne(id);
        const userCount = await this.userRepository.count({ where: { organizationId: id } });
        if (userCount >= organization.maxUsers) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Organization user limit reached');
        }
        const user = this.userRepository.create(Object.assign(Object.assign({}, addUserDto), { organizationId: id, requirePasswordChange: true }));
        const savedUser = await this.userRepository.save(user);
        await this.sendWelcomeEmail(savedUser.email, {
            organizationName: organization.name,
            temporaryPassword: addUserDto.password
        });
        await this.createAuditLog({
            organizationId: id,
            action: 'ADD_USER',
            metadata: { userId: savedUser.id }
        });
        return savedUser;
    }
    async removeUser(id, userId) {
        const user = await this.userRepository.findOne({
            where: { id: userId, organizationId: id }
        });
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('User not found in organization');
        }
        await this.userRepository.softDelete(userId);
        await this.createAuditLog({
            organizationId: id,
            action: 'REMOVE_USER',
            metadata: { userId }
        });
    }
    async getAdminCount(organizationId) {
        return this.userRepository.count({
            where: {
                organizationId,
                role: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__.Role.ADMIN,
                deletedAt: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.IsNull)()
            }
        });
    }
    async updateSubscription(id, updateSubscriptionDto) {
        const organization = await this.findOne(id);
        Object.assign(organization, {
            subscriptionTier: updateSubscriptionDto.tier,
            subscriptionStartDate: updateSubscriptionDto.startDate,
            subscriptionEndDate: updateSubscriptionDto.endDate,
            maxUsers: updateSubscriptionDto.maxUsers,
            maxStorage: updateSubscriptionDto.maxStorage,
            isSubscriptionActive: true
        });
        const updatedOrg = await this.organizationRepository.save(organization);
        await this.createAuditLog({
            organizationId: id,
            action: 'UPDATE_SUBSCRIPTION',
            metadata: { changes: updateSubscriptionDto }
        });
        return updatedOrg;
    }
    async getStatistics(id) {
        const organization = await this.findOne(id);
        const totalUsers = await this.userRepository.count({
            where: { organizationId: id }
        });
        const activeUsers = await this.userRepository.count({
            where: { organizationId: id, isActive: true }
        });
        const storageUsed = await this.getStorageUsage(id);
        return {
            totalUsers,
            activeUsers,
            storageUsed,
            storageLimit: organization.maxStorage,
            subscriptionStatus: organization.isSubscriptionActive,
            subscriptionTier: organization.subscriptionTier
        };
    }
    async verifyDomain(id, domain) {
        const organization = await this.findOne(id);
        const isVerified = await this.verifyDomainOwnership(domain);
        if (isVerified) {
            organization.domain = domain;
            organization.isDomainVerified = true;
            await this.organizationRepository.save(organization);
            await this.createAuditLog({
                organizationId: id,
                action: 'VERIFY_DOMAIN',
                metadata: { domain }
            });
        }
        return isVerified;
    }
    async getAuditLogs(id, query) {
        const queryBuilder = this.auditLogRepository.createQueryBuilder('audit_log')
            .where('audit_log.organizationId = :id', { id });
        if (query.action) {
            queryBuilder.andWhere('audit_log.action = :action', { action: query.action });
        }
        if (query.userId) {
            queryBuilder.andWhere('audit_log.metadata->\'userId\' = :userId', { userId: query.userId });
        }
        if (query.startDate && query.endDate) {
            queryBuilder.andWhere('audit_log.createdAt BETWEEN :startDate AND :endDate', {
                startDate: query.startDate,
                endDate: query.endDate
            });
        }
        const page = query.page || 1;
        const limit = query.limit || 10;
        const skip = (page - 1) * limit;
        queryBuilder.skip(skip).take(limit);
        queryBuilder.orderBy('audit_log.createdAt', 'DESC');
        const [items, total] = await queryBuilder.getManyAndCount();
        return { items, total };
    }
    async generateUniqueSlug(name) {
        let slug = (0,_utils_slug_util__WEBPACK_IMPORTED_MODULE_7__.generateSlug)(name);
        let counter = 1;
        while (await this.organizationRepository.findOne({ where: { slug } })) {
            slug = (0,_utils_slug_util__WEBPACK_IMPORTED_MODULE_7__.generateSlug)(name) + '-' + counter;
            counter++;
        }
        return slug;
    }
    getDefaultSettings() {
        return {
            ticketPriorities: ['LOW', 'MEDIUM', 'HIGH', 'URGENT'],
            ticketCategories: ['GENERAL', 'TECHNICAL', 'BILLING', 'OTHER'],
            customFields: [],
            notificationSettings: {
                emailEnabled: true,
                smsEnabled: false,
                inAppEnabled: true
            },
            brandingSettings: {
                primaryColor: '#007bff',
                logoUrl: null,
                favIconUrl: null
            }
        };
    }
    async createAuditLog(data) {
        const auditLog = this.auditLogRepository.create(data);
        await this.auditLogRepository.save(auditLog);
    }
    async sendWelcomeEmail(email, data) {
        console.log(`Sending welcome email to ${email} for organization ${data.organizationName}`);
    }
    async getStorageUsage(organizationId) {
        console.log(`Getting storage usage for organization ${organizationId}`);
        return 0;
    }
    async verifyDomainOwnership(domain) {
        console.log(`Verifying domain ownership for ${domain}`);
        return true;
    }
};
OrganizationsService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_4__.User)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_audit_entities_audit_log_entity__WEBPACK_IMPORTED_MODULE_5__.AuditLog)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _domain_services_domain_verification_service__WEBPACK_IMPORTED_MODULE_8__.DomainVerificationService,
        _shared_services_email_service__WEBPACK_IMPORTED_MODULE_9__.EmailService,
        _storage_services_storage_service__WEBPACK_IMPORTED_MODULE_10__.StorageService])
], OrganizationsService);



/***/ }),
/* 108 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   generateRandomString: () => (/* binding */ generateRandomString),
/* harmony export */   generateSlug: () => (/* binding */ generateSlug),
/* harmony export */   isValidSlug: () => (/* binding */ isValidSlug),
/* harmony export */   makeSlugUnique: () => (/* binding */ makeSlugUnique)
/* harmony export */ });
function generateSlug(text, options = {}) {
    const { lowercase = true, separator = '-', removeStopWords = true, maxLength = 100 } = options;
    const stopWords = new Set([
        'a', 'an', 'and', 'are', 'as', 'at', 'be', 'by', 'for',
        'from', 'has', 'he', 'in', 'is', 'it', 'its', 'of', 'on',
        'that', 'the', 'to', 'was', 'were', 'will', 'with'
    ]);
    let slug = lowercase ? text.toLowerCase() : text;
    if (removeStopWords) {
        slug = slug
            .split(' ')
            .filter(word => !stopWords.has(word.toLowerCase()))
            .join(' ');
    }
    slug = slug
        .normalize('NFD')
        .replace(/[\u0300-\u036f]/g, '')
        .replace(/[^a-zA-Z0-9\s-]/g, '')
        .replace(/\s+/g, separator)
        .replace(new RegExp(`${separator}+`, 'g'), separator)
        .replace(new RegExp(`^${separator}+|${separator}+$`, 'g'), '');
    if (maxLength && slug.length > maxLength) {
        const truncated = slug.substring(0, maxLength);
        const lastSeparator = truncated.lastIndexOf(separator);
        if (lastSeparator !== -1) {
            slug = truncated.substring(0, lastSeparator);
        }
        else {
            slug = truncated;
        }
    }
    return slug;
}
function generateRandomString(length = 6) {
    const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';
    let result = '';
    for (let i = 0; i < length; i++) {
        result += characters.charAt(Math.floor(Math.random() * characters.length));
    }
    return result;
}
function makeSlugUnique(slug, existingSlugs) {
    if (!existingSlugs.includes(slug)) {
        return slug;
    }
    let counter = 1;
    let uniqueSlug = slug;
    while (existingSlugs.includes(uniqueSlug)) {
        uniqueSlug = `${slug}-${generateRandomString(4)}`;
        counter++;
    }
    return uniqueSlug;
}
function isValidSlug(slug) {
    const slugRegex = /^[a-z0-9]+(?:-[a-z0-9]+)*$/;
    return slugRegex.test(slug);
}


/***/ }),
/* 109 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StorageService: () => (/* binding */ StorageService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(110);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(101);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_3__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var StorageService_1;




let StorageService = StorageService_1 = class StorageService {
    constructor(configService) {
        this.configService = configService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(StorageService_1.name);
        this.bucketName = this.configService.get('AWS_S3_BUCKET') || 'default-bucket-name';
        this.cdnDomain = this.configService.get('CDN_DOMAIN');
    }
    async upload(options) {
        const { fileName, buffer, mimeType: providedMimeType, organizationId, module, isPrivate = false, metadata = {}, } = options;
        const key = this.generateStorageKey({
            fileName,
            organizationId,
            module,
        });
        const mimeType = providedMimeType || this.guessMimeType(fileName);
        this.logger.log(`[MOCK] Uploading file ${fileName} to ${key}`);
        const url = isPrivate
            ? await this.generateSignedUrl({ key })
            : this.generatePublicUrl(key);
        return {
            key,
            url,
            size: buffer.length,
            mimeType,
        };
    }
    async generateSignedUrl(options) {
        const { key, expiresIn = 3600 } = options;
        this.logger.log(`[MOCK] Generating signed URL for ${key}`);
        const expires = Date.now() + (expiresIn * 1000);
        return `https://${this.bucketName}.s3.amazonaws.com/${key}?mock-signature=xxx&expires=${expires}`;
    }
    generatePublicUrl(key) {
        if (this.cdnDomain) {
            return `https://${this.cdnDomain}/${key}`;
        }
        return `https://${this.bucketName}.s3.amazonaws.com/${key}`;
    }
    async delete(key) {
        this.logger.log(`[MOCK] Deleting file ${key}`);
    }
    generateStorageKey(options) {
        const { fileName, organizationId, module } = options;
        const timestamp = Date.now();
        const random = crypto__WEBPACK_IMPORTED_MODULE_3__.randomBytes(8).toString('hex');
        const extension = path__WEBPACK_IMPORTED_MODULE_2__.extname(fileName);
        const sanitizedName = path__WEBPACK_IMPORTED_MODULE_2__.basename(fileName, extension)
            .toLowerCase()
            .replace(/[^a-z0-9]/g, '-');
        return `${organizationId}/${module}/${timestamp}-${random}-${sanitizedName}${extension}`;
    }
    async getMetadata(key) {
        this.logger.log(`[MOCK] Getting metadata for ${key}`);
        return {
            fileName: path__WEBPACK_IMPORTED_MODULE_2__.basename(key),
            contentType: this.guessMimeType(key),
            size: '1024',
            uploadedAt: new Date().toISOString(),
        };
    }
    async copy(sourceKey, destinationKey) {
        this.logger.log(`[MOCK] Copying file from ${sourceKey} to ${destinationKey}`);
    }
    async move(sourceKey, destinationKey) {
        this.logger.log(`[MOCK] Moving file from ${sourceKey} to ${destinationKey}`);
    }
    getModuleBucketLocation(module) {
        return `${this.bucketName}/${module}`;
    }
    guessMimeType(fileName) {
        const extension = path__WEBPACK_IMPORTED_MODULE_2__.extname(fileName).toLowerCase();
        const mimeTypes = {
            '.jpg': 'image/jpeg',
            '.jpeg': 'image/jpeg',
            '.png': 'image/png',
            '.gif': 'image/gif',
            '.pdf': 'application/pdf',
            '.doc': 'application/msword',
            '.docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
            '.xls': 'application/vnd.ms-excel',
            '.xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
            '.txt': 'text/plain',
            '.csv': 'text/csv',
            '.json': 'application/json',
            '.xml': 'application/xml',
            '.zip': 'application/zip',
        };
        return mimeTypes[extension] || 'application/octet-stream';
    }
};
StorageService = StorageService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_1__.ConfigService])
], StorageService);



/***/ }),
/* 110 */
/***/ ((module) => {

module.exports = require("path");

/***/ }),
/* 111 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Address: () => (/* binding */ Address),
/* harmony export */   Contact: () => (/* binding */ Contact),
/* harmony export */   CreateOrganizationDto: () => (/* binding */ CreateOrganizationDto),
/* harmony export */   OrganizationType: () => (/* binding */ OrganizationType),
/* harmony export */   SubscriptionPlan: () => (/* binding */ SubscriptionPlan)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var OrganizationType;
(function (OrganizationType) {
    OrganizationType["HOSPITAL"] = "HOSPITAL";
    OrganizationType["CLINIC"] = "CLINIC";
    OrganizationType["PRACTICE"] = "PRACTICE";
    OrganizationType["LABORATORY"] = "LABORATORY";
    OrganizationType["PHARMACY"] = "PHARMACY";
    OrganizationType["OTHER"] = "OTHER";
})(OrganizationType || (OrganizationType = {}));
var SubscriptionPlan;
(function (SubscriptionPlan) {
    SubscriptionPlan["FREE"] = "FREE";
    SubscriptionPlan["STARTER"] = "STARTER";
    SubscriptionPlan["PROFESSIONAL"] = "PROFESSIONAL";
    SubscriptionPlan["ENTERPRISE"] = "ENTERPRISE";
})(SubscriptionPlan || (SubscriptionPlan = {}));
class Address {
    static _OPENAPI_METADATA_FACTORY() {
        return { street: { required: true, type: () => String, maxLength: 100 }, city: { required: true, type: () => String, maxLength: 100 }, state: { required: true, type: () => String, maxLength: 100 }, postalCode: { required: true, type: () => String, maxLength: 20 }, country: { required: true, type: () => String, maxLength: 100 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], Address.prototype, "street", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], Address.prototype, "city", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], Address.prototype, "state", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(20),
    __metadata("design:type", String)
], Address.prototype, "postalCode", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], Address.prototype, "country", void 0);
class Contact {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String, maxLength: 100 }, position: { required: true, type: () => String, maxLength: 100 }, email: { required: true, type: () => String, format: "email" }, phone: { required: true, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], Contact.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], Contact.prototype, "position", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], Contact.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], Contact.prototype, "phone", void 0);
class CreateOrganizationDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String, minLength: 2, maxLength: 100, pattern: "/^[a-zA-Z0-9\\s\\-_]+$/" }, type: { required: true, enum: (__webpack_require__(111).OrganizationType) }, description: { required: false, type: () => String, maxLength: 200 }, email: { required: true, type: () => String, format: "email" }, phone: { required: true, type: () => String }, domain: { required: false, type: () => String, pattern: "/^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\\.[a-zA-Z]{2,}$/" }, address: { required: true, type: () => (__webpack_require__(111).Address) }, primaryContact: { required: true, type: () => (__webpack_require__(111).Contact) }, additionalContacts: { required: false, type: () => [(__webpack_require__(111).Contact)] }, subscriptionPlan: { required: true, enum: (__webpack_require__(111).SubscriptionPlan) }, taxId: { required: false, type: () => String, maxLength: 50 }, registrationNumber: { required: false, type: () => String, maxLength: 50 }, licenseNumber: { required: false, type: () => String, maxLength: 50 }, settings: { required: false, type: () => ({ timezone: { required: false, type: () => String }, dateFormat: { required: false, type: () => String }, timeFormat: { required: false, type: () => String }, currency: { required: false, type: () => String }, language: { required: false, type: () => String }, notificationSettings: { required: false, type: () => ({ email: { required: false, type: () => Boolean }, sms: { required: false, type: () => Boolean }, push: { required: false, type: () => Boolean } }) }, branding: { required: false, type: () => ({ logo: { required: false, type: () => String }, colors: { required: false, type: () => ({ primary: { required: false, type: () => String }, secondary: { required: false, type: () => String } }) } }) } }) }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^[a-zA-Z0-9\s\-_]+$/),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: OrganizationType }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(OrganizationType),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(200),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "description", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$/),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "domain", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Address),
    __metadata("design:type", Address)
], CreateOrganizationDto.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Contact),
    __metadata("design:type", Contact)
], CreateOrganizationDto.prototype, "primaryContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ type: [Contact] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Contact),
    __metadata("design:type", Array)
], CreateOrganizationDto.prototype, "additionalContacts", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: SubscriptionPlan }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(SubscriptionPlan),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "subscriptionPlan", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "taxId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "registrationNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateOrganizationDto.prototype, "licenseNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], CreateOrganizationDto.prototype, "settings", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], CreateOrganizationDto.prototype, "metadata", void 0);


/***/ }),
/* 112 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateOrganizationDto: () => (/* binding */ UpdateOrganizationDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _create_organization_dto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(111);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class UpdateOrganizationDto extends (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.PartialType)((0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.OmitType)(_create_organization_dto__WEBPACK_IMPORTED_MODULE_1__.CreateOrganizationDto, ['subscriptionPlan'])) {
    static _OPENAPI_METADATA_FACTORY() {
        return { isActive: { required: false, type: () => Boolean }, isVerified: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateOrganizationDto.prototype, "isActive", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateOrganizationDto.prototype, "isVerified", void 0);


/***/ }),
/* 113 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DateRangeDto: () => (/* binding */ DateRangeDto),
/* harmony export */   OrganizationQueryDto: () => (/* binding */ OrganizationQueryDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class DateRangeDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { startDate: { required: false, type: () => String }, endDate: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Start date for filtering' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], DateRangeDto.prototype, "startDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'End date for filtering' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], DateRangeDto.prototype, "endDate", void 0);
class OrganizationQueryDto {
    constructor() {
        this.page = 1;
        this.limit = 10;
        this.sortBy = 'createdAt';
        this.sortOrder = 'DESC';
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { search: { required: false, type: () => String }, status: { required: false, enum: (__webpack_require__(28).OrganizationStatus) }, subscriptionTier: { required: false, enum: (__webpack_require__(28).SubscriptionTier) }, isDomainVerified: { required: false, type: () => Boolean }, isSubscriptionActive: { required: false, type: () => Boolean }, minUsers: { required: false, type: () => Number, minimum: 0 }, maxUsers: { required: false, type: () => Number, minimum: 1 }, storageUsagePercentage: { required: false, type: () => Number, minimum: 0, maximum: 100 }, createdAt: { required: false, type: () => (__webpack_require__(113).DateRangeDto) }, subscriptionDate: { required: false, type: () => (__webpack_require__(113).DateRangeDto) }, industries: { required: false, type: () => [String] }, includeDeleted: { required: false, type: () => Boolean }, location: { required: false, type: () => String }, timezone: { required: false, type: () => String }, page: { required: false, type: () => Number, default: 1, minimum: 1 }, limit: { required: false, type: () => Number, default: 10, minimum: 1, maximum: 100 }, sortBy: { required: false, type: () => String, default: "createdAt" }, sortOrder: { required: false, type: () => Object, default: "DESC" }, includeUsers: { required: false, type: () => Boolean }, includeSubscription: { required: false, type: () => Boolean }, includeStatistics: { required: false, type: () => Boolean }, includeAuditLogs: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Search term for name or domain' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], OrganizationQueryDto.prototype, "search", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.OrganizationStatus }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.OrganizationStatus),
    __metadata("design:type", String)
], OrganizationQueryDto.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.SubscriptionTier }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.SubscriptionTier),
    __metadata("design:type", String)
], OrganizationQueryDto.prototype, "subscriptionTier", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by domain verification status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationQueryDto.prototype, "isDomainVerified", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by subscription active status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationQueryDto.prototype, "isSubscriptionActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by user count greater than' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], OrganizationQueryDto.prototype, "minUsers", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by user count less than' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], OrganizationQueryDto.prototype, "maxUsers", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by storage usage percentage' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], OrganizationQueryDto.prototype, "storageUsagePercentage", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DateRangeDto),
    __metadata("design:type", DateRangeDto)
], OrganizationQueryDto.prototype, "createdAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DateRangeDto),
    __metadata("design:type", DateRangeDto)
], OrganizationQueryDto.prototype, "subscriptionDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific industries' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], OrganizationQueryDto.prototype, "industries", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include deleted organizations' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationQueryDto.prototype, "includeDeleted", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by specific location' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], OrganizationQueryDto.prototype, "location", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by timezone' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], OrganizationQueryDto.prototype, "timezone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Page number', minimum: 1 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], OrganizationQueryDto.prototype, "page", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Items per page', minimum: 1, maximum: 100 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], OrganizationQueryDto.prototype, "limit", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Sort field',
        enum: ['name', 'createdAt', 'userCount', 'storageUsage', 'subscriptionEndDate']
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], OrganizationQueryDto.prototype, "sortBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Sort order', enum: ['ASC', 'DESC'] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(['ASC', 'DESC']),
    __metadata("design:type", String)
], OrganizationQueryDto.prototype, "sortOrder", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include user details' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationQueryDto.prototype, "includeUsers", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include subscription details' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationQueryDto.prototype, "includeSubscription", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include statistics' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationQueryDto.prototype, "includeStatistics", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Include audit logs' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], OrganizationQueryDto.prototype, "includeAuditLogs", void 0);


/***/ }),
/* 114 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AddUserDto: () => (/* binding */ AddUserDto),
/* harmony export */   AddressDto: () => (/* binding */ AddressDto),
/* harmony export */   EmergencyContactDto: () => (/* binding */ EmergencyContactDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class AddressDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { street: { required: false, type: () => String, maxLength: 100 }, city: { required: false, type: () => String, maxLength: 50 }, state: { required: false, type: () => String, maxLength: 50 }, postalCode: { required: false, type: () => String, maxLength: 20 }, country: { required: false, type: () => String, maxLength: 50 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], AddressDto.prototype, "street", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], AddressDto.prototype, "city", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], AddressDto.prototype, "state", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(20),
    __metadata("design:type", String)
], AddressDto.prototype, "postalCode", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], AddressDto.prototype, "country", void 0);
class EmergencyContactDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String, maxLength: 100 }, relationship: { required: true, type: () => String, maxLength: 50 }, phone: { required: true, type: () => String }, address: { required: false, type: () => String, maxLength: 200 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "relationship", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(undefined),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(200),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "address", void 0);
class AddUserDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { firstName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, lastName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, email: { required: true, type: () => String, maxLength: 100, format: "email" }, password: { required: true, type: () => String, minLength: 8, maxLength: 50, pattern: "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/" }, role: { required: true, enum: (__webpack_require__(22).Role) }, phoneNumber: { required: false, type: () => String }, title: { required: false, type: () => String, maxLength: 100 }, department: { required: false, type: () => String, maxLength: 100 }, employeeId: { required: false, type: () => String, maxLength: 50 }, address: { required: false, type: () => (__webpack_require__(114).AddressDto) }, emergencyContact: { required: false, type: () => (__webpack_require__(114).EmergencyContactDto) }, licenseNumber: { required: false, type: () => String, maxLength: 50 }, specialization: { required: false, type: () => String, maxLength: 100 }, qualifications: { required: false, type: () => [String] }, certifications: { required: false, type: () => [String] }, languages: { required: false, type: () => [String] }, preferences: { required: false, type: () => ({ theme: { required: false, type: () => String }, notifications: { required: false, type: () => ({ email: { required: false, type: () => Boolean }, sms: { required: false, type: () => Boolean }, inApp: { required: false, type: () => Boolean } }) }, timezone: { required: false, type: () => String }, language: { required: false, type: () => String } }) }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], AddUserDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], AddUserDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], AddUserDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(8),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/, {
        message: 'Password must contain at least one uppercase letter, one lowercase letter, one number and one special character'
    }),
    __metadata("design:type", String)
], AddUserDto.prototype, "password", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role),
    __metadata("design:type", String)
], AddUserDto.prototype, "role", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(undefined),
    __metadata("design:type", String)
], AddUserDto.prototype, "phoneNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], AddUserDto.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], AddUserDto.prototype, "department", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], AddUserDto.prototype, "employeeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => AddressDto),
    __metadata("design:type", AddressDto)
], AddUserDto.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => EmergencyContactDto),
    __metadata("design:type", EmergencyContactDto)
], AddUserDto.prototype, "emergencyContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], AddUserDto.prototype, "licenseNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], AddUserDto.prototype, "specialization", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], AddUserDto.prototype, "qualifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], AddUserDto.prototype, "certifications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], AddUserDto.prototype, "languages", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], AddUserDto.prototype, "preferences", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], AddUserDto.prototype, "metadata", void 0);


/***/ }),
/* 115 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BillingDetailsDto: () => (/* binding */ BillingDetailsDto),
/* harmony export */   FeatureLimitsDto: () => (/* binding */ FeatureLimitsDto),
/* harmony export */   UpdateSubscriptionDto: () => (/* binding */ UpdateSubscriptionDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class BillingDetailsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { billingEmail: { required: false, type: () => String }, billingAddress: { required: false, type: () => String }, taxId: { required: false, type: () => String }, paymentMethod: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], BillingDetailsDto.prototype, "billingEmail", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], BillingDetailsDto.prototype, "billingAddress", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], BillingDetailsDto.prototype, "taxId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], BillingDetailsDto.prototype, "paymentMethod", void 0);
class FeatureLimitsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { maxProjects: { required: false, type: () => Number, minimum: 0 }, maxTeams: { required: false, type: () => Number, minimum: 0 }, maxIntegrations: { required: false, type: () => Number, minimum: 0 }, maxCustomFields: { required: false, type: () => Number, minimum: 0 }, maxApiCalls: { required: false, type: () => Number, minimum: 0 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], FeatureLimitsDto.prototype, "maxProjects", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], FeatureLimitsDto.prototype, "maxTeams", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], FeatureLimitsDto.prototype, "maxIntegrations", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], FeatureLimitsDto.prototype, "maxCustomFields", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], FeatureLimitsDto.prototype, "maxApiCalls", void 0);
class UpdateSubscriptionDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { tier: { required: true, enum: (__webpack_require__(28).SubscriptionTier) }, startDate: { required: true, type: () => String }, endDate: { required: true, type: () => String }, maxUsers: { required: true, type: () => Number, minimum: 1, maximum: 10000 }, maxStorage: { required: true, type: () => Number, minimum: 1 }, autoRenew: { required: false, type: () => Boolean }, isTrial: { required: false, type: () => Boolean }, trialEndDate: { required: false, type: () => String }, billingDetails: { required: false, type: () => (__webpack_require__(115).BillingDetailsDto) }, featureLimits: { required: false, type: () => (__webpack_require__(115).FeatureLimitsDto) }, billingCycle: { required: false, type: () => Number, minimum: 1, maximum: 12 }, pricePerUser: { required: false, type: () => Number, minimum: 0 }, basePrice: { required: false, type: () => Number, minimum: 0 }, discountPercentage: { required: false, type: () => Number, minimum: 0, maximum: 100 }, features: { required: false, type: () => ({ customDomain: { required: false, type: () => Boolean }, ssoEnabled: { required: false, type: () => Boolean }, apiAccess: { required: false, type: () => Boolean }, advancedReporting: { required: false, type: () => Boolean }, customBranding: { required: false, type: () => Boolean }, prioritySupport: { required: false, type: () => Boolean }, dataExport: { required: false, type: () => Boolean }, auditLogs: { required: false, type: () => Boolean } }) }, customization: { required: false, type: () => ({ theme: { required: false, type: () => String }, modules: { required: false, type: () => [String] }, restrictions: { required: false, type: () => [String] }, customFields: { required: false, type: () => [Object] } }) }, supportLevel: { required: false, type: () => Object }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: _entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.SubscriptionTier, description: 'Subscription tier level' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.SubscriptionTier),
    __metadata("design:type", String)
], UpdateSubscriptionDto.prototype, "tier", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Subscription start date' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], UpdateSubscriptionDto.prototype, "startDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Subscription end date' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], UpdateSubscriptionDto.prototype, "endDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Maximum number of users allowed' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(10000),
    __metadata("design:type", Number)
], UpdateSubscriptionDto.prototype, "maxUsers", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Maximum storage in MB' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], UpdateSubscriptionDto.prototype, "maxStorage", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Auto-renewal enabled' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateSubscriptionDto.prototype, "autoRenew", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Trial period enabled' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateSubscriptionDto.prototype, "isTrial", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Trial end date' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], UpdateSubscriptionDto.prototype, "trialEndDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => BillingDetailsDto),
    __metadata("design:type", BillingDetailsDto)
], UpdateSubscriptionDto.prototype, "billingDetails", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => FeatureLimitsDto),
    __metadata("design:type", FeatureLimitsDto)
], UpdateSubscriptionDto.prototype, "featureLimits", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Billing cycle in months' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(12),
    __metadata("design:type", Number)
], UpdateSubscriptionDto.prototype, "billingCycle", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Price per user' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], UpdateSubscriptionDto.prototype, "pricePerUser", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Base price for subscription' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], UpdateSubscriptionDto.prototype, "basePrice", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Discount percentage' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], UpdateSubscriptionDto.prototype, "discountPercentage", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Custom features enabled' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], UpdateSubscriptionDto.prototype, "features", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Additional customization options' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], UpdateSubscriptionDto.prototype, "customization", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Support level included' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(['BASIC', 'STANDARD', 'PREMIUM', 'ENTERPRISE']),
    __metadata("design:type", String)
], UpdateSubscriptionDto.prototype, "supportLevel", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    __metadata("design:type", Object)
], UpdateSubscriptionDto.prototype, "metadata", void 0);


/***/ }),
/* 116 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InvitationStatus: () => (/* binding */ InvitationStatus),
/* harmony export */   OrganizationInvitation: () => (/* binding */ OrganizationInvitation)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _organization_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var InvitationStatus;
(function (InvitationStatus) {
    InvitationStatus["PENDING"] = "PENDING";
    InvitationStatus["ACCEPTED"] = "ACCEPTED";
    InvitationStatus["DECLINED"] = "DECLINED";
    InvitationStatus["EXPIRED"] = "EXPIRED";
    InvitationStatus["REVOKED"] = "REVOKED";
})(InvitationStatus || (InvitationStatus = {}));
let OrganizationInvitation = class OrganizationInvitation {
    isExpired() {
        return new Date() > this.expiresAt;
    }
    canBeResent() {
        return (this.status === InvitationStatus.PENDING &&
            !this.isExpired() &&
            this.resendCount < 3);
    }
    canBeAccepted() {
        return (this.status === InvitationStatus.PENDING &&
            !this.isExpired());
    }
    canBeRevoked() {
        return this.status === InvitationStatus.PENDING;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, email: { required: true, type: () => String }, roles: { required: true, type: () => [String] }, invitedById: { required: true, type: () => String }, invitedBy: { required: true, type: () => (__webpack_require__(21).User) }, invitedUserId: { required: true, type: () => String }, invitedUser: { required: true, type: () => (__webpack_require__(21).User) }, token: { required: true, type: () => String }, expiresAt: { required: true, type: () => Date }, status: { required: true, enum: (__webpack_require__(116).InvitationStatus) }, departmentIds: { required: true, type: () => [String] }, acceptedAt: { required: true, type: () => Date }, declinedAt: { required: true, type: () => Date }, revokedAt: { required: true, type: () => Date }, revokedById: { required: true, type: () => String }, revokedBy: { required: true, type: () => (__webpack_require__(21).User) }, message: { required: true, type: () => String }, metadata: { required: true, type: () => Object }, isResent: { required: true, type: () => Boolean }, lastResentAt: { required: true, type: () => Date }, resendCount: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization)
], OrganizationInvitation.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "email", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('simple-array'),
    __metadata("design:type", Array)
], OrganizationInvitation.prototype, "roles", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "invitedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'invitedById' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], OrganizationInvitation.prototype, "invitedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "invitedUserId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'invitedUserId' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], OrganizationInvitation.prototype, "invitedUser", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "token", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp' }),
    __metadata("design:type", Date)
], OrganizationInvitation.prototype, "expiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: InvitationStatus,
        default: InvitationStatus.PENDING
    }),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { array: true, nullable: true }),
    __metadata("design:type", Array)
], OrganizationInvitation.prototype, "departmentIds", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], OrganizationInvitation.prototype, "acceptedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], OrganizationInvitation.prototype, "declinedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], OrganizationInvitation.prototype, "revokedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "revokedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'revokedById' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], OrganizationInvitation.prototype, "revokedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], OrganizationInvitation.prototype, "message", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], OrganizationInvitation.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], OrganizationInvitation.prototype, "isResent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], OrganizationInvitation.prototype, "lastResentAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 0 }),
    __metadata("design:type", Number)
], OrganizationInvitation.prototype, "resendCount", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], OrganizationInvitation.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], OrganizationInvitation.prototype, "updatedAt", void 0);
OrganizationInvitation = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('organization_invitations')
], OrganizationInvitation);



/***/ }),
/* 117 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationAuditLog: () => (/* binding */ OrganizationAuditLog)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _organization_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



let OrganizationAuditLog = class OrganizationAuditLog {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, eventType: { required: true, type: () => String }, data: { required: true, type: () => Object }, performedBy: { required: true, type: () => String }, timestamp: { required: true, type: () => Date }, metadata: { required: false, type: () => Object }, ipAddress: { required: false, type: () => String }, userAgent: { required: false, type: () => String }, resourceType: { required: false, type: () => String }, resourceId: { required: false, type: () => String }, actionType: { required: false, type: () => String }, status: { required: false, type: () => Object }, errorMessage: { required: false, type: () => String }, changes: { required: false, type: () => ({ before: { required: true, type: () => Object }, after: { required: true, type: () => Object } }) }, tags: { required: false, type: () => [String] }, isSensitive: { required: true, type: () => Boolean }, duration: { required: false, type: () => Number }, sessionId: { required: false, type: () => String }, requestId: { required: false, type: () => String }, environment: { required: false, type: () => String }, version: { required: false, type: () => String }, performedByEmail: { required: false, type: () => String }, performedByRole: { required: false, type: () => String }, resourceName: { required: false, type: () => String }, retainOnDelete: { required: false, type: () => Boolean }, complianceMetadata: { required: false, type: () => ({ dataRetentionPeriod: { required: false, type: () => Number }, dataClassification: { required: false, type: () => String }, regulatoryRequirements: { required: false, type: () => [String] }, piiInvolved: { required: false, type: () => Boolean } }) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organizationId' }),
    __metadata("design:type", _organization_entity__WEBPACK_IMPORTED_MODULE_2__.Organization)
], OrganizationAuditLog.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "eventType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb'),
    __metadata("design:type", Object)
], OrganizationAuditLog.prototype, "data", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "performedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Date)
], OrganizationAuditLog.prototype, "timestamp", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], OrganizationAuditLog.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "ipAddress", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "userAgent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 50, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "resourceType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "resourceId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 50, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "actionType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 50, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "errorMessage", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], OrganizationAuditLog.prototype, "changes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { array: true, nullable: true }),
    __metadata("design:type", Array)
], OrganizationAuditLog.prototype, "tags", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], OrganizationAuditLog.prototype, "isSensitive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('int', { nullable: true }),
    __metadata("design:type", Number)
], OrganizationAuditLog.prototype, "duration", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 100, nullable: true }),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "sessionId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 100, nullable: true }),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "requestId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 50, nullable: true }),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "environment", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 50, nullable: true }),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "version", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 255, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "performedByEmail", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 100, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "performedByRole", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 255, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], OrganizationAuditLog.prototype, "resourceName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], OrganizationAuditLog.prototype, "retainOnDelete", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], OrganizationAuditLog.prototype, "complianceMetadata", void 0);
OrganizationAuditLog = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('organization_audit_logs')
], OrganizationAuditLog);



/***/ }),
/* 118 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthModule: () => (/* binding */ AuthModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_jwt__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_passport__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _controllers_auth_controller__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(119);
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(18);
/* harmony import */ var _strategies_jwt_strategy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(128);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(21);
/* harmony import */ var _entities_refresh_token_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(43);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(28);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(14);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};












let AuthModule = class AuthModule {
};
AuthModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_8__.User, _entities_refresh_token_entity__WEBPACK_IMPORTED_MODULE_9__.RefreshToken, _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_10__.Organization]),
            _nestjs_passport__WEBPACK_IMPORTED_MODULE_3__.PassportModule.register({ defaultStrategy: 'jwt' }),
            _nestjs_jwt__WEBPACK_IMPORTED_MODULE_2__.JwtModule.registerAsync({
                imports: [_nestjs_config__WEBPACK_IMPORTED_MODULE_4__.ConfigModule],
                useFactory: async (configService) => ({
                    secret: configService.get('JWT_SECRET'),
                    signOptions: {
                        expiresIn: configService.get('JWT_EXPIRATION', '15m'),
                    },
                }),
                inject: [_nestjs_config__WEBPACK_IMPORTED_MODULE_4__.ConfigService],
            }),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _users_users_module__WEBPACK_IMPORTED_MODULE_11__.UsersModule),
        ],
        controllers: [_controllers_auth_controller__WEBPACK_IMPORTED_MODULE_5__.AuthController],
        providers: [_services_auth_service__WEBPACK_IMPORTED_MODULE_6__.AuthService, _strategies_jwt_strategy__WEBPACK_IMPORTED_MODULE_7__.JwtStrategy],
        exports: [_services_auth_service__WEBPACK_IMPORTED_MODULE_6__.AuthService, _strategies_jwt_strategy__WEBPACK_IMPORTED_MODULE_7__.JwtStrategy, _nestjs_jwt__WEBPACK_IMPORTED_MODULE_2__.JwtModule],
    })
], AuthModule);



/***/ }),
/* 119 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthController: () => (/* binding */ AuthController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18);
/* harmony import */ var _dto_login_dto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(120);
/* harmony import */ var _dto_register_dto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(121);
/* harmony import */ var _dto_forgot_password_dto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(123);
/* harmony import */ var _dto_reset_password_dto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(124);
/* harmony import */ var _guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(16);
/* harmony import */ var _dto_refresh_token_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(125);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(21);
/* harmony import */ var _decorators_public_decorator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(73);
/* harmony import */ var _decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(126);
/* harmony import */ var _guards_rate_limit_guard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(127);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};














let AuthController = class AuthController {
    constructor(authService) {
        this.authService = authService;
    }
    async login(loginDto, userAgent, ip) {
        const result = await this.authService.login(loginDto, {
            userAgent,
            ip,
        });
        return {
            user: result.user,
            tokens: {
                accessToken: result.accessToken,
                refreshToken: result.refreshToken,
            },
        };
    }
    async register(registerDto, userAgent, ip) {
        const result = await this.authService.register(registerDto, {
            userAgent,
            ip,
        });
        return {
            user: result.user,
            organization: result.organization,
            tokens: {
                accessToken: result.accessToken,
                refreshToken: result.refreshToken,
            },
        };
    }
    async refreshToken(refreshTokenDto) {
        const tokens = await this.authService.refreshToken(refreshTokenDto.refreshToken);
        return { tokens };
    }
    async logout(user, authHeader) {
        const token = authHeader === null || authHeader === void 0 ? void 0 : authHeader.split(' ')[1];
        if (!token) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UnauthorizedException('Invalid token');
        }
        await this.authService.logout(user.id);
        return { message: 'Logout successful' };
    }
    async forgotPassword(forgotPasswordDto) {
        await this.authService.sendPasswordResetEmail(forgotPasswordDto.email);
        return { message: 'Password reset instructions sent to email' };
    }
    async resetPassword(resetPasswordDto) {
        await this.authService.changePassword(resetPasswordDto.token, resetPasswordDto.password);
        return { message: 'Password reset successful' };
    }
    async getCurrentUser(user) {
        return { user };
    }
    async verifyEmail(token) {
        await this.authService.confirmEmail(token);
        return { message: 'Email verification successful' };
    }
    async resendVerification(user) {
        await this.authService.sendVerificationEmail(user.id);
        return { message: 'Verification email sent' };
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('login'),
    (0,_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_10__.Public)(),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpCode)(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'User login' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Login successful' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.UNAUTHORIZED, description: 'Invalid credentials' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Headers)('user-agent')),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Ip)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_login_dto__WEBPACK_IMPORTED_MODULE_3__.LoginDto, String, String]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "login", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('register'),
    (0,_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_10__.Public)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Register new user/organization' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Registration successful' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Headers)('user-agent')),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Ip)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_register_dto__WEBPACK_IMPORTED_MODULE_4__.RegisterDto, String, String]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "register", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('refresh-token'),
    (0,_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_10__.Public)(),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpCode)(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Refresh access token' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_refresh_token_dto__WEBPACK_IMPORTED_MODULE_8__.RefreshTokenDto]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "refreshToken", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('logout'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_7__.JwtAuthGuard),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpCode)(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'User logout' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK }),
    __param(0, (0,_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_11__.CurrentUser)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Headers)('authorization')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__.User, String]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "logout", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('forgot-password'),
    (0,_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_10__.Public)(),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpCode)(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Request password reset' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_forgot_password_dto__WEBPACK_IMPORTED_MODULE_5__.ForgotPasswordDto]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "forgotPassword", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('reset-password'),
    (0,_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_10__.Public)(),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpCode)(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Reset password' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_reset_password_dto__WEBPACK_IMPORTED_MODULE_6__.ResetPasswordDto]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "resetPassword", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('me'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_7__.JwtAuthGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get current user profile' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_11__.CurrentUser)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__.User]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "getCurrentUser", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('verify-email'),
    (0,_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_10__.Public)(),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpCode)(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Verify email address' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)('token')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "verifyEmail", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('resend-verification'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_7__.JwtAuthGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Resend verification email' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_11__.CurrentUser)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__.User]),
    __metadata("design:returntype", Promise)
], AuthController.prototype, "resendVerification", null);
AuthController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Authentication'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('auth'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_guards_rate_limit_guard__WEBPACK_IMPORTED_MODULE_12__.RateLimitGuard),
    __metadata("design:paramtypes", [_services_auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService])
], AuthController);



/***/ }),
/* 120 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LoginDto: () => (/* binding */ LoginDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class LoginDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 8 }, rememberMe: { required: false, type: () => Boolean }, organizationId: { required: false, type: () => String }, deviceId: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'User email address',
        example: 'john.doe@example.com',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)({}, { message: 'Please enter a valid email address' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Email is required' }),
    __metadata("design:type", String)
], LoginDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'User password',
        example: 'Password123!',
        minLength: 8,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Password is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(8, { message: 'Password must be at least 8 characters long' }),
    __metadata("design:type", String)
], LoginDto.prototype, "password", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Remember user session',
        default: false,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], LoginDto.prototype, "rememberMe", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Organization identifier for multi-tenant applications',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], LoginDto.prototype, "organizationId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Device identifier for multi-device management',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], LoginDto.prototype, "deviceId", void 0);


/***/ }),
/* 121 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationAddressDto: () => (/* binding */ OrganizationAddressDto),
/* harmony export */   RegisterDto: () => (/* binding */ RegisterDto),
/* harmony export */   RegisterOrganizationDto: () => (/* binding */ RegisterOrganizationDto),
/* harmony export */   RegisterUserDto: () => (/* binding */ RegisterUserDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22);
/* harmony import */ var _organizations_enums_subscription_plan_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(122);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






class OrganizationAddressDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { street: { required: true, type: () => String }, city: { required: true, type: () => String }, state: { required: true, type: () => String }, postalCode: { required: true, type: () => String }, country: { required: true, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], OrganizationAddressDto.prototype, "street", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], OrganizationAddressDto.prototype, "city", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], OrganizationAddressDto.prototype, "state", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], OrganizationAddressDto.prototype, "postalCode", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], OrganizationAddressDto.prototype, "country", void 0);
class RegisterUserDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { firstName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, lastName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 8, pattern: "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/" }, phone: { required: false, type: () => String }, role: { required: false, enum: (__webpack_require__(22).Role) } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'User first name',
        example: 'John',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'First name is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2, { message: 'First name must be at least 2 characters long' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50, { message: 'First name must not exceed 50 characters' }),
    __metadata("design:type", String)
], RegisterUserDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'User last name',
        example: 'Doe',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Last name is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2, { message: 'Last name must be at least 2 characters long' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50, { message: 'Last name must not exceed 50 characters' }),
    __metadata("design:type", String)
], RegisterUserDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'User email address',
        example: 'john.doe@example.com',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)({}, { message: 'Please enter a valid email address' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Email is required' }),
    __metadata("design:type", String)
], RegisterUserDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'User password',
        example: 'Password123!',
        minLength: 8,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Password is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(8, { message: 'Password must be at least 8 characters long' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/, {
        message: 'Password must contain at least one uppercase letter, one lowercase letter, one number and one special character',
    }),
    __metadata("design:type", String)
], RegisterUserDto.prototype, "password", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'User phone number',
        example: '+1234567890',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(undefined, { message: 'Please enter a valid phone number' }),
    __metadata("design:type", String)
], RegisterUserDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        enum: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role,
        description: 'User role',
        default: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role.ADMIN,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role),
    __metadata("design:type", String)
], RegisterUserDto.prototype, "role", void 0);
class RegisterOrganizationDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String, minLength: 2, maxLength: 100 }, website: { required: false, type: () => String, pattern: "/^https?:\\/\\/.+\\..+$/" }, phone: { required: false, type: () => String }, address: { required: false, type: () => (__webpack_require__(121).OrganizationAddressDto) }, subscriptionPlan: { required: false, enum: (__webpack_require__(122).SubscriptionPlan) } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Organization name',
        example: 'Acme Medical Center',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Organization name is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2, { message: 'Organization name must be at least 2 characters long' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100, { message: 'Organization name must not exceed 100 characters' }),
    __metadata("design:type", String)
], RegisterOrganizationDto.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Organization website',
        example: 'https://www.acmemedical.com',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/^https?:\/\/.+\..+$/, {
        message: 'Please enter a valid website URL',
    }),
    __metadata("design:type", String)
], RegisterOrganizationDto.prototype, "website", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Organization phone number',
        example: '+1234567890',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(undefined, { message: 'Please enter a valid phone number' }),
    __metadata("design:type", String)
], RegisterOrganizationDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Organization address',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => OrganizationAddressDto),
    __metadata("design:type", OrganizationAddressDto)
], RegisterOrganizationDto.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        enum: _organizations_enums_subscription_plan_enum__WEBPACK_IMPORTED_MODULE_4__.SubscriptionPlan,
        description: 'Subscription plan',
        default: _organizations_enums_subscription_plan_enum__WEBPACK_IMPORTED_MODULE_4__.SubscriptionPlan.BASIC,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_organizations_enums_subscription_plan_enum__WEBPACK_IMPORTED_MODULE_4__.SubscriptionPlan),
    __metadata("design:type", String)
], RegisterOrganizationDto.prototype, "subscriptionPlan", void 0);
class RegisterDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { user: { required: true, type: () => (__webpack_require__(121).RegisterUserDto) }, organization: { required: true, type: () => (__webpack_require__(121).RegisterOrganizationDto) } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => RegisterUserDto),
    __metadata("design:type", RegisterUserDto)
], RegisterDto.prototype, "user", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => RegisterOrganizationDto),
    __metadata("design:type", RegisterOrganizationDto)
], RegisterDto.prototype, "organization", void 0);


/***/ }),
/* 122 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SubscriptionPlan: () => (/* binding */ SubscriptionPlan)
/* harmony export */ });
var SubscriptionPlan;
(function (SubscriptionPlan) {
    SubscriptionPlan["FREE"] = "FREE";
    SubscriptionPlan["BASIC"] = "BASIC";
    SubscriptionPlan["STANDARD"] = "STANDARD";
    SubscriptionPlan["PREMIUM"] = "PREMIUM";
    SubscriptionPlan["ENTERPRISE"] = "ENTERPRISE";
})(SubscriptionPlan || (SubscriptionPlan = {}));


/***/ }),
/* 123 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ForgotPasswordDto: () => (/* binding */ ForgotPasswordDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class ForgotPasswordDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { email: { required: true, type: () => String, format: "email" } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Email address associated with the account',
        example: 'user@example.com'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)({}, { message: 'Please provide a valid email address' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Email is required' }),
    __metadata("design:type", String)
], ForgotPasswordDto.prototype, "email", void 0);


/***/ }),
/* 124 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ResetPasswordDto: () => (/* binding */ ResetPasswordDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class ResetPasswordDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { token: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 8, pattern: "/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" }, passwordConfirmation: { required: true, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Reset token received via email',
        example: 'abcdef123456789'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Token is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ message: 'Token must be a string' }),
    __metadata("design:type", String)
], ResetPasswordDto.prototype, "token", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'New password',
        example: 'StrongP@ssw0rd!'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Password is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ message: 'Password must be a string' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(8, { message: 'Password must be at least 8 characters long' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Matches)(/((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {
        message: 'Password must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number or special character'
    }),
    __metadata("design:type", String)
], ResetPasswordDto.prototype, "password", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Confirm new password',
        example: 'StrongP@ssw0rd!'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Password confirmation is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ message: 'Password confirmation must be a string' }),
    __metadata("design:type", String)
], ResetPasswordDto.prototype, "passwordConfirmation", void 0);


/***/ }),
/* 125 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RefreshTokenDto: () => (/* binding */ RefreshTokenDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class RefreshTokenDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { refreshToken: { required: true, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Refresh token for obtaining a new access token',
        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)({ message: 'Refresh token is required' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ message: 'Refresh token must be a string' }),
    __metadata("design:type", String)
], RefreshTokenDto.prototype, "refreshToken", void 0);


/***/ }),
/* 126 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CurrentUser: () => (/* binding */ CurrentUser)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);

const CurrentUser = (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.createParamDecorator)((data, ctx) => {
    const request = ctx.switchToHttp().getRequest();
    return request.user;
});


/***/ }),
/* 127 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RateLimitGuard: () => (/* binding */ RateLimitGuard)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var RateLimitGuard_1;

let RateLimitGuard = RateLimitGuard_1 = class RateLimitGuard {
    constructor() {
        this.maxRequests = 100;
        this.windowMs = 15 * 60 * 1000;
    }
    canActivate(context) {
        const request = context.switchToHttp().getRequest();
        const ip = this.getIp(request);
        const key = `${ip}`;
        const now = Date.now();
        const data = RateLimitGuard_1.store[key] || { count: 0, lastRequest: now };
        if (now - data.lastRequest > this.windowMs) {
            data.count = 0;
            data.lastRequest = now;
        }
        data.count += 1;
        RateLimitGuard_1.store[key] = data;
        const response = context.switchToHttp().getResponse();
        response.header('X-RateLimit-Limit', this.maxRequests);
        response.header('X-RateLimit-Remaining', Math.max(0, this.maxRequests - data.count));
        if (data.count > this.maxRequests) {
            const resetTime = new Date(data.lastRequest + this.windowMs);
            response.header('X-RateLimit-Reset', resetTime.toISOString());
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpException('Too Many Requests', _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.TOO_MANY_REQUESTS);
        }
        return true;
    }
    getIp(request) {
        const forwardedFor = request.headers['x-forwarded-for'];
        if (forwardedFor) {
            return Array.isArray(forwardedFor)
                ? forwardedFor[0]
                : forwardedFor.split(',')[0].trim();
        }
        return request.ip || 'unknown';
    }
};
RateLimitGuard.store = {};
RateLimitGuard = RateLimitGuard_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)()
], RateLimitGuard);



/***/ }),
/* 128 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JwtStrategy: () => (/* binding */ JwtStrategy)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_passport__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var passport_jwt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(129);
/* harmony import */ var passport_jwt__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(passport_jwt__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _entities_user_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(130);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};







let JwtStrategy = class JwtStrategy extends (0,_nestjs_passport__WEBPACK_IMPORTED_MODULE_1__.PassportStrategy)(passport_jwt__WEBPACK_IMPORTED_MODULE_2__.Strategy) {
    constructor(configService, userRepository) {
        super({
            jwtFromRequest: passport_jwt__WEBPACK_IMPORTED_MODULE_2__.ExtractJwt.fromAuthHeaderAsBearerToken(),
            ignoreExpiration: false,
            secretOrKey: configService.get('JWT_SECRET'),
        });
        this.configService = configService;
        this.userRepository = userRepository;
    }
    async validate(payload) {
        const user = await this.userRepository.findOne({
            where: { id: payload.sub },
            relations: ['organization'],
        });
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User not found');
        }
        if (!user.organization.isActive) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Organization is inactive');
        }
        return {
            id: payload.sub,
            email: payload.email,
            role: payload.role,
            organizationId: payload.organizationId,
            permissions: user.permissions,
        };
    }
};
JwtStrategy = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_4__.InjectRepository)(_entities_user_entity__WEBPACK_IMPORTED_MODULE_6__.User)),
    __metadata("design:paramtypes", [_nestjs_config__WEBPACK_IMPORTED_MODULE_3__.ConfigService,
        typeorm__WEBPACK_IMPORTED_MODULE_5__.Repository])
], JwtStrategy);



/***/ }),
/* 129 */
/***/ ((module) => {

module.exports = require("passport-jwt");

/***/ }),
/* 130 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   User: () => (/* binding */ User)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





let User = class User {
    get fullName() {
        return `${this.firstName} ${this.lastName}`;
    }
    normalizeEmail() {
        if (this.email) {
            this.email = this.email.toLowerCase().trim();
        }
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, phone: { required: false, type: () => String }, role: { required: true, enum: (__webpack_require__(22).Role) }, permissions: { required: true, type: () => [String] }, isEmailVerified: { required: true, type: () => Boolean }, isActive: { required: true, type: () => Boolean }, lastLoginAt: { required: true, type: () => Date }, organization: { required: true, type: () => (__webpack_require__(28).Organization) }, organizationId: { required: true, type: () => String }, createdBy: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedBy: { required: false, type: () => String }, updatedAt: { required: true, type: () => Date }, refreshToken: { required: false, type: () => String }, refreshTokenExpiresAt: { required: false, type: () => Date }, passwordResetToken: { required: false, type: () => String }, passwordResetExpiresAt: { required: false, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], User.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 50 }),
    __metadata("design:type", String)
], User.prototype, "firstName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 50 }),
    __metadata("design:type", String)
], User.prototype, "lastName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ unique: true }),
    __metadata("design:type", String)
], User.prototype, "email", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Exclude)(),
    __metadata("design:type", String)
], User.prototype, "password", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "phone", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_4__.Role,
        default: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_4__.Role.STAFF
    }),
    __metadata("design:type", String)
], User.prototype, "role", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'simple-array', nullable: true }),
    __metadata("design:type", Array)
], User.prototype, "permissions", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], User.prototype, "isEmailVerified", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], User.prototype, "isActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], User.prototype, "lastLoginAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization, { nullable: false }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'organization_id' }),
    __metadata("design:type", _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_3__.Organization)
], User.prototype, "organization", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ name: 'organization_id' }),
    __metadata("design:type", String)
], User.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], User.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], User.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "refreshToken", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'timestamp' }),
    __metadata("design:type", Date)
], User.prototype, "refreshTokenExpiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], User.prototype, "passwordResetToken", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'timestamp' }),
    __metadata("design:type", Date)
], User.prototype, "passwordResetExpiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.BeforeInsert)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.BeforeUpdate)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], User.prototype, "normalizeEmail", null);
User = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('users')
], User);



/***/ }),
/* 131 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationBillingListener: () => (/* binding */ OrganizationBillingListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28);
/* harmony import */ var _services_organization_subscription_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(132);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var OrganizationBillingListener_1;






let OrganizationBillingListener = OrganizationBillingListener_1 = class OrganizationBillingListener {
    constructor(organizationRepository, subscriptionService) {
        this.organizationRepository = organizationRepository;
        this.subscriptionService = subscriptionService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationBillingListener_1.name);
    }
    async handleSubscriptionCreated(payload) {
        try {
            const { organizationId, planId } = payload;
            this.logger.debug(`Processing new subscription for organization ${organizationId}`);
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            organization.billing = Object.assign(Object.assign({}, organization.billing), { status: 'active', planId, startDate: new Date() });
            await this.organizationRepository.save(organization);
        }
        catch (error) {
            this.logger.error('Error processing subscription creation:', error);
            throw error;
        }
    }
    async handleSubscriptionUpdated(payload) {
        try {
            const { organizationId, planId, changes } = payload;
            this.logger.debug(`Processing subscription update for organization ${organizationId}`);
            await this.subscriptionService.updateSubscription(organizationId, planId, changes);
        }
        catch (error) {
            this.logger.error('Error processing subscription update:', error);
            throw error;
        }
    }
    async handleSubscriptionCancelled(payload) {
        try {
            const { organizationId } = payload;
            this.logger.debug(`Processing subscription cancellation for organization ${organizationId}`);
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            organization.billing = Object.assign(Object.assign({}, organization.billing), { status: 'cancelled', cancelledAt: new Date(), endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) });
            await this.organizationRepository.save(organization);
        }
        catch (error) {
            this.logger.error('Error processing subscription cancellation:', error);
            throw error;
        }
    }
    async handlePaymentFailed(payload) {
        try {
            const { organizationId, failureReason, attemptCount } = payload;
            this.logger.debug(`Processing payment failure for organization ${organizationId}`);
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            organization.billing = Object.assign(Object.assign({}, organization.billing), { lastPaymentFailure: {
                    date: new Date(),
                    reason: failureReason,
                    attemptCount,
                } });
            if (attemptCount > 2) {
                organization.billing.status = 'past_due';
            }
            await this.organizationRepository.save(organization);
        }
        catch (error) {
            this.logger.error('Error processing payment failure:', error);
            throw error;
        }
    }
    async handleInvoicePaid(payload) {
        try {
            const { organizationId, invoiceId, amount } = payload;
            this.logger.debug(`Processing paid invoice for organization ${organizationId}`);
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            organization.billing = Object.assign(Object.assign({}, organization.billing), { lastPaymentDate: new Date(), lastPaymentAmount: amount, lastInvoiceId: invoiceId, status: 'active' });
            await this.organizationRepository.save(organization);
        }
        catch (error) {
            this.logger.error('Error processing paid invoice:', error);
            throw error;
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.subscription.created'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationBillingListener.prototype, "handleSubscriptionCreated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.subscription.updated'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationBillingListener.prototype, "handleSubscriptionUpdated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.subscription.cancelled'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationBillingListener.prototype, "handleSubscriptionCancelled", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.billing.payment_failed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationBillingListener.prototype, "handlePaymentFailed", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.billing.invoice_paid'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationBillingListener.prototype, "handleInvoicePaid", null);
OrganizationBillingListener = OrganizationBillingListener_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__.Organization)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _services_organization_subscription_service__WEBPACK_IMPORTED_MODULE_5__.OrganizationSubscriptionService])
], OrganizationBillingListener);



/***/ }),
/* 132 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationSubscriptionService: () => (/* binding */ OrganizationSubscriptionService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var OrganizationSubscriptionService_1;





let OrganizationSubscriptionService = OrganizationSubscriptionService_1 = class OrganizationSubscriptionService {
    constructor(organizationRepository, eventEmitter) {
        this.organizationRepository = organizationRepository;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationSubscriptionService_1.name);
    }
    async createSubscription(organizationId, planId) {
        try {
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            const plan = await this.getPlan(planId);
            if (!plan) {
                throw new Error(`Invalid plan ID: ${planId}`);
            }
            organization.subscription = {
                planId,
                status: 'active',
                startDate: new Date(),
                features: plan.features,
                limits: plan.limits,
            };
            await this.organizationRepository.save(organization);
            this.eventEmitter.emit('organization.subscription.created', {
                organizationId,
                planId,
            });
        }
        catch (error) {
            this.logger.error(`Error creating subscription for organization ${organizationId}:`, error);
            throw error;
        }
    }
    async updateSubscription(organizationId, planId, changes) {
        var _a;
        try {
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            const oldPlanId = (_a = organization.subscription) === null || _a === void 0 ? void 0 : _a.planId;
            organization.subscription = Object.assign(Object.assign(Object.assign({}, organization.subscription), changes), { planId, updatedAt: new Date() });
            await this.organizationRepository.save(organization);
            this.eventEmitter.emit('organization.subscription.updated', {
                organizationId,
                oldPlanId,
                newPlanId: planId,
                changes,
            });
        }
        catch (error) {
            this.logger.error(`Error updating subscription for organization ${organizationId}:`, error);
            throw error;
        }
    }
    async cancelSubscription(organizationId, reason) {
        try {
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            organization.subscription = Object.assign(Object.assign({}, organization.subscription), { status: 'cancelled', cancelledAt: new Date(), cancellationReason: reason, endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) });
            await this.organizationRepository.save(organization);
            this.eventEmitter.emit('organization.subscription.cancelled', {
                organizationId,
                reason,
            });
        }
        catch (error) {
            this.logger.error(`Error cancelling subscription for organization ${organizationId}:`, error);
            throw error;
        }
    }
    async checkSubscriptionStatus(organizationId) {
        try {
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!(organization === null || organization === void 0 ? void 0 : organization.subscription)) {
                return false;
            }
            return (organization.subscription.status === 'active' &&
                (!organization.subscription.endDate ||
                    new Date(organization.subscription.endDate) > new Date()));
        }
        catch (error) {
            this.logger.error(`Error checking subscription status for organization ${organizationId}:`, error);
            throw error;
        }
    }
    async validateFeatureAccess(organizationId, feature) {
        try {
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!(organization === null || organization === void 0 ? void 0 : organization.subscription)) {
                return false;
            }
            return organization.subscription.features.includes(feature);
        }
        catch (error) {
            this.logger.error(`Error validating feature access for organization ${organizationId}:`, error);
            throw error;
        }
    }
    async checkResourceLimit(organizationId, resource) {
        try {
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!(organization === null || organization === void 0 ? void 0 : organization.subscription)) {
                return { allowed: false, limit: 0, current: 0 };
            }
            const limit = organization.subscription.limits[resource] || 0;
            const current = await this.getCurrentResourceUsage(organizationId, resource);
            return {
                allowed: current < limit,
                limit,
                current,
            };
        }
        catch (error) {
            this.logger.error(`Error checking resource limit for organization ${organizationId}:`, error);
            throw error;
        }
    }
    async getPlan(planId) {
        const plans = {
            basic: {
                id: 'basic',
                name: 'Basic Plan',
                features: ['feature1', 'feature2'],
                limits: { users: 10, storage: 5 },
                price: 10,
            },
            pro: {
                id: 'pro',
                name: 'Pro Plan',
                features: ['feature1', 'feature2', 'feature3'],
                limits: { users: 50, storage: 25 },
                price: 25,
            },
        };
        return plans[planId] || null;
    }
    async getCurrentResourceUsage(organizationId, resource) {
        const resourceCounters = {
            users: async () => {
                var _a;
                const org = await this.organizationRepository.findOne({
                    where: { id: organizationId },
                    relations: ['members'],
                });
                return ((_a = org === null || org === void 0 ? void 0 : org.members) === null || _a === void 0 ? void 0 : _a.length) || 0;
            },
            storage: async () => {
                return 0;
            },
        };
        if (resourceCounters[resource]) {
            return await resourceCounters[resource]();
        }
        return 0;
    }
};
OrganizationSubscriptionService = OrganizationSubscriptionService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__.Organization)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], OrganizationSubscriptionService);



/***/ }),
/* 133 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationAuditListener: () => (/* binding */ OrganizationAuditListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28);
/* harmony import */ var _services_organization_audit_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(134);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var OrganizationAuditListener_1;






let OrganizationAuditListener = OrganizationAuditListener_1 = class OrganizationAuditListener {
    constructor(organizationRepository, auditService) {
        this.organizationRepository = organizationRepository;
        this.auditService = auditService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationAuditListener_1.name);
    }
    async handleMemberAdded(payload) {
        try {
            const { organizationId, userId, role, addedBy } = payload;
            await this.auditService.logEvent({
                organizationId,
                eventType: 'member_added',
                data: { userId, role },
                performedBy: addedBy,
                timestamp: new Date()
            });
        }
        catch (error) {
            this.logger.error('Error logging member addition:', error);
            throw error;
        }
    }
    async handleMemberRemoved(payload) {
        try {
            const { organizationId, userId, removedBy, reason } = payload;
            await this.auditService.logEvent({
                organizationId,
                eventType: 'member_removed',
                data: { userId, reason },
                performedBy: removedBy,
                timestamp: new Date()
            });
        }
        catch (error) {
            this.logger.error('Error logging member removal:', error);
            throw error;
        }
    }
    async handleRoleChanged(payload) {
        try {
            const { organizationId, userId, oldRole, newRole, changedBy } = payload;
            await this.auditService.logEvent({
                organizationId,
                eventType: 'role_changed',
                data: { userId, oldRole, newRole },
                performedBy: changedBy,
                timestamp: new Date()
            });
        }
        catch (error) {
            this.logger.error('Error logging role change:', error);
            throw error;
        }
    }
    async handleSettingsUpdated(payload) {
        try {
            const { organizationId, changes, updatedBy } = payload;
            await this.auditService.logEvent({
                organizationId,
                eventType: 'settings_updated',
                data: { changes },
                performedBy: updatedBy,
                timestamp: new Date()
            });
        }
        catch (error) {
            this.logger.error('Error logging settings update:', error);
            throw error;
        }
    }
    async handleSubscriptionChanged(payload) {
        try {
            const { organizationId, oldPlan, newPlan, changedBy } = payload;
            await this.auditService.logEvent({
                organizationId,
                eventType: 'subscription_changed',
                data: { oldPlan, newPlan },
                performedBy: changedBy,
                timestamp: new Date()
            });
        }
        catch (error) {
            this.logger.error('Error logging subscription change:', error);
            throw error;
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.member.added'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationAuditListener.prototype, "handleMemberAdded", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.member.removed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationAuditListener.prototype, "handleMemberRemoved", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.role.changed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationAuditListener.prototype, "handleRoleChanged", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.settings.updated'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationAuditListener.prototype, "handleSettingsUpdated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('organization.subscription.changed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], OrganizationAuditListener.prototype, "handleSubscriptionChanged", null);
OrganizationAuditListener = OrganizationAuditListener_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__.Organization)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _services_organization_audit_service__WEBPACK_IMPORTED_MODULE_5__.OrganizationAuditService])
], OrganizationAuditListener);



/***/ }),
/* 134 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationAuditService: () => (/* binding */ OrganizationAuditService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_organization_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(117);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var OrganizationAuditService_1;




let OrganizationAuditService = OrganizationAuditService_1 = class OrganizationAuditService {
    constructor(auditLogRepository) {
        this.auditLogRepository = auditLogRepository;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationAuditService_1.name);
    }
    async logEvent(eventData) {
        try {
            const auditLog = this.auditLogRepository.create({
                organizationId: eventData.organizationId,
                eventType: eventData.eventType,
                data: this.sanitizeData(eventData.data),
                performedBy: eventData.performedBy,
                timestamp: eventData.timestamp || new Date(),
                metadata: eventData.metadata || {},
            });
            await this.auditLogRepository.save(auditLog);
            this.logger.debug(`Audit log created for ${eventData.eventType} in organization ${eventData.organizationId}`);
            return auditLog;
        }
        catch (error) {
            this.logger.error('Error creating audit log:', error);
            throw new Error(`Failed to create audit log: ${error.message}`);
        }
    }
    async getAuditLogs(organizationId, options = {}) {
        var _a;
        try {
            const where = {
                organizationId,
            };
            if (options.startDate || options.endDate) {
                where.timestamp = (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Between)(options.startDate || new Date(0), options.endDate || new Date());
            }
            if ((_a = options.eventTypes) === null || _a === void 0 ? void 0 : _a.length) {
                where.eventType = (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.In)(options.eventTypes);
            }
            if (options.performedBy) {
                where.performedBy = options.performedBy;
            }
            const [logs, total] = await this.auditLogRepository.findAndCount({
                where,
                order: { timestamp: 'DESC' },
                take: options.limit || 50,
                skip: options.offset || 0,
            });
            return { logs, total };
        }
        catch (error) {
            this.logger.error('Error retrieving audit logs:', error);
            throw new Error(`Failed to retrieve audit logs: ${error.message}`);
        }
    }
    async getEventDetails(eventId) {
        try {
            const auditLog = await this.auditLogRepository.findOne({
                where: { id: eventId }
            });
            if (!auditLog) {
                throw new Error(`Audit log with ID ${eventId} not found`);
            }
            return auditLog;
        }
        catch (error) {
            this.logger.error(`Error retrieving audit log details for ID ${eventId}:`, error);
            throw new Error(`Failed to retrieve audit log details: ${error.message}`);
        }
    }
    async getActivitySummary(organizationId, startDate, endDate) {
        try {
            const logs = await this.auditLogRepository.find({
                where: {
                    organizationId,
                    timestamp: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Between)(startDate, endDate)
                }
            });
            return logs.reduce((summary, log) => {
                summary[log.eventType] = (summary[log.eventType] || 0) + 1;
                return summary;
            }, {});
        }
        catch (error) {
            this.logger.error('Error generating activity summary:', error);
            throw new Error(`Failed to generate activity summary: ${error.message}`);
        }
    }
    async getUserActivity(organizationId, userId, options = {}) {
        try {
            const where = {
                organizationId,
                performedBy: userId,
            };
            if (options.startDate || options.endDate) {
                where.timestamp = (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Between)(options.startDate || new Date(0), options.endDate || new Date());
            }
            return await this.auditLogRepository.find({
                where,
                order: { timestamp: 'DESC' },
                take: options.limit || 50,
                skip: options.offset || 0,
            });
        }
        catch (error) {
            this.logger.error(`Error retrieving user activity for user ${userId}:`, error);
            throw new Error(`Failed to retrieve user activity: ${error.message}`);
        }
    }
    async getRecentChanges(organizationId, limit = 10) {
        try {
            return await this.auditLogRepository.find({
                where: {
                    organizationId,
                    eventType: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Like)('%updated%')
                },
                order: { timestamp: 'DESC' },
                take: limit,
            });
        }
        catch (error) {
            this.logger.error('Error retrieving recent changes:', error);
            throw new Error(`Failed to retrieve recent changes: ${error.message}`);
        }
    }
    sanitizeData(data) {
        const sensitiveFields = ['password', 'token', 'secret', 'key', 'credential'];
        const sanitized = Object.assign({}, data);
        const sanitizeObject = (obj) => {
            for (const [key, value] of Object.entries(obj)) {
                if (sensitiveFields.some(field => key.toLowerCase().includes(field))) {
                    obj[key] = '[REDACTED]';
                }
                else if (typeof value === 'object' && value !== null) {
                    sanitizeObject(value);
                }
            }
        };
        sanitizeObject(sanitized);
        return sanitized;
    }
    async cleanupOldLogs(retentionDays) {
        try {
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
            const result = await this.auditLogRepository.delete({
                timestamp: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.LessThan)(cutoffDate)
            });
            this.logger.debug(`Cleaned up ${result.affected} old audit logs`);
            return result.affected || 0;
        }
        catch (error) {
            this.logger.error('Error cleaning up old audit logs:', error);
            throw new Error(`Failed to clean up old audit logs: ${error.message}`);
        }
    }
    async exportAuditLogs(organizationId, startDate, endDate) {
        try {
            const logs = await this.auditLogRepository.find({
                where: {
                    organizationId,
                    timestamp: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Between)(startDate, endDate)
                },
                order: { timestamp: 'ASC' }
            });
            return logs.map(log => ({
                eventId: log.id,
                timestamp: log.timestamp.toISOString(),
                eventType: log.eventType,
                performedBy: log.performedBy,
                details: log.data,
                metadata: log.metadata
            }));
        }
        catch (error) {
            this.logger.error('Error exporting audit logs:', error);
            throw new Error(`Failed to export audit logs: ${error.message}`);
        }
    }
};
OrganizationAuditService = OrganizationAuditService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_organization_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.OrganizationAuditLog)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository])
], OrganizationAuditService);



/***/ }),
/* 135 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationInvitationService: () => (/* binding */ OrganizationInvitationService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(101);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(28);
/* harmony import */ var _entities_organization_invitation_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(116);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(21);
/* harmony import */ var _shared_services_email_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(49);
/* harmony import */ var _organization_subscription_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(132);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var OrganizationInvitationService_1;










let OrganizationInvitationService = OrganizationInvitationService_1 = class OrganizationInvitationService {
    constructor(organizationRepository, invitationRepository, userRepository, emailService, subscriptionService, eventEmitter) {
        this.organizationRepository = organizationRepository;
        this.invitationRepository = invitationRepository;
        this.userRepository = userRepository;
        this.emailService = emailService;
        this.subscriptionService = subscriptionService;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationInvitationService_1.name);
    }
    async createInvitation(organizationId, email, role, invitedBy) {
        try {
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId }
            });
            if (!organization) {
                throw new Error(`Organization ${organizationId} not found`);
            }
            const { allowed, limit, current } = await this.subscriptionService.checkResourceLimit(organizationId, 'users');
            if (!allowed) {
                throw new Error(`Organization has reached member limit (${current}/${limit})`);
            }
            const existingMember = await this.userRepository.findOne({
                where: {
                    email,
                    organizationId
                }
            });
            if (existingMember) {
                throw new Error(`User ${email} is already a member of the organization`);
            }
            const existingInvitations = await this.invitationRepository.createQueryBuilder("invitation")
                .where("invitation.organizationId = :organizationId", { organizationId })
                .andWhere("invitation.email = :email", { email })
                .andWhere("invitation.status = :status", { status: "PENDING" })
                .getMany();
            if (existingInvitations.length > 0) {
                throw new Error(`Pending invitation already exists for ${email}`);
            }
            const invitation = new _entities_organization_invitation_entity__WEBPACK_IMPORTED_MODULE_6__.OrganizationInvitation();
            invitation.organizationId = organizationId;
            invitation.email = email;
            invitation.roles = [role];
            const inviter = await this.userRepository.findOne({
                where: { id: invitedBy }
            });
            if (!inviter) {
                throw new Error(`Inviter ${invitedBy} not found`);
            }
            invitation.invitedBy = inviter;
            invitation.token = this.generateInvitationToken();
            invitation.expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);
            invitation.status = "PENDING";
            const savedInvitation = await this.invitationRepository.save(invitation);
            await this.sendInvitationEmail(savedInvitation, organization);
            this.eventEmitter.emit('organization.invitation.created', {
                organizationId,
                email,
                role,
                invitedBy,
            });
            return savedInvitation;
        }
        catch (error) {
            this.logger.error('Error creating invitation:', error);
            throw error;
        }
    }
    async acceptInvitation(token, userId) {
        try {
            const invitations = await this.invitationRepository.createQueryBuilder("invitation")
                .where("invitation.token = :token", { token })
                .andWhere("invitation.status = :status", { status: "PENDING" })
                .getMany();
            const invitation = invitations.length > 0 ? invitations[0] : null;
            if (!invitation) {
                throw new Error('Invalid or expired invitation');
            }
            if (new Date() > invitation.expiresAt) {
                throw new Error('Invitation has expired');
            }
            const user = await this.userRepository.findOne({
                where: { id: userId }
            });
            if (!user) {
                throw new Error('User not found');
            }
            if (user.email !== invitation.email) {
                throw new Error('Invitation email does not match user email');
            }
            const organization = await this.organizationRepository.findOne({
                where: { id: invitation.organizationId }
            });
            if (!organization) {
                throw new Error('Organization not found');
            }
            organization.members = [
                ...(organization.members || []),
                {
                    userId,
                    role: invitation.roles,
                    joinedAt: new Date(),
                }
            ];
            await this.organizationRepository.save(organization);
            invitation.status = "ACCEPTED";
            invitation.metadata = Object.assign(Object.assign({}, (invitation.metadata || {})), { acceptedAt: new Date() });
            await this.invitationRepository.save(invitation);
            this.eventEmitter.emit('organization.member.added', {
                organizationId: organization.id,
                userId,
                role: invitation.roles,
                invitedBy: invitation.invitedBy,
            });
        }
        catch (error) {
            this.logger.error('Error accepting invitation:', error);
            throw error;
        }
    }
    async cancelInvitation(invitationId, cancelledBy) {
        try {
            const invitations = await this.invitationRepository.createQueryBuilder("invitation")
                .where("invitation.id = :id", { id: invitationId })
                .andWhere("invitation.status = :status", { status: "PENDING" })
                .getMany();
            const invitation = invitations.length > 0 ? invitations[0] : null;
            if (!invitation) {
                throw new Error('Invitation not found or already processed');
            }
            invitation.status = "CANCELLED";
            invitation.metadata = Object.assign(Object.assign({}, (invitation.metadata || {})), { cancelledAt: new Date(), cancelledBy: cancelledBy });
            await this.invitationRepository.save(invitation);
            this.eventEmitter.emit('organization.invitation.cancelled', {
                organizationId: invitation.organizationId,
                email: invitation.email,
                cancelledBy,
            });
        }
        catch (error) {
            this.logger.error('Error cancelling invitation:', error);
            throw error;
        }
    }
    async resendInvitation(invitationId) {
        try {
            const invitation = await this.invitationRepository.findOne({
                where: { id: invitationId }
            });
            if (!invitation) {
                throw new Error('Invitation not found');
            }
            if (String(invitation.status) !== "PENDING") {
                throw new Error('Can only resend pending invitations');
            }
            const organization = await this.organizationRepository.findOne({
                where: { id: invitation.organizationId }
            });
            if (!organization) {
                throw new Error('Organization not found');
            }
            invitation.token = this.generateInvitationToken();
            invitation.expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);
            invitation.resendCount = (invitation.resendCount || 0) + 1;
            await this.invitationRepository.save(invitation);
            await this.sendInvitationEmail(invitation, organization);
            this.eventEmitter.emit('organization.invitation.resent', {
                organizationId: organization.id,
                email: invitation.email,
                resendCount: invitation.resendCount,
            });
        }
        catch (error) {
            this.logger.error('Error resending invitation:', error);
            throw error;
        }
    }
    async listPendingInvitations(organizationId) {
        try {
            return await this.invitationRepository.createQueryBuilder("invitation")
                .where("invitation.organizationId = :organizationId", { organizationId })
                .andWhere("invitation.status = :status", { status: "PENDING" })
                .orderBy("invitation.createdAt", "DESC")
                .getMany();
        }
        catch (error) {
            this.logger.error('Error listing pending invitations:', error);
            throw error;
        }
    }
    generateInvitationToken() {
        return crypto__WEBPACK_IMPORTED_MODULE_4__.randomBytes(32).toString('hex');
    }
    async sendInvitationEmail(invitation, organization) {
        try {
            let inviterName = 'An organization administrator';
            if (invitation.invitedBy) {
                if (typeof invitation.invitedBy === 'object' && invitation.invitedBy.firstName) {
                    inviterName = `${invitation.invitedBy.firstName} ${invitation.invitedBy.lastName || ''}`.trim();
                }
                else if (typeof invitation.invitedBy === 'string') {
                    inviterName = invitation.invitedBy;
                }
            }
            const roleValue = Array.isArray(invitation.roles)
                ? invitation.roles.join(', ')
                : String(invitation.roles || '');
            const emailData = {
                to: invitation.email,
                subject: `Invitation to join ${organization.name}`,
                template: 'organization-invitation',
                context: {
                    organizationName: organization.name,
                    inviterName: inviterName,
                    role: roleValue,
                    acceptUrl: `${process.env.APP_URL}/invitations/accept?token=${invitation.token}`,
                    expiresAt: invitation.expiresAt,
                }
            };
            if (typeof this.emailService.sendEmail === 'function') {
                await this.emailService.sendEmail(emailData);
            }
            else {
                this.logger.warn('No suitable email service method found. Please implement a proper email sending method.');
            }
        }
        catch (error) {
            this.logger.error('Error sending invitation email:', error);
            throw error;
        }
    }
    async cleanupExpiredInvitations() {
        try {
            const expiredInvitations = await this.invitationRepository.createQueryBuilder("invitation")
                .where("invitation.status = :status", { status: "PENDING" })
                .andWhere("invitation.expiresAt <= :now", { now: new Date() })
                .getMany();
            for (const invitation of expiredInvitations) {
                invitation.status = "EXPIRED";
                await this.invitationRepository.save(invitation);
                this.eventEmitter.emit('organization.invitation.expired', {
                    organizationId: invitation.organizationId,
                    email: invitation.email,
                });
            }
        }
        catch (error) {
            this.logger.error('Error cleaning up expired invitations:', error);
            throw error;
        }
    }
};
OrganizationInvitationService = OrganizationInvitationService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_5__.Organization)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_organization_invitation_entity__WEBPACK_IMPORTED_MODULE_6__.OrganizationInvitation)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_7__.User)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _shared_services_email_service__WEBPACK_IMPORTED_MODULE_8__.EmailService,
        _organization_subscription_service__WEBPACK_IMPORTED_MODULE_9__.OrganizationSubscriptionService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], OrganizationInvitationService);



/***/ }),
/* 136 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationAccessGuard: () => (/* binding */ OrganizationAccessGuard)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28);
/* harmony import */ var _modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var OrganizationAccessGuard_1;






let OrganizationAccessGuard = OrganizationAccessGuard_1 = class OrganizationAccessGuard {
    constructor(reflector, organizationRepository) {
        this.reflector = reflector;
        this.organizationRepository = organizationRepository;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationAccessGuard_1.name);
    }
    async canActivate(context) {
        try {
            const request = context.switchToHttp().getRequest();
            const user = request.user;
            const organizationId = this.extractOrganizationId(request);
            if (!organizationId) {
                return true;
            }
            if (user.role === _modules_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.SUPER_ADMIN) {
                return true;
            }
            const organization = await this.organizationRepository.findOne({
                where: { id: organizationId },
                relations: ['members']
            });
            if (!organization) {
                this.logger.warn(`Organization ${organizationId} not found`);
                return false;
            }
            const member = organization.members.find((m) => m.userId === user.id);
            if (!member) {
                this.logger.warn(`User ${user.id} attempted to access organization ${organizationId} without membership`);
                return false;
            }
            request.organization = organization;
            request.organizationMember = member;
            return true;
        }
        catch (error) {
            this.logger.error('Error in organization access guard:', error);
            return false;
        }
    }
    extractOrganizationId(request) {
        return (request.params.organizationId ||
            request.body.organizationId ||
            request.query.organizationId ||
            request.headers['x-organization-id']);
    }
};
OrganizationAccessGuard = OrganizationAccessGuard_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_organization_entity__WEBPACK_IMPORTED_MODULE_4__.Organization)),
    __metadata("design:paramtypes", [_nestjs_core__WEBPACK_IMPORTED_MODULE_1__.Reflector,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository])
], OrganizationAccessGuard);



/***/ }),
/* 137 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationRoleGuard: () => (/* binding */ OrganizationRoleGuard),
/* harmony export */   RequireOrganizationRoles: () => (/* binding */ RequireOrganizationRoles)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var OrganizationRoleGuard_1;



let OrganizationRoleGuard = OrganizationRoleGuard_1 = class OrganizationRoleGuard {
    constructor(reflector) {
        this.reflector = reflector;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationRoleGuard_1.name);
    }
    async canActivate(context) {
        try {
            const roles = this.reflector.get('roles', context.getHandler());
            if (!roles) {
                return true;
            }
            const request = context.switchToHttp().getRequest();
            const user = request.user;
            const member = request.organizationMember;
            if (user.role === _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_2__.Role.SUPER_ADMIN) {
                return true;
            }
            if (!member) {
                this.logger.warn(`Organization member info not found for user ${user.id}. ` +
                    'Make sure OrganizationAccessGuard runs before this guard.');
                return false;
            }
            if (!roles.roles.includes(member.role)) {
                if (roles.allowSelf) {
                    const targetUserId = this.extractTargetUserId(request);
                    if (targetUserId === user.id) {
                        return true;
                    }
                }
                if (roles.checkResourceOwner) {
                    const hasOwnership = await this.checkResourceOwnership(request, user.id);
                    if (hasOwnership) {
                        return true;
                    }
                }
                this.logger.warn(`User ${user.id} with role ${member.role} attempted to access resource ` +
                    `requiring roles: ${roles.roles.join(', ')}`);
                return false;
            }
            return true;
        }
        catch (error) {
            this.logger.error('Error in organization role guard:', error);
            return false;
        }
    }
    extractTargetUserId(request) {
        return (request.params.userId ||
            request.body.userId ||
            request.query.userId);
    }
    async checkResourceOwnership(request, userId) {
        try {
            const resource = request.resource;
            if (!resource) {
                return false;
            }
            const ownerId = resource.userId || resource.createdBy || resource.ownerId;
            return ownerId === userId;
        }
        catch (error) {
            this.logger.error('Error checking resource ownership:', error);
            return false;
        }
    }
};
OrganizationRoleGuard = OrganizationRoleGuard_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_core__WEBPACK_IMPORTED_MODULE_1__.Reflector])
], OrganizationRoleGuard);

const RequireOrganizationRoles = (metadata) => {
    return (target, propertyKey, descriptor) => {
        (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)('roles', metadata)(target, propertyKey, descriptor);
        return descriptor;
    };
};


/***/ }),
/* 138 */
/***/ ((module) => {

module.exports = require("domain");

/***/ }),
/* 139 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WhatsappLog: () => (/* binding */ WhatsappLog),
/* harmony export */   WhatsappMediaType: () => (/* binding */ WhatsappMediaType),
/* harmony export */   WhatsappMessageStatus: () => (/* binding */ WhatsappMessageStatus),
/* harmony export */   WhatsappMessageType: () => (/* binding */ WhatsappMessageType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var WhatsappMessageStatus;
(function (WhatsappMessageStatus) {
    WhatsappMessageStatus["QUEUED"] = "queued";
    WhatsappMessageStatus["SENDING"] = "sending";
    WhatsappMessageStatus["SENT"] = "sent";
    WhatsappMessageStatus["DELIVERED"] = "delivered";
    WhatsappMessageStatus["READ"] = "read";
    WhatsappMessageStatus["FAILED"] = "failed";
    WhatsappMessageStatus["REJECTED"] = "rejected";
    WhatsappMessageStatus["CANCELED"] = "canceled";
    WhatsappMessageStatus["EXPIRED"] = "expired";
})(WhatsappMessageStatus || (WhatsappMessageStatus = {}));
var WhatsappMessageType;
(function (WhatsappMessageType) {
    WhatsappMessageType["TEXT"] = "text";
    WhatsappMessageType["TEMPLATE"] = "template";
    WhatsappMessageType["IMAGE"] = "image";
    WhatsappMessageType["DOCUMENT"] = "document";
    WhatsappMessageType["AUDIO"] = "audio";
    WhatsappMessageType["VIDEO"] = "video";
    WhatsappMessageType["STICKER"] = "sticker";
    WhatsappMessageType["LOCATION"] = "location";
    WhatsappMessageType["CONTACT"] = "contact";
    WhatsappMessageType["INTERACTIVE"] = "interactive";
    WhatsappMessageType["REACTION"] = "reaction";
    WhatsappMessageType["BUTTON"] = "button";
})(WhatsappMessageType || (WhatsappMessageType = {}));
var WhatsappMediaType;
(function (WhatsappMediaType) {
    WhatsappMediaType["IMAGE"] = "image";
    WhatsappMediaType["DOCUMENT"] = "document";
    WhatsappMediaType["AUDIO"] = "audio";
    WhatsappMediaType["VIDEO"] = "video";
    WhatsappMediaType["STICKER"] = "sticker";
})(WhatsappMediaType || (WhatsappMediaType = {}));
let WhatsappLog = class WhatsappLog {
    isInFinalStatus() {
        return [
            WhatsappMessageStatus.SENT,
            WhatsappMessageStatus.DELIVERED,
            WhatsappMessageStatus.READ,
            WhatsappMessageStatus.FAILED,
            WhatsappMessageStatus.REJECTED,
            WhatsappMessageStatus.CANCELED,
            WhatsappMessageStatus.EXPIRED
        ].includes(this.status);
    }
    isSuccessful() {
        return [
            WhatsappMessageStatus.SENT,
            WhatsappMessageStatus.DELIVERED,
            WhatsappMessageStatus.READ
        ].includes(this.status);
    }
    updateStatus(status, details) {
        if (this.isInFinalStatus() &&
            status !== WhatsappMessageStatus.READ &&
            status !== WhatsappMessageStatus.DELIVERED) {
            return;
        }
        this.status = status;
        if (!this.deliveryDetails) {
            this.deliveryDetails = {};
        }
        if (details) {
            this.deliveryDetails = Object.assign(Object.assign({}, this.deliveryDetails), details);
        }
        if (status === WhatsappMessageStatus.SENDING) {
            this.deliveryDetails.lastAttemptAt = new Date();
            this.deliveryDetails.attemptCount = (this.deliveryDetails.attemptCount || 0) + 1;
        }
        else if (status === WhatsappMessageStatus.DELIVERED) {
            this.deliveryDetails.deliveredAt = new Date();
        }
        else if (status === WhatsappMessageStatus.READ) {
            this.deliveryDetails.readAt = new Date();
        }
    }
    getFormattedContent() {
        var _a;
        if (this.messageType === WhatsappMessageType.TEXT) {
            return this.content || '';
        }
        else if (this.messageType === WhatsappMessageType.TEMPLATE) {
            const templateName = ((_a = this.template) === null || _a === void 0 ? void 0 : _a.name) || 'Unknown Template';
            return `Template: ${templateName}`;
        }
        else if (this.mediaData) {
            const caption = this.mediaData.caption ? ` - ${this.mediaData.caption}` : '';
            return `${this.mediaData.type}${caption}`;
        }
        return `${this.messageType} message`;
    }
    getCost() {
        var _a, _b, _c;
        if (((_a = this.deliveryDetails) === null || _a === void 0 ? void 0 : _a.cost) && ((_b = this.deliveryDetails) === null || _b === void 0 ? void 0 : _b.currency)) {
            return {
                amount: this.deliveryDetails.cost,
                currency: this.deliveryDetails.currency
            };
        }
        else if ((_c = this.deliveryDetails) === null || _c === void 0 ? void 0 : _c.pricing) {
            return {
                amount: this.deliveryDetails.pricing.cost,
                currency: this.deliveryDetails.pricing.currency
            };
        }
        return null;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, messageType: { required: true, enum: (__webpack_require__(139).WhatsappMessageType) }, templateId: { required: false, type: () => String }, template: { required: false, type: () => (__webpack_require__(68).WhatsappTemplate) }, to: { required: true, type: () => String }, toName: { required: false, type: () => String }, from: { required: true, type: () => String }, content: { required: false, type: () => String }, status: { required: true, enum: (__webpack_require__(139).WhatsappMessageStatus) }, messageId: { required: false, type: () => String }, conversationId: { required: false, type: () => String }, metadata: { required: false, type: () => Object }, variables: { required: false, type: () => Object }, components: { required: false }, mediaData: { required: false, type: () => ({ type: { required: true, enum: (__webpack_require__(139).WhatsappMediaType) }, id: { required: false, type: () => String }, url: { required: false, type: () => String }, caption: { required: false, type: () => String }, filename: { required: false, type: () => String }, mimeType: { required: false, type: () => String }, size: { required: false, type: () => Number } }) }, deliveryDetails: { required: false, type: () => ({ provider: { required: false, type: () => String }, attemptCount: { required: false, type: () => Number }, lastAttemptAt: { required: false, type: () => Date }, deliveredAt: { required: false, type: () => Date }, readAt: { required: false, type: () => Date }, error: { required: false, type: () => String }, errorCode: { required: false, type: () => String }, errorDetails: { required: false, type: () => Object }, receivedAt: { required: false, type: () => Date }, cost: { required: false, type: () => Number }, currency: { required: false, type: () => String }, wamid: { required: false, type: () => String }, phoneType: { required: false, type: () => String }, phoneModel: { required: false, type: () => String }, pricing: { required: false, type: () => ({ pricing_model: { required: true, type: () => String }, category: { required: true, type: () => String }, cost: { required: true, type: () => Number }, currency: { required: true, type: () => String } }) } }) }, recipientId: { required: false, type: () => String }, senderId: { required: false, type: () => String }, referenceId: { required: false, type: () => String }, referenceType: { required: false, type: () => String }, scheduledFor: { required: false, type: () => Date }, createdById: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, isAutomated: { required: true, type: () => Boolean }, buttons: { required: false }, contextInfo: { required: false, type: () => ({ messageId: { required: false, type: () => String }, forwarded: { required: false, type: () => Boolean }, frequentlyForwarded: { required: false, type: () => Boolean }, fromGroup: { required: false, type: () => Boolean }, groupId: { required: false, type: () => String }, groupName: { required: false, type: () => String }, quotedMessageId: { required: false, type: () => String }, quotedMessageText: { required: false, type: () => String }, quotedMessageSender: { required: false, type: () => String }, mentionedContacts: { required: false, type: () => [String] } }) }, externalBusinessId: { required: false, type: () => String } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], WhatsappLog.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: WhatsappMessageType }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "messageType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "templateId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplate, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'templateId' }),
    __metadata("design:type", _whatsapp_template_entity__WEBPACK_IMPORTED_MODULE_2__.WhatsappTemplate)
], WhatsappLog.prototype, "template", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "to", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappLog.prototype, "toName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "from", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'text' }),
    __metadata("design:type", String)
], WhatsappLog.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: WhatsappMessageStatus, default: WhatsappMessageStatus.QUEUED }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "messageId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "conversationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], WhatsappLog.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], WhatsappLog.prototype, "variables", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Array)
], WhatsappLog.prototype, "components", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], WhatsappLog.prototype, "mediaData", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], WhatsappLog.prototype, "deliveryDetails", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "recipientId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "senderId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "referenceId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappLog.prototype, "referenceType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", Date)
], WhatsappLog.prototype, "scheduledFor", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], WhatsappLog.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], WhatsappLog.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], WhatsappLog.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], WhatsappLog.prototype, "isAutomated", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Array)
], WhatsappLog.prototype, "buttons", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], WhatsappLog.prototype, "contextInfo", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], WhatsappLog.prototype, "externalBusinessId", void 0);
WhatsappLog = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('whatsapp_logs')
], WhatsappLog);



/***/ }),
/* 140 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmailTemplateService: () => (/* binding */ EmailTemplateService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_email_template_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(141);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(142);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(110);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(143);
/* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(handlebars__WEBPACK_IMPORTED_MODULE_6__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};







let EmailTemplateService = class EmailTemplateService {
    constructor(emailTemplateRepository) {
        this.emailTemplateRepository = emailTemplateRepository;
        this.defaultTemplatePath = path__WEBPACK_IMPORTED_MODULE_5__.join(process.cwd(), 'src/templates/email');
        this.registerHandlebarsHelpers();
    }
    async findById(id, organizationId) {
        const template = await this.emailTemplateRepository.findOne({
            where: { id, organizationId }
        });
        if (!template) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Email template with ID "${id}" not found`);
        }
        return template;
    }
    async findByName(name, organizationId) {
        return this.emailTemplateRepository.findOne({
            where: { name, organizationId, status: _entities_email_template_entity__WEBPACK_IMPORTED_MODULE_3__.EmailTemplateStatus.ACTIVE }
        });
    }
    async findAll(options) {
        const { organizationId, status, type, category, search, page = 1, limit = 25 } = options;
        const where = { organizationId };
        if (status) {
            where.status = Array.isArray(status) ? (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.In)(status) : status;
        }
        if (type) {
            where.type = type;
        }
        if (category) {
            where.category = category;
        }
        if (search) {
            where.name = (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Like)(`%${search}%`);
        }
        const [items, total] = await this.emailTemplateRepository.findAndCount({
            where,
            order: { updatedAt: 'DESC' },
            skip: (page - 1) * limit,
            take: limit,
        });
        return {
            items,
            total,
            page,
            limit,
        };
    }
    async create(data) {
        const existingTemplate = await this.emailTemplateRepository.findOne({
            where: {
                name: data.name,
                organizationId: data.organizationId
            }
        });
        if (existingTemplate) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException(`Template with name "${data.name}" already exists`);
        }
        const template = this.emailTemplateRepository.create(data);
        return this.emailTemplateRepository.save(template);
    }
    async update(id, organizationId, data) {
        const template = await this.findById(id, organizationId);
        if (data.name && data.name !== template.name) {
            const existingTemplate = await this.emailTemplateRepository.findOne({
                where: {
                    name: data.name,
                    organizationId,
                    id: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Not)(id)
                }
            });
            if (existingTemplate) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException(`Template with name "${data.name}" already exists`);
            }
        }
        Object.assign(template, data);
        return this.emailTemplateRepository.save(template);
    }
    async delete(id, organizationId) {
        const template = await this.findById(id, organizationId);
        await this.emailTemplateRepository.softRemove(template);
    }
    async loadTemplateFromFile(filename) {
        const templatePath = path__WEBPACK_IMPORTED_MODULE_5__.join(this.defaultTemplatePath, filename);
        try {
            return fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync(templatePath, 'utf8');
        }
        catch (error) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Template file "${filename}" not found`);
        }
    }
    renderTemplate(content, variables = {}) {
        try {
            const template = handlebars__WEBPACK_IMPORTED_MODULE_6__.compile(content);
            return template(variables);
        }
        catch (error) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException(`Error rendering template: ${error.message}`);
        }
    }
    async renderTemplateById(id, organizationId, variables = {}) {
        const template = await this.findById(id, organizationId);
        const content = this.renderTemplate(template.content, variables);
        const subject = this.renderTemplate(template.subject, variables);
        const plainTextContent = template.plainTextContent
            ? this.renderTemplate(template.plainTextContent, variables)
            : undefined;
        return { subject, content, plainTextContent };
    }
    async getCategories(organizationId) {
        const result = await this.emailTemplateRepository
            .createQueryBuilder('template')
            .select('DISTINCT template.category')
            .where('template.organizationId = :organizationId', { organizationId })
            .andWhere('template.category IS NOT NULL')
            .getRawMany();
        return result.map(item => item.category).filter(Boolean);
    }
    async cloneTemplate(id, organizationId, newName) {
        const template = await this.findById(id, organizationId);
        const { id: templateId } = template, templateData = __rest(template, ["id"]);
        const name = newName || `${template.name} (Copy)`;
        return this.create(Object.assign(Object.assign({}, templateData), { name, status: _entities_email_template_entity__WEBPACK_IMPORTED_MODULE_3__.EmailTemplateStatus.DRAFT, isDefault: false, organizationId }));
    }
    registerHandlebarsHelpers() {
        handlebars__WEBPACK_IMPORTED_MODULE_6__.registerHelper('formatDate', function (date, format) {
            if (!date)
                return '';
            const d = new Date(date);
            switch (format) {
                case 'short':
                    return d.toLocaleDateString();
                case 'long':
                    return d.toLocaleDateString(undefined, {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });
                case 'time':
                    return d.toLocaleTimeString();
                case 'datetime':
                    return d.toLocaleString();
                default:
                    return d.toDateString();
            }
        });
        handlebars__WEBPACK_IMPORTED_MODULE_6__.registerHelper('ifCond', function (v1, operator, v2, options) {
            switch (operator) {
                case '==':
                    return (v1 == v2) ? options.fn(this) : options.inverse(this);
                case '===':
                    return (v1 === v2) ? options.fn(this) : options.inverse(this);
                case '!=':
                    return (v1 != v2) ? options.fn(this) : options.inverse(this);
                case '!==':
                    return (v1 !== v2) ? options.fn(this) : options.inverse(this);
                case '<':
                    return (v1 < v2) ? options.fn(this) : options.inverse(this);
                case '<=':
                    return (v1 <= v2) ? options.fn(this) : options.inverse(this);
                case '>':
                    return (v1 > v2) ? options.fn(this) : options.inverse(this);
                case '>=':
                    return (v1 >= v2) ? options.fn(this) : options.inverse(this);
                default:
                    return options.inverse(this);
            }
        });
    }
};
EmailTemplateService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_email_template_entity__WEBPACK_IMPORTED_MODULE_3__.EmailTemplate)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository])
], EmailTemplateService);



/***/ }),
/* 141 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmailTemplate: () => (/* binding */ EmailTemplate),
/* harmony export */   EmailTemplateStatus: () => (/* binding */ EmailTemplateStatus),
/* harmony export */   EmailTemplateType: () => (/* binding */ EmailTemplateType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var EmailTemplateStatus;
(function (EmailTemplateStatus) {
    EmailTemplateStatus["DRAFT"] = "draft";
    EmailTemplateStatus["ACTIVE"] = "active";
    EmailTemplateStatus["INACTIVE"] = "inactive";
    EmailTemplateStatus["ARCHIVED"] = "archived";
})(EmailTemplateStatus || (EmailTemplateStatus = {}));
var EmailTemplateType;
(function (EmailTemplateType) {
    EmailTemplateType["TRANSACTIONAL"] = "transactional";
    EmailTemplateType["MARKETING"] = "marketing";
    EmailTemplateType["NOTIFICATION"] = "notification";
    EmailTemplateType["REPORT"] = "report";
    EmailTemplateType["GENERAL"] = "general";
})(EmailTemplateType || (EmailTemplateType = {}));
let EmailTemplate = class EmailTemplate {
    processContent(variables) {
        if (!variables)
            return this.content;
        let processedContent = this.content;
        for (const [key, value] of Object.entries(variables)) {
            const regex = new RegExp(`{{\\s*${key}\\s*}}`, 'g');
            processedContent = processedContent.replace(regex, String(value !== null && value !== void 0 ? value : ''));
        }
        return processedContent;
    }
    processSubject(variables) {
        if (!variables)
            return this.subject;
        let processedSubject = this.subject;
        for (const [key, value] of Object.entries(variables)) {
            const regex = new RegExp(`{{\\s*${key}\\s*}}`, 'g');
            processedSubject = processedSubject.replace(regex, String(value !== null && value !== void 0 ? value : ''));
        }
        return processedSubject;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: false, type: () => String }, type: { required: true, enum: (__webpack_require__(141).EmailTemplateType) }, status: { required: true, enum: (__webpack_require__(141).EmailTemplateStatus) }, subject: { required: true, type: () => String }, content: { required: true, type: () => String }, plainTextContent: { required: false, type: () => String }, isDefault: { required: true, type: () => Boolean }, category: { required: false, type: () => String }, language: { required: false, type: () => String }, variables: { required: false, type: () => Object }, metadata: { required: false, type: () => Object }, previewText: { required: false, type: () => String }, fromEmail: { required: false, type: () => String }, fromName: { required: false, type: () => String }, replyToEmail: { required: false, type: () => String }, headerImageUrl: { required: false, type: () => String }, footerContent: { required: false, type: () => String }, createdById: { required: false, type: () => String }, updatedById: { required: false, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: false, type: () => Date }, lastUsedAt: { required: false, type: () => Date }, useCount: { required: true, type: () => Number } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], EmailTemplate.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], EmailTemplate.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], EmailTemplate.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: EmailTemplateType, default: EmailTemplateType.GENERAL }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'enum', enum: EmailTemplateStatus, default: EmailTemplateStatus.DRAFT }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], EmailTemplate.prototype, "subject", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text' }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'text' }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "plainTextContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], EmailTemplate.prototype, "isDefault", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "category", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "language", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], EmailTemplate.prototype, "variables", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true, type: 'jsonb' }),
    __metadata("design:type", Object)
], EmailTemplate.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "previewText", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "fromEmail", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "fromName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "replyToEmail", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "headerImageUrl", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "footerContent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], EmailTemplate.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], EmailTemplate.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], EmailTemplate.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], EmailTemplate.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], EmailTemplate.prototype, "lastUsedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: 0 }),
    __metadata("design:type", Number)
], EmailTemplate.prototype, "useCount", void 0);
EmailTemplate = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('email_templates')
], EmailTemplate);



/***/ }),
/* 142 */
/***/ ((module) => {

module.exports = require("fs");

/***/ }),
/* 143 */
/***/ ((module) => {

module.exports = require("handlebars");

/***/ }),
/* 144 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContactsModule: () => (/* binding */ ContactsModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _controllers_contacts_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(145);
/* harmony import */ var _services_contacts_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(146);
/* harmony import */ var _entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(33);
/* harmony import */ var _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(34);
/* harmony import */ var _medical_history_medical_history_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(147);
/* harmony import */ var _appointments_entities_appointment_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(35);
/* harmony import */ var _documents_entities_document_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(148);
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(118);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(14);
/* harmony import */ var _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(104);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};












let ContactsModule = class ContactsModule {
};
ContactsModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__.Contact,
                _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.ContactRelationship,
                _medical_history_medical_history_entity__WEBPACK_IMPORTED_MODULE_6__.MedicalHistory,
                _appointments_entities_appointment_entity__WEBPACK_IMPORTED_MODULE_7__.Appointment,
                _documents_entities_document_entity__WEBPACK_IMPORTED_MODULE_8__.Document
            ]),
            _auth_auth_module__WEBPACK_IMPORTED_MODULE_9__.AuthModule,
            _users_users_module__WEBPACK_IMPORTED_MODULE_10__.UsersModule,
            _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_11__.OrganizationsModule
        ],
        controllers: [_controllers_contacts_controller__WEBPACK_IMPORTED_MODULE_2__.ContactsController],
        providers: [_services_contacts_service__WEBPACK_IMPORTED_MODULE_3__.ContactsService],
        exports: [_services_contacts_service__WEBPACK_IMPORTED_MODULE_3__.ContactsService]
    })
], ContactsModule);



/***/ }),
/* 145 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContactsController: () => (/* binding */ ContactsController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74);
/* harmony import */ var _common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(106);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
/* harmony import */ var _services_contacts_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(146);
/* harmony import */ var _dto_create_contact_dto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(149);
/* harmony import */ var _dto_update_contact_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(153);
/* harmony import */ var _dto_contact_query_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(154);
/* harmony import */ var _dto_merge_contacts_dto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(155);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};












let ContactsController = class ContactsController {
    constructor(contactsService) {
        this.contactsService = contactsService;
    }
    async create(createContactDto, req) {
        var _a, _b, _c, _d;
        return this.contactsService.create(Object.assign(Object.assign({}, createContactDto), { organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })(), createdBy: (_d = (_c = req.user) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User ID is required'); })() }));
    }
    async findAll(query, req) {
        var _a, _b;
        return this.contactsService.findAll(Object.assign(Object.assign({}, query), { organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })() }));
    }
    async search(searchTerm, query, req) {
        var _a, _b;
        if (!searchTerm || searchTerm.length < 2) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Search term must be at least 2 characters long');
        }
        return this.contactsService.search(searchTerm, Object.assign(Object.assign({}, query), { organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })() }));
    }
    async findOne(id, req) {
        var _a;
        if (!((_a = req.organization) === null || _a === void 0 ? void 0 : _a.id)) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required');
        }
        const contact = await this.contactsService.findOne(id, req.organization.id);
        if (!contact) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.NotFoundException('Contact not found');
        }
        return contact;
    }
    async update(id, updateContactDto, req) {
        var _a, _b, _c, _d;
        return this.contactsService.update(id, Object.assign(Object.assign({}, updateContactDto), { organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })(), updatedBy: (_d = (_c = req.user) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User ID is required'); })() }));
    }
    async remove(id, req) {
        var _a;
        if (!((_a = req.organization) === null || _a === void 0 ? void 0 : _a.id)) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required');
        }
        await this.contactsService.remove(id, req.organization.id);
    }
    async merge(primaryId, mergeContactsDto, req) {
        var _a, _b, _c, _d;
        return this.contactsService.merge(primaryId, mergeContactsDto.secondaryContactId, {
            organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })(),
            userId: (_d = (_c = req.user) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User ID is required'); })(),
        });
    }
    async getRelationships(id, req) {
        var _a;
        if (!((_a = req.organization) === null || _a === void 0 ? void 0 : _a.id)) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required');
        }
        return this.contactsService.getRelationships(id, req.organization.id);
    }
    async addRelationship(id, relationshipDto, req) {
        var _a, _b, _c, _d;
        return this.contactsService.addRelationship(id, relationshipDto, {
            organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })(),
            userId: (_d = (_c = req.user) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User ID is required'); })(),
        });
    }
    async getMedicalHistory(id, query, req) {
        var _a, _b;
        return this.contactsService.getMedicalHistory(id, Object.assign(Object.assign({}, query), { organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })() }));
    }
    async getDocuments(id, query, req) {
        var _a, _b;
        return this.contactsService.getDocuments(id, Object.assign(Object.assign({}, query), { organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })() }));
    }
    async addDocument(id, documentDto, req) {
        var _a, _b, _c, _d;
        return this.contactsService.addDocument(id, documentDto, {
            organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })(),
            userId: (_d = (_c = req.user) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User ID is required'); })(),
        });
    }
    async getStatistics(query, req) {
        var _a, _b;
        return this.contactsService.getStatistics(Object.assign(Object.assign({}, query), { organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })() }));
    }
    async importContacts(importDto, req) {
        var _a, _b, _c, _d;
        return this.contactsService.importContacts(importDto, {
            organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })(),
            userId: (_d = (_c = req.user) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User ID is required'); })(),
        });
    }
    async exportContacts(exportDto, req) {
        var _a, _b, _c, _d;
        return this.contactsService.exportContacts(exportDto, {
            organizationId: (_b = (_a = req.organization) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization ID is required'); })(),
            userId: (_d = (_c = req.user) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (() => { throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User ID is required'); })(),
        });
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Create new contact' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Contact created successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(33).Contact) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_create_contact_dto__WEBPACK_IMPORTED_MODULE_7__.CreateContactDto, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "create", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get all contacts' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return all contacts' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_contact_query_dto__WEBPACK_IMPORTED_MODULE_9__.ContactQueryDto, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "findAll", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('search'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Search contacts' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return matching contacts' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)('q')),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_contact_query_dto__WEBPACK_IMPORTED_MODULE_9__.ContactQueryDto, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "search", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get contact by id' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return contact details' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(33).Contact) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "findOne", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update contact' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Contact updated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(33).Contact) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_contact_dto__WEBPACK_IMPORTED_MODULE_8__.UpdateContactDto, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "update", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Delete contact' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.NO_CONTENT, description: 'Contact deleted successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "remove", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/merge'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Merge contacts' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Contacts merged successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(33).Contact) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_merge_contacts_dto__WEBPACK_IMPORTED_MODULE_10__.MergeContactsDto, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "merge", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/relationships'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get contact relationships' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return contact relationships' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: [(__webpack_require__(34).ContactRelationship)] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "getRelationships", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/relationships'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Add contact relationship' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Relationship added successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(34).ContactRelationship) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "addRelationship", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/medical-history'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get medical history' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return medical history' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: [(__webpack_require__(147).MedicalHistory)] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "getMedicalHistory", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/documents'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get contact documents' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return contact documents' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: [(__webpack_require__(148).Document)] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "getDocuments", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/documents'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Add contact document' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Document added successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: [(__webpack_require__(148).Document)] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "addDocument", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('statistics/summary'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get contacts statistics' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return contacts statistics' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "getStatistics", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('import'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Import contacts' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Contacts imported successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "importContacts", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('export'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Export contacts' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Contacts exported successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], ContactsController.prototype, "exportContacts", null);
ContactsController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Contacts'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('contacts'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__.JwtAuthGuard, _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__.RolesGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    __metadata("design:paramtypes", [_services_contacts_service__WEBPACK_IMPORTED_MODULE_6__.ContactsService])
], ContactsController);



/***/ }),
/* 146 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContactsService: () => (/* binding */ ContactsService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(33);
/* harmony import */ var _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(34);
/* harmony import */ var _medical_history_medical_history_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(147);
/* harmony import */ var _appointments_entities_appointment_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(35);
/* harmony import */ var _documents_entities_document_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(148);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};









function getInverseRelationshipType(type) {
    const inverseMap = {
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.SPOUSE]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.SPOUSE,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.PARENT]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.CHILD,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.CHILD]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.PARENT,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.SIBLING]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.SIBLING,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.GUARDIAN]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.DEPENDENT,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.DEPENDENT]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.GUARDIAN,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.EMERGENCY_CONTACT]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.PRIMARY_CARE_PROVIDER]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.SPECIALIST]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.CAREGIVER]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.RELATIVE]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.RELATIVE,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.COLLEAGUE]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.COLLEAGUE,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.FRIEND]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.FRIEND,
        [_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER]: _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER,
    };
    return inverseMap[type];
}
let ContactsService = class ContactsService {
    constructor(contactRepository, relationshipRepository, medicalHistoryRepository, appointmentRepository, documentRepository, dataSource) {
        this.contactRepository = contactRepository;
        this.relationshipRepository = relationshipRepository;
        this.medicalHistoryRepository = medicalHistoryRepository;
        this.appointmentRepository = appointmentRepository;
        this.documentRepository = documentRepository;
        this.dataSource = dataSource;
    }
    async create(data) {
        const existingContact = await this.contactRepository.findOne({
            where: [
                { email: data.email, organizationId: data.organizationId },
                { phone: data.phone, organizationId: data.organizationId },
            ],
        });
        if (existingContact) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ConflictException('Contact with this email or phone number already exists');
        }
        const { documents: documentIds } = data, contactData = __rest(data, ["documents"]);
        const contact = new _entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__.Contact();
        Object.assign(contact, contactData);
        contact.createdById = data.createdBy;
        if (documentIds && Array.isArray(documentIds)) {
            const documents = await this.documentRepository.find({
                where: { id: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.In)(documentIds) }
            });
            if (documents.length > 0) {
                contact.documents = documents;
            }
        }
        const savedContact = await this.contactRepository.save(contact);
        return savedContact;
    }
    async findAll(query) {
        const _a = query, { organizationId, search, type, isActive, page = 1, limit = 10 } = _a, filters = __rest(_a, ["organizationId", "search", "type", "isActive", "page", "limit"]);
        const queryBuilder = this.contactRepository.createQueryBuilder('contact')
            .where('contact.organizationId = :organizationId', { organizationId });
        if (search) {
            queryBuilder.andWhere('(LOWER(contact.firstName) LIKE LOWER(:search) OR LOWER(contact.lastName) LIKE LOWER(:search) OR LOWER(contact.email) LIKE LOWER(:search))', { search: `%${search}%` });
        }
        if (type) {
            queryBuilder.andWhere('contact.type = :type', { type });
        }
        if (isActive !== undefined) {
            queryBuilder.andWhere('contact.isActive = :isActive', { isActive });
        }
        Object.keys(filters).forEach(key => {
            queryBuilder.andWhere(`contact.${key} = :${key}`, { [key]: filters[key] });
        });
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_3__.paginate)(queryBuilder, { page, limit });
    }
    async search(searchTerm, query) {
        const { organizationId, page = 1, limit = 10 } = query;
        const queryBuilder = this.contactRepository.createQueryBuilder('contact')
            .where('contact.organizationId = :organizationId', { organizationId })
            .andWhere('(LOWER(contact.firstName) LIKE LOWER(:search) OR LOWER(contact.lastName) LIKE LOWER(:search) OR LOWER(contact.email) LIKE LOWER(:search) OR contact.phone LIKE :search)', { search: `%${searchTerm}%` });
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_3__.paginate)(queryBuilder, { page, limit });
    }
    async findOne(id, organizationId) {
        const contact = await this.contactRepository.findOne({
            where: { id, organizationId },
            relations: ['documents', 'appointments', 'medicalHistory'],
        });
        if (!contact) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('Contact not found');
        }
        return contact;
    }
    async update(id, data) {
        const contact = await this.findOne(id, data.organizationId);
        if (data.email || data.phone) {
            const whereCondition = [];
            if (data.email) {
                whereCondition.push({ email: data.email, organizationId: data.organizationId, id: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Not)(id) });
            }
            if (data.phone) {
                whereCondition.push({ phone: data.phone, organizationId: data.organizationId, id: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Not)(id) });
            }
            const existingContact = await this.contactRepository.findOne({
                where: whereCondition,
            });
            if (existingContact) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ConflictException('Contact with this email or phone number already exists');
            }
        }
        Object.assign(contact, Object.assign(Object.assign({}, data), { updatedById: data.updatedBy }));
        return this.contactRepository.save(contact);
    }
    async remove(id, organizationId) {
        const contact = await this.findOne(id, organizationId);
        await this.contactRepository.softRemove(contact);
    }
    async merge(primaryId, secondaryId, context) {
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const [primary, secondary] = await Promise.all([
                this.findOne(primaryId, context.organizationId),
                this.findOne(secondaryId, context.organizationId),
            ]);
            if (!primary.middleName)
                primary.middleName = secondary.middleName;
            if ('alternativePhoneNumber' in primary && 'alternativePhoneNumber' in secondary) {
                if (!primary.alternativePhoneNumber)
                    primary.alternativePhoneNumber = secondary.alternativePhoneNumber;
            }
            if ('allergies' in primary && 'allergies' in secondary) {
                if (!primary.allergies)
                    primary.allergies = secondary.allergies;
                if (primary.allergies && secondary.allergies) {
                    primary.allergies = [...new Set([...primary.allergies, ...secondary.allergies])];
                }
            }
            if ('medications' in primary && 'medications' in secondary) {
                if (!primary.medications)
                    primary.medications = secondary.medications;
                if (primary.medications && secondary.medications) {
                    primary.medications = [...new Set([...primary.medications, ...secondary.medications])];
                }
            }
            if (primary.metadata && secondary.metadata) {
                primary.metadata = Object.assign(Object.assign({}, secondary.metadata), primary.metadata);
            }
            else if (secondary.metadata) {
                primary.metadata = secondary.metadata;
            }
            await queryRunner.manager
                .createQueryBuilder()
                .update(_appointments_entities_appointment_entity__WEBPACK_IMPORTED_MODULE_7__.Appointment)
                .set({ contactId: primaryId })
                .where("contactId = :secondaryId", { secondaryId })
                .execute();
            await queryRunner.manager
                .createQueryBuilder()
                .update(_documents_entities_document_entity__WEBPACK_IMPORTED_MODULE_8__.Document)
                .set({ contactId: primaryId })
                .where("contactId = :secondaryId", { secondaryId })
                .execute();
            await queryRunner.manager
                .createQueryBuilder()
                .update(_medical_history_medical_history_entity__WEBPACK_IMPORTED_MODULE_6__.MedicalHistory)
                .set({ contactId: primaryId })
                .where("contactId = :secondaryId", { secondaryId });
            primary.mergedRecords = [...(primary.mergedRecords || []), secondary];
            if ('mergedRecords' in primary) {
                primary.mergedRecords = [...(primary.mergedRecords || []), secondary];
            }
            secondary.status = 'INACTIVE';
            await queryRunner.manager.save(_entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__.Contact, primary);
            await queryRunner.manager.save(_entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__.Contact, secondary);
            await queryRunner.commitTransaction();
            return primary;
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async getRelationships(id, organizationId, includeInactive = false) {
        const queryBuilder = this.relationshipRepository.createQueryBuilder('relationship')
            .leftJoinAndSelect('relationship.relatedContact', 'relatedContact')
            .where('relationship.contactId = :id', { id })
            .andWhere('relationship.organizationId = :organizationId', { organizationId });
        if (!includeInactive) {
            queryBuilder.andWhere('relationship.isActive = true');
        }
        return queryBuilder.getMany();
    }
    async createRelationship(contactId, relationshipDto, context) {
        var _a, _b, _c, _d, _e, _f;
        const [contact, relatedContact] = await Promise.all([
            this.findOne(contactId, context.organizationId),
            this.findOne(relationshipDto.relatedContactId, context.organizationId),
        ]);
        const existingRelationship = await this.relationshipRepository.findOne({
            where: {
                contactId,
                relatedContactId: relationshipDto.relatedContactId,
                organizationId: context.organizationId,
            },
        });
        if (existingRelationship) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Relationship already exists between these contacts');
        }
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const inverseType = relationshipDto.inverseType || getInverseRelationshipType(relationshipDto.type);
            const relationship = new _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.ContactRelationship();
            relationship.contactId = contactId;
            relationship.relatedContactId = relationshipDto.relatedContactId;
            relationship.type = relationshipDto.type;
            relationship.inverseType = inverseType !== null && inverseType !== void 0 ? inverseType : _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER;
            relationship.notes = (_a = relationshipDto.notes) !== null && _a !== void 0 ? _a : '';
            relationship.isPrimary = relationshipDto.isPrimary || false;
            relationship.startDate = (_b = relationshipDto.startDate) !== null && _b !== void 0 ? _b : new Date();
            if (relationshipDto.endDate) {
                relationship.endDate = relationshipDto.endDate;
            }
            relationship.metadata = (_c = relationshipDto.metadata) !== null && _c !== void 0 ? _c : {};
            relationship.organizationId = context.organizationId;
            relationship.createdById = context.userId;
            const savedRelationship = await queryRunner.manager.save(relationship);
            if (inverseType && inverseType !== _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER) {
                const inverseRelationship = new _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.ContactRelationship();
                inverseRelationship.contactId = relationshipDto.relatedContactId;
                inverseRelationship.relatedContactId = contactId;
                inverseRelationship.type = inverseType;
                inverseRelationship.inverseType = relationshipDto.type;
                inverseRelationship.notes = (_d = relationshipDto.notes) !== null && _d !== void 0 ? _d : '';
                inverseRelationship.isPrimary = relationshipDto.isPrimary || false;
                inverseRelationship.startDate = (_e = relationshipDto.startDate) !== null && _e !== void 0 ? _e : new Date();
                if (relationshipDto.endDate !== undefined) {
                    inverseRelationship.endDate = relationshipDto.endDate;
                }
                inverseRelationship.metadata = (_f = relationshipDto.metadata) !== null && _f !== void 0 ? _f : {};
                inverseRelationship.organizationId = context.organizationId;
                inverseRelationship.createdById = context.userId;
                await queryRunner.manager.save(inverseRelationship);
            }
            await queryRunner.commitTransaction();
            return savedRelationship;
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async updateRelationship(id, updateDto, context) {
        var _a;
        const relationship = await this.relationshipRepository.findOne({
            where: { id, organizationId: context.organizationId },
            relations: ['contact', 'relatedContact'],
        });
        if (!relationship) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('Relationship not found');
        }
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            if (updateDto.type !== undefined) {
                relationship.type = updateDto.type;
            }
            if (updateDto.inverseType !== undefined) {
                relationship.inverseType = updateDto.inverseType;
            }
            else if (updateDto.type !== undefined) {
                relationship.inverseType = (_a = getInverseRelationshipType(updateDto.type)) !== null && _a !== void 0 ? _a : _entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.RelationshipType.OTHER;
            }
            if (updateDto.notes !== undefined) {
                relationship.notes = updateDto.notes;
            }
            if (updateDto.isPrimary !== undefined) {
                relationship.isPrimary = updateDto.isPrimary;
            }
            if (updateDto.isActive !== undefined) {
                relationship.isActive = updateDto.isActive;
            }
            if (updateDto.startDate !== undefined) {
                relationship.startDate = updateDto.startDate;
            }
            if (updateDto.endDate !== undefined) {
                relationship.endDate = updateDto.endDate;
            }
            if (updateDto.metadata !== undefined) {
                relationship.metadata = updateDto.metadata;
            }
            relationship.updatedById = context.userId;
            const savedRelationship = await queryRunner.manager.save(relationship);
            const inverseRelationship = await this.relationshipRepository.findOne({
                where: {
                    contactId: relationship.relatedContactId,
                    relatedContactId: relationship.contactId,
                    organizationId: context.organizationId,
                },
            });
            if (inverseRelationship) {
                if (relationship.inverseType !== undefined) {
                    inverseRelationship.type = relationship.inverseType;
                }
                if (relationship.type !== undefined) {
                    inverseRelationship.inverseType = relationship.type;
                }
                if (updateDto.notes !== undefined) {
                    inverseRelationship.notes = updateDto.notes;
                }
                if (updateDto.isPrimary !== undefined) {
                    inverseRelationship.isPrimary = updateDto.isPrimary;
                }
                if (updateDto.isActive !== undefined) {
                    inverseRelationship.isActive = updateDto.isActive;
                }
                if (updateDto.startDate !== undefined) {
                    inverseRelationship.startDate = updateDto.startDate;
                }
                if (updateDto.endDate !== undefined) {
                    inverseRelationship.endDate = updateDto.endDate;
                }
                if (updateDto.metadata !== undefined) {
                    inverseRelationship.metadata = updateDto.metadata;
                }
                inverseRelationship.updatedById = context.userId;
                await queryRunner.manager.save(inverseRelationship);
            }
            await queryRunner.commitTransaction();
            return savedRelationship;
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async deleteRelationship(id, context) {
        const relationship = await this.relationshipRepository.findOne({
            where: { id, organizationId: context.organizationId },
        });
        if (!relationship) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('Relationship not found');
        }
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const inverseRelationship = await this.relationshipRepository.findOne({
                where: {
                    contactId: relationship.relatedContactId,
                    relatedContactId: relationship.contactId,
                    organizationId: context.organizationId,
                },
            });
            await queryRunner.manager.softRemove(relationship);
            if (inverseRelationship) {
                await queryRunner.manager.softRemove(inverseRelationship);
            }
            await queryRunner.commitTransaction();
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async getContactsByRelationshipType(contactId, type, query) {
        const relationships = await this.relationshipRepository.find({
            where: {
                contactId,
                type,
                organizationId: query.organizationId,
                isActive: true,
            },
            relations: ['relatedContact'],
        });
        return relationships.map(rel => ({
            relationshipId: rel.id,
            relationshipType: rel.type,
            contact: {
                id: rel.relatedContact.id,
                firstName: rel.relatedContact.firstName,
                lastName: rel.relatedContact.lastName,
                email: rel.relatedContact.email,
                phone: rel.relatedContact.phone,
            },
            notes: rel.notes,
            isPrimary: rel.isPrimary,
            startDate: rel.startDate,
            endDate: rel.endDate,
        }));
    }
    async addRelationship(id, relationshipDto, context) {
        return this.createRelationship(id, relationshipDto, context);
    }
    async getMedicalHistory(id, query) {
        return this.medicalHistoryRepository.find({
            where: {
                contactId: id,
                organizationId: query.organizationId
            },
            order: { date: 'DESC' },
        });
    }
    async getDocuments(id, query) {
        return this.documentRepository.find({
            where: {
                contactId: id,
                organizationId: query.organizationId
            },
            order: { createdAt: 'DESC' },
        });
    }
    async addDocument(id, documentDto, context) {
        await this.findOne(id, context.organizationId);
        const document = this.documentRepository.create(Object.assign(Object.assign({}, documentDto), { contactId: id, organizationId: context.organizationId, createdById: context.userId }));
        return this.documentRepository.save(document);
    }
    async getStatistics(query) {
        const stats = await this.contactRepository
            .createQueryBuilder('contact')
            .where('contact.organizationId = :organizationId', { organizationId: query.organizationId })
            .select([
            'COUNT(*) as total',
            'COUNT(CASE WHEN contact.type = \'PATIENT\' THEN 1 END) as patients',
            'COUNT(CASE WHEN contact.status = \'ACTIVE\' THEN 1 END) as active',
            'COUNT(CASE WHEN contact.createdAt >= NOW() - INTERVAL \'30 days\' THEN 1 END) as newLast30Days',
        ])
            .getRawOne();
        return stats;
    }
    async importContacts(importDto, context) {
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const contacts = importDto.contacts.map((contactData) => (Object.assign(Object.assign({}, contactData), { organizationId: context.organizationId, createdById: context.userId })));
            const savedContacts = await queryRunner.manager.save(_entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__.Contact, contacts);
            await queryRunner.commitTransaction();
            return {
                imported: savedContacts.length,
                contacts: savedContacts,
            };
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async exportContacts(exportDto, context) {
        const queryBuilder = this.contactRepository.createQueryBuilder('contact')
            .where('contact.organizationId = :organizationId', { organizationId: context.organizationId });
        if (exportDto.filters) {
        }
        const contacts = await queryBuilder.getMany();
        const exportData = contacts.map(contact => ({
            id: contact.id,
            firstName: contact.firstName,
            lastName: contact.lastName,
            email: contact.email,
            phone: contact.phone,
            type: contact.type,
        }));
        return {
            exported: exportData.length,
            data: exportData,
        };
    }
};
ContactsService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_contact_entity__WEBPACK_IMPORTED_MODULE_4__.Contact)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_contact_relationship_entity__WEBPACK_IMPORTED_MODULE_5__.ContactRelationship)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_medical_history_medical_history_entity__WEBPACK_IMPORTED_MODULE_6__.MedicalHistory)),
    __param(3, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_appointments_entities_appointment_entity__WEBPACK_IMPORTED_MODULE_7__.Appointment)),
    __param(4, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_documents_entities_document_entity__WEBPACK_IMPORTED_MODULE_8__.Document)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.DataSource])
], ContactsService);



/***/ }),
/* 147 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EncounterType: () => (/* binding */ EncounterType),
/* harmony export */   HealthcareProviderType: () => (/* binding */ HealthcareProviderType),
/* harmony export */   MedicalHistory: () => (/* binding */ MedicalHistory)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var EncounterType;
(function (EncounterType) {
    EncounterType["CONSULTATION"] = "CONSULTATION";
    EncounterType["CHECKUP"] = "CHECKUP";
    EncounterType["PROCEDURE"] = "PROCEDURE";
    EncounterType["TREATMENT"] = "TREATMENT";
    EncounterType["FOLLOW_UP"] = "FOLLOW_UP";
    EncounterType["EMERGENCY"] = "EMERGENCY";
    EncounterType["LABORATORY"] = "LABORATORY";
    EncounterType["IMAGING"] = "IMAGING";
    EncounterType["TELEMEDICINE"] = "TELEMEDICINE";
    EncounterType["OTHER"] = "OTHER";
})(EncounterType || (EncounterType = {}));
var HealthcareProviderType;
(function (HealthcareProviderType) {
    HealthcareProviderType["PRIMARY_CARE"] = "PRIMARY_CARE";
    HealthcareProviderType["SPECIALIST"] = "SPECIALIST";
    HealthcareProviderType["DENTIST"] = "DENTIST";
    HealthcareProviderType["NURSE"] = "NURSE";
    HealthcareProviderType["THERAPIST"] = "THERAPIST";
    HealthcareProviderType["PHARMACIST"] = "PHARMACIST";
    HealthcareProviderType["OTHER"] = "OTHER";
})(HealthcareProviderType || (HealthcareProviderType = {}));
let MedicalHistory = class MedicalHistory {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, contactId: { required: true, type: () => String }, contact: { required: true, type: () => (__webpack_require__(33).Contact) }, encounterType: { required: true, enum: (__webpack_require__(147).EncounterType) }, date: { required: true, type: () => Date }, description: { required: true, type: () => String }, diagnosis: { required: true, type: () => String }, treatment: { required: true, type: () => String }, medications: { required: true, type: () => String }, symptoms: { required: true, type: () => String }, vitalSigns: { required: true, type: () => ({ bloodPressure: { required: false, type: () => String }, temperature: { required: false, type: () => Number }, heartRate: { required: false, type: () => Number }, respiratoryRate: { required: false, type: () => Number }, oxygenSaturation: { required: false, type: () => Number }, height: { required: false, type: () => Number }, weight: { required: false, type: () => Number }, bmi: { required: false, type: () => Number } }) }, notes: { required: true, type: () => String }, referrals: { required: true }, attachments: { required: true }, labResults: { required: true }, isFlagged: { required: true, type: () => Boolean }, flaggedReason: { required: true, type: () => String }, requiresFollowUp: { required: true, type: () => Boolean }, followUpDate: { required: true, type: () => Date }, providerName: { required: true, type: () => String }, providerType: { required: true, enum: (__webpack_require__(147).HealthcareProviderType) }, facilityName: { required: true, type: () => String }, facilityLocation: { required: true, type: () => String }, isInsuranceClaim: { required: true, type: () => Boolean }, insuranceClaimNumber: { required: true, type: () => String }, costAmount: { required: true, type: () => Number }, costCurrency: { required: true, type: () => String }, customFields: { required: true, type: () => Object }, createdById: { required: true, type: () => String }, updatedById: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], MedicalHistory.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], MedicalHistory.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], MedicalHistory.prototype, "contactId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_2__.Contact, contact => contact.medicalHistory, { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'contactId' }),
    __metadata("design:type", _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_2__.Contact)
], MedicalHistory.prototype, "contact", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: EncounterType,
        default: EncounterType.CONSULTATION,
    }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "encounterType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'date' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Date)
], MedicalHistory.prototype, "date", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text' }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "diagnosis", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "treatment", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "medications", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "symptoms", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], MedicalHistory.prototype, "vitalSigns", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "notes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Array)
], MedicalHistory.prototype, "referrals", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Array)
], MedicalHistory.prototype, "attachments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Array)
], MedicalHistory.prototype, "labResults", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], MedicalHistory.prototype, "isFlagged", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "flaggedReason", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], MedicalHistory.prototype, "requiresFollowUp", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'date', nullable: true }),
    __metadata("design:type", Date)
], MedicalHistory.prototype, "followUpDate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'varchar', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "providerName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: HealthcareProviderType,
        nullable: true,
    }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "providerType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'varchar', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "facilityName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'varchar', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "facilityLocation", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], MedicalHistory.prototype, "isInsuranceClaim", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'varchar', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "insuranceClaimNumber", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'decimal', precision: 10, scale: 2, nullable: true }),
    __metadata("design:type", Number)
], MedicalHistory.prototype, "costAmount", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'varchar', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "costCurrency", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], MedicalHistory.prototype, "customFields", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], MedicalHistory.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", Date)
], MedicalHistory.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", Date)
], MedicalHistory.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)({ type: 'timestamptz', nullable: true }),
    __metadata("design:type", Date)
], MedicalHistory.prototype, "deletedAt", void 0);
MedicalHistory = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('medical_histories'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'contact'])
], MedicalHistory);



/***/ }),
/* 148 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Document: () => (/* binding */ Document),
/* harmony export */   DocumentStatus: () => (/* binding */ DocumentStatus),
/* harmony export */   DocumentType: () => (/* binding */ DocumentType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var DocumentType;
(function (DocumentType) {
    DocumentType["MEDICAL_RECORD"] = "MEDICAL_RECORD";
    DocumentType["LAB_RESULT"] = "LAB_RESULT";
    DocumentType["PRESCRIPTION"] = "PRESCRIPTION";
    DocumentType["IMAGING"] = "IMAGING";
    DocumentType["INSURANCE"] = "INSURANCE";
    DocumentType["CONSENT_FORM"] = "CONSENT_FORM";
    DocumentType["IDENTIFICATION"] = "IDENTIFICATION";
    DocumentType["INVOICE"] = "INVOICE";
    DocumentType["RECEIPT"] = "RECEIPT";
    DocumentType["CORRESPONDENCE"] = "CORRESPONDENCE";
    DocumentType["REFERRAL"] = "REFERRAL";
    DocumentType["OTHER"] = "OTHER";
})(DocumentType || (DocumentType = {}));
var DocumentStatus;
(function (DocumentStatus) {
    DocumentStatus["DRAFT"] = "DRAFT";
    DocumentStatus["PENDING_REVIEW"] = "PENDING_REVIEW";
    DocumentStatus["APPROVED"] = "APPROVED";
    DocumentStatus["REJECTED"] = "REJECTED";
    DocumentStatus["EXPIRED"] = "EXPIRED";
    DocumentStatus["ARCHIVED"] = "ARCHIVED";
})(DocumentStatus || (DocumentStatus = {}));
let Document = class Document {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, contactId: { required: true, type: () => String }, contact: { required: true, type: () => (__webpack_require__(33).Contact) }, name: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(148).DocumentType) }, fileName: { required: true, type: () => String }, fileType: { required: true, type: () => String }, fileSize: { required: true, type: () => Number }, filePath: { required: true, type: () => String }, fileUrl: { required: true, type: () => String }, description: { required: true, type: () => String }, status: { required: true, enum: (__webpack_require__(148).DocumentStatus) }, isPrivate: { required: true, type: () => Boolean }, documentDate: { required: true, type: () => Date }, expiryDate: { required: true, type: () => Date }, metadata: { required: true, type: () => ({ author: { required: false, type: () => String }, source: { required: false, type: () => String }, keywords: { required: false, type: () => [String] }, version: { required: false, type: () => String }, pageCount: { required: false, type: () => Number }, isOriginal: { required: false, type: () => Boolean }, relatedDocuments: { required: false, type: () => [String] }, customProperties: { required: false, type: () => Object } }) }, notes: { required: true, type: () => String }, tags: { required: true, type: () => [String] }, shareWith: { required: true, type: () => [String] }, appointmentId: { required: true, type: () => String }, medicalHistoryId: { required: true, type: () => String }, contentText: { required: true, type: () => String }, createdById: { required: true, type: () => String }, updatedById: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], Document.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Document.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Document.prototype, "contactId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_2__.Contact, contact => contact.documents, { onDelete: 'SET NULL' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'contactId' }),
    __metadata("design:type", _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_2__.Contact)
], Document.prototype, "contact", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 255 }),
    __metadata("design:type", String)
], Document.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: DocumentType,
        default: DocumentType.OTHER,
    }),
    __metadata("design:type", String)
], Document.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 255 }),
    __metadata("design:type", String)
], Document.prototype, "fileName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 255 }),
    __metadata("design:type", String)
], Document.prototype, "fileType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'bigint' }),
    __metadata("design:type", Number)
], Document.prototype, "fileSize", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 1024 }),
    __metadata("design:type", String)
], Document.prototype, "filePath", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ length: 1024, nullable: true }),
    __metadata("design:type", String)
], Document.prototype, "fileUrl", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Document.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: DocumentStatus,
        default: DocumentStatus.APPROVED,
    }),
    __metadata("design:type", String)
], Document.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'boolean', default: false }),
    __metadata("design:type", Boolean)
], Document.prototype, "isPrivate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'date', nullable: true }),
    __metadata("design:type", Date)
], Document.prototype, "documentDate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'date', nullable: true }),
    __metadata("design:type", Date)
], Document.prototype, "expiryDate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], Document.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Document.prototype, "notes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Array)
], Document.prototype, "tags", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Array)
], Document.prototype, "shareWith", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], Document.prototype, "appointmentId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    __metadata("design:type", String)
], Document.prototype, "medicalHistoryId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], Document.prototype, "contentText", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Document.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'uuid', nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], Document.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", Date)
], Document.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)({ type: 'timestamptz' }),
    __metadata("design:type", Date)
], Document.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)({ type: 'timestamptz', nullable: true }),
    __metadata("design:type", Date)
], Document.prototype, "deletedAt", void 0);
Document = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('documents'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['organizationId', 'contact'])
], Document);



/***/ }),
/* 149 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CommunicationPrefsDto: () => (/* binding */ CommunicationPrefsDto),
/* harmony export */   ContactAddressDto: () => (/* binding */ ContactAddressDto),
/* harmony export */   CreateContactDto: () => (/* binding */ CreateContactDto),
/* harmony export */   CreateContactResponseDto: () => (/* binding */ CreateContactResponseDto),
/* harmony export */   EmergencyContactDto: () => (/* binding */ EmergencyContactDto),
/* harmony export */   InsuranceInfoDto: () => (/* binding */ InsuranceInfoDto),
/* harmony export */   MedicalInfoDto: () => (/* binding */ MedicalInfoDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(150);
/* harmony import */ var _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(151);
/* harmony import */ var _enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(152);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







class ContactAddressDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { street: { required: true, type: () => String, maxLength: 100 }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, createdBy: { required: false }, street2: { required: false, type: () => String, maxLength: 100 }, city: { required: true, type: () => String, maxLength: 50 }, state: { required: true, type: () => String, maxLength: 50 }, postalCode: { required: true, type: () => String, maxLength: 20 }, country: { required: true, type: () => String, maxLength: 50 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], ContactAddressDto.prototype, "street", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], ContactAddressDto.prototype, "street2", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], ContactAddressDto.prototype, "city", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], ContactAddressDto.prototype, "state", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(20),
    __metadata("design:type", String)
], ContactAddressDto.prototype, "postalCode", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], ContactAddressDto.prototype, "country", void 0);
class EmergencyContactDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String, minLength: 2, maxLength: 50 }, relationship: { required: true, type: () => String, maxLength: 50 }, phone: { required: true, type: () => String }, email: { required: false, type: () => String, format: "email" } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "relationship", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], EmergencyContactDto.prototype, "email", void 0);
class MedicalInfoDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { bloodGroup: { required: false, enum: (__webpack_require__(152).BloodGroup) }, allergies: { required: false, type: () => [String] }, medications: { required: false, type: () => [String] }, conditions: { required: false, type: () => [String] }, surgicalHistory: { required: false, type: () => String, maxLength: 1000 }, familyHistory: { required: false, type: () => String, maxLength: 1000 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__.BloodGroup }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__.BloodGroup),
    __metadata("design:type", String)
], MedicalInfoDto.prototype, "bloodGroup", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], MedicalInfoDto.prototype, "allergies", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], MedicalInfoDto.prototype, "medications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], MedicalInfoDto.prototype, "conditions", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(1000),
    __metadata("design:type", String)
], MedicalInfoDto.prototype, "surgicalHistory", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(1000),
    __metadata("design:type", String)
], MedicalInfoDto.prototype, "familyHistory", void 0);
class InsuranceInfoDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { provider: { required: true, type: () => String }, policyNumber: { required: true, type: () => String }, groupNumber: { required: false, type: () => String }, validFrom: { required: true, type: () => Date }, validTo: { required: true, type: () => Date } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], InsuranceInfoDto.prototype, "provider", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], InsuranceInfoDto.prototype, "policyNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], InsuranceInfoDto.prototype, "groupNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], InsuranceInfoDto.prototype, "validFrom", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], InsuranceInfoDto.prototype, "validTo", void 0);
class CommunicationPrefsDto {
    constructor() {
        this.allowEmail = true;
        this.allowSMS = true;
        this.allowWhatsApp = true;
        this.allowPush = true;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { allowEmail: { required: true, type: () => Boolean, default: true }, allowSMS: { required: true, type: () => Boolean, default: true }, allowWhatsApp: { required: true, type: () => Boolean, default: true }, allowPush: { required: true, type: () => Boolean, default: true }, preferredLanguage: { required: false, type: () => String }, preferredContactTime: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CommunicationPrefsDto.prototype, "allowEmail", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CommunicationPrefsDto.prototype, "allowSMS", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CommunicationPrefsDto.prototype, "allowWhatsApp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], CommunicationPrefsDto.prototype, "allowPush", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], CommunicationPrefsDto.prototype, "preferredLanguage", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], CommunicationPrefsDto.prototype, "preferredContactTime", void 0);
class CreateContactDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { firstName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, lastName: { required: true, type: () => String, minLength: 2, maxLength: 50 }, email: { required: true, type: () => String, format: "email" }, phone: { required: true, type: () => String }, whatsapp: { required: false, type: () => String }, dateOfBirth: { required: true, type: () => Date }, gender: { required: true, enum: (__webpack_require__(150).Gender) }, maritalStatus: { required: false, enum: (__webpack_require__(151).MaritalStatus) }, address: { required: true, type: () => (__webpack_require__(149).ContactAddressDto) }, emergencyContact: { required: true, type: () => (__webpack_require__(149).EmergencyContactDto) }, medicalInfo: { required: false, type: () => (__webpack_require__(149).MedicalInfoDto) }, insuranceInfo: { required: false, type: () => (__webpack_require__(149).InsuranceInfoDto) }, communicationPrefs: { required: true, type: () => (__webpack_require__(149).CommunicationPrefsDto) }, notes: { required: false, type: () => String, maxLength: 500 }, documents: { required: false, type: () => [String], format: "uri" }, tags: { required: false, type: () => [String] }, groups: { required: false, type: () => [String] } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'First name of the contact',
        example: 'John',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateContactDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Last name of the contact',
        example: 'Doe',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], CreateContactDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Email address',
        example: 'john.doe@example.com',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], CreateContactDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Phone number',
        example: '+1234567890',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], CreateContactDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'WhatsApp number',
        example: '+1234567890',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], CreateContactDto.prototype, "whatsapp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Date of birth',
        example: '1990-01-01',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], CreateContactDto.prototype, "dateOfBirth", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Gender',
        enum: _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender),
    __metadata("design:type", String)
], CreateContactDto.prototype, "gender", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Marital status',
        enum: _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus),
    __metadata("design:type", String)
], CreateContactDto.prototype, "maritalStatus", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Contact address',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => ContactAddressDto),
    __metadata("design:type", ContactAddressDto)
], CreateContactDto.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Emergency contact information',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => EmergencyContactDto),
    __metadata("design:type", EmergencyContactDto)
], CreateContactDto.prototype, "emergencyContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Medical information',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => MedicalInfoDto),
    __metadata("design:type", MedicalInfoDto)
], CreateContactDto.prototype, "medicalInfo", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Insurance information',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => InsuranceInfoDto),
    __metadata("design:type", InsuranceInfoDto)
], CreateContactDto.prototype, "insuranceInfo", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Communication preferences',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => CommunicationPrefsDto),
    __metadata("design:type", CommunicationPrefsDto)
], CreateContactDto.prototype, "communicationPrefs", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Additional notes',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(500),
    __metadata("design:type", String)
], CreateContactDto.prototype, "notes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Document URLs',
        type: [String],
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUrl)({}, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    __metadata("design:type", Array)
], CreateContactDto.prototype, "documents", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Contact tags',
        type: [String],
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateContactDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Contact group IDs',
        type: [String],
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], CreateContactDto.prototype, "groups", void 0);
class CreateContactResponseDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, createdBy: { required: true, type: () => String } };
    }
}


/***/ }),
/* 150 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Gender: () => (/* binding */ Gender)
/* harmony export */ });
var Gender;
(function (Gender) {
    Gender["MALE"] = "MALE";
    Gender["FEMALE"] = "FEMALE";
    Gender["OTHER"] = "OTHER";
    Gender["PREFER_NOT_TO_SAY"] = "PREFER_NOT_TO_SAY";
})(Gender || (Gender = {}));


/***/ }),
/* 151 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MaritalStatus: () => (/* binding */ MaritalStatus)
/* harmony export */ });
var MaritalStatus;
(function (MaritalStatus) {
    MaritalStatus["SINGLE"] = "SINGLE";
    MaritalStatus["MARRIED"] = "MARRIED";
    MaritalStatus["DIVORCED"] = "DIVORCED";
    MaritalStatus["WIDOWED"] = "WIDOWED";
    MaritalStatus["SEPARATED"] = "SEPARATED";
    MaritalStatus["DOMESTIC_PARTNERSHIP"] = "DOMESTIC_PARTNERSHIP";
    MaritalStatus["OTHER"] = "OTHER";
})(MaritalStatus || (MaritalStatus = {}));


/***/ }),
/* 152 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BloodGroup: () => (/* binding */ BloodGroup)
/* harmony export */ });
var BloodGroup;
(function (BloodGroup) {
    BloodGroup["A_POSITIVE"] = "A+";
    BloodGroup["A_NEGATIVE"] = "A-";
    BloodGroup["B_POSITIVE"] = "B+";
    BloodGroup["B_NEGATIVE"] = "B-";
    BloodGroup["AB_POSITIVE"] = "AB+";
    BloodGroup["AB_NEGATIVE"] = "AB-";
    BloodGroup["O_POSITIVE"] = "O+";
    BloodGroup["O_NEGATIVE"] = "O-";
    BloodGroup["UNKNOWN"] = "UNKNOWN";
})(BloodGroup || (BloodGroup = {}));


/***/ }),
/* 153 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateCommunicationPrefsDto: () => (/* binding */ UpdateCommunicationPrefsDto),
/* harmony export */   UpdateContactAddressDto: () => (/* binding */ UpdateContactAddressDto),
/* harmony export */   UpdateContactDto: () => (/* binding */ UpdateContactDto),
/* harmony export */   UpdateContactResponseDto: () => (/* binding */ UpdateContactResponseDto),
/* harmony export */   UpdateEmergencyContactDto: () => (/* binding */ UpdateEmergencyContactDto),
/* harmony export */   UpdateInsuranceInfoDto: () => (/* binding */ UpdateInsuranceInfoDto),
/* harmony export */   UpdateMedicalInfoDto: () => (/* binding */ UpdateMedicalInfoDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(150);
/* harmony import */ var _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(151);
/* harmony import */ var _enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(152);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







class UpdateContactAddressDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { street: { required: true, type: () => String, maxLength: 100 }, street2: { required: false, type: () => String, maxLength: 100 }, city: { required: true, type: () => String, maxLength: 50 }, state: { required: true, type: () => String, maxLength: 50 }, postalCode: { required: true, type: () => String, maxLength: 20 }, country: { required: true, type: () => String, maxLength: 50 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UpdateContactAddressDto.prototype, "street", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(100),
    __metadata("design:type", String)
], UpdateContactAddressDto.prototype, "street2", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], UpdateContactAddressDto.prototype, "city", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], UpdateContactAddressDto.prototype, "state", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(20),
    __metadata("design:type", String)
], UpdateContactAddressDto.prototype, "postalCode", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], UpdateContactAddressDto.prototype, "country", void 0);
class UpdateEmergencyContactDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String, minLength: 2, maxLength: 50 }, relationship: { required: true, type: () => String, maxLength: 50 }, phone: { required: true, type: () => String }, email: { required: false, type: () => String, format: "email" } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], UpdateEmergencyContactDto.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], UpdateEmergencyContactDto.prototype, "relationship", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], UpdateEmergencyContactDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], UpdateEmergencyContactDto.prototype, "email", void 0);
class UpdateMedicalInfoDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { bloodGroup: { required: false, enum: (__webpack_require__(152).BloodGroup) }, allergies: { required: false, type: () => [String] }, medications: { required: false, type: () => [String] }, conditions: { required: false, type: () => [String] }, surgicalHistory: { required: false, type: () => String, maxLength: 1000 }, familyHistory: { required: false, type: () => String, maxLength: 1000 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__.BloodGroup }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__.BloodGroup),
    __metadata("design:type", String)
], UpdateMedicalInfoDto.prototype, "bloodGroup", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], UpdateMedicalInfoDto.prototype, "allergies", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], UpdateMedicalInfoDto.prototype, "medications", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], UpdateMedicalInfoDto.prototype, "conditions", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(1000),
    __metadata("design:type", String)
], UpdateMedicalInfoDto.prototype, "surgicalHistory", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(1000),
    __metadata("design:type", String)
], UpdateMedicalInfoDto.prototype, "familyHistory", void 0);
class UpdateInsuranceInfoDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { provider: { required: true, type: () => String }, policyNumber: { required: true, type: () => String }, groupNumber: { required: false, type: () => String }, validFrom: { required: false, type: () => Date }, validTo: { required: false, type: () => Date } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateInsuranceInfoDto.prototype, "provider", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateInsuranceInfoDto.prototype, "policyNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateInsuranceInfoDto.prototype, "groupNumber", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], UpdateInsuranceInfoDto.prototype, "validFrom", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], UpdateInsuranceInfoDto.prototype, "validTo", void 0);
class UpdateCommunicationPrefsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { allowEmail: { required: false, type: () => Boolean }, allowSMS: { required: false, type: () => Boolean }, allowWhatsApp: { required: false, type: () => Boolean }, allowPush: { required: false, type: () => Boolean }, preferredLanguage: { required: false, type: () => String }, preferredContactTime: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateCommunicationPrefsDto.prototype, "allowEmail", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateCommunicationPrefsDto.prototype, "allowSMS", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateCommunicationPrefsDto.prototype, "allowWhatsApp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateCommunicationPrefsDto.prototype, "allowPush", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateCommunicationPrefsDto.prototype, "preferredLanguage", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateCommunicationPrefsDto.prototype, "preferredContactTime", void 0);
class UpdateContactDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { firstName: { required: false, type: () => String, minLength: 2, maxLength: 50 }, lastName: { required: false, type: () => String, minLength: 2, maxLength: 50 }, email: { required: false, type: () => String, format: "email" }, phone: { required: false, type: () => String }, whatsapp: { required: false, type: () => String }, dateOfBirth: { required: false, type: () => Date }, gender: { required: false, enum: (__webpack_require__(150).Gender) }, maritalStatus: { required: false, enum: (__webpack_require__(151).MaritalStatus) }, address: { required: false, type: () => (__webpack_require__(153).UpdateContactAddressDto) }, emergencyContact: { required: false, type: () => (__webpack_require__(153).UpdateEmergencyContactDto) }, medicalInfo: { required: false, type: () => (__webpack_require__(153).UpdateMedicalInfoDto) }, insuranceInfo: { required: false, type: () => (__webpack_require__(153).UpdateInsuranceInfoDto) }, communicationPrefs: { required: false, type: () => (__webpack_require__(153).UpdateCommunicationPrefsDto) }, notes: { required: false, type: () => String, maxLength: 500 }, documents: { required: false, type: () => [String], format: "uri" }, tags: { required: false, type: () => [String] }, groups: { required: false, type: () => [String] }, isActive: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "whatsapp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], UpdateContactDto.prototype, "dateOfBirth", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "gender", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "maritalStatus", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => UpdateContactAddressDto),
    __metadata("design:type", UpdateContactAddressDto)
], UpdateContactDto.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => UpdateEmergencyContactDto),
    __metadata("design:type", UpdateEmergencyContactDto)
], UpdateContactDto.prototype, "emergencyContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => UpdateMedicalInfoDto),
    __metadata("design:type", UpdateMedicalInfoDto)
], UpdateContactDto.prototype, "medicalInfo", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => UpdateInsuranceInfoDto),
    __metadata("design:type", UpdateInsuranceInfoDto)
], UpdateContactDto.prototype, "insuranceInfo", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => UpdateCommunicationPrefsDto),
    __metadata("design:type", UpdateCommunicationPrefsDto)
], UpdateContactDto.prototype, "communicationPrefs", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(500),
    __metadata("design:type", String)
], UpdateContactDto.prototype, "notes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUrl)({}, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    __metadata("design:type", Array)
], UpdateContactDto.prototype, "documents", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], UpdateContactDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    __metadata("design:type", Array)
], UpdateContactDto.prototype, "groups", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateContactDto.prototype, "isActive", void 0);
class UpdateContactResponseDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, updatedAt: { required: true, type: () => Date }, updatedBy: { required: true, type: () => String } };
    }
}


/***/ }),
/* 154 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContactQueryDto: () => (/* binding */ ContactQueryDto),
/* harmony export */   ContactType: () => (/* binding */ ContactType),
/* harmony export */   DateRangeDto: () => (/* binding */ DateRangeDto),
/* harmony export */   SortField: () => (/* binding */ SortField),
/* harmony export */   SortOrder: () => (/* binding */ SortOrder)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(150);
/* harmony import */ var _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(151);
/* harmony import */ var _enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(152);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ContactType;
(function (ContactType) {
    ContactType["PATIENT"] = "PATIENT";
    ContactType["PROVIDER"] = "PROVIDER";
    ContactType["STAFF"] = "STAFF";
    ContactType["VENDOR"] = "VENDOR";
    ContactType["OTHER"] = "OTHER";
})(ContactType || (ContactType = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
var SortField;
(function (SortField) {
    SortField["FIRST_NAME"] = "firstName";
    SortField["LAST_NAME"] = "lastName";
    SortField["EMAIL"] = "email";
    SortField["PHONE"] = "phone";
    SortField["DATE_OF_BIRTH"] = "dateOfBirth";
    SortField["CREATED_AT"] = "createdAt";
    SortField["UPDATED_AT"] = "updatedAt";
})(SortField || (SortField = {}));
class DateRangeDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { from: { required: false, type: () => String }, to: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Start date for filtering' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], DateRangeDto.prototype, "from", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'End date for filtering' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDateString)(),
    __metadata("design:type", String)
], DateRangeDto.prototype, "to", void 0);
class ContactQueryDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { search: { required: false, type: () => String }, type: { required: false, enum: (__webpack_require__(154).ContactType) }, gender: { required: false, enum: (__webpack_require__(150).Gender) }, maritalStatus: { required: false, enum: (__webpack_require__(151).MaritalStatus) }, bloodGroup: { required: false, enum: (__webpack_require__(152).BloodGroup) }, isActive: { required: false, type: () => Boolean }, tags: { required: false, type: () => [String] }, groups: { required: false, type: () => [String] }, createdAt: { required: false, type: () => (__webpack_require__(154).DateRangeDto) }, updatedAt: { required: false, type: () => (__webpack_require__(154).DateRangeDto) }, dateOfBirth: { required: false, type: () => (__webpack_require__(154).DateRangeDto) }, city: { required: false, type: () => String }, state: { required: false, type: () => String }, country: { required: false, type: () => String }, postalCode: { required: false, type: () => String }, email: { required: false, type: () => String, format: "email" }, phone: { required: false, type: () => String }, insuranceProvider: { required: false, type: () => String }, medicalConditions: { required: false, type: () => [String] }, allergies: { required: false, type: () => [String] }, createdBy: { required: false, type: () => String }, updatedBy: { required: false, type: () => String }, page: { required: false, type: () => Number, minimum: 1 }, limit: { required: false, type: () => Number, minimum: 1, maximum: 100 }, sortBy: { required: false, enum: (__webpack_require__(154).SortField), enum: Object.values(SortField) }, sortOrder: { required: false, enum: (__webpack_require__(154).SortOrder), enum: Object.values(SortOrder) }, includeInactive: { required: false, type: () => Boolean }, hasUpcomingAppointments: { required: false, type: () => Boolean }, recentActivityDays: { required: false, type: () => Number, minimum: 1 }, allowsEmail: { required: false, type: () => Boolean }, allowsSMS: { required: false, type: () => Boolean }, hasDocuments: { required: false, type: () => Boolean }, hasMedicalHistory: { required: false, type: () => Boolean }, preferredLanguage: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Search term to look in firstName, lastName, email, and phone',
        example: 'john',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "search", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Type of contact',
        enum: ContactType,
        example: ContactType.PATIENT,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(ContactType),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by gender',
        enum: _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "gender", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by marital status',
        enum: _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "maritalStatus", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by blood group',
        enum: _enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__.BloodGroup,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_blood_group_enum__WEBPACK_IMPORTED_MODULE_5__.BloodGroup),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "bloodGroup", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by active status',
        example: true,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], ContactQueryDto.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by specific tags',
        type: [String],
        example: ['vip', 'recurring'],
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], ContactQueryDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by group IDs',
        type: [String],
        example: ['group1', 'group2'],
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], ContactQueryDto.prototype, "groups", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by creation date range',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DateRangeDto),
    __metadata("design:type", DateRangeDto)
], ContactQueryDto.prototype, "createdAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by update date range',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DateRangeDto),
    __metadata("design:type", DateRangeDto)
], ContactQueryDto.prototype, "updatedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by date of birth range',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => DateRangeDto),
    __metadata("design:type", DateRangeDto)
], ContactQueryDto.prototype, "dateOfBirth", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by city',
        example: 'New York',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "city", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by state',
        example: 'NY',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "state", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by country',
        example: 'USA',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "country", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by postal code',
        example: '10001',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "postalCode", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by email',
        example: 'john.doe@example.com',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by phone number',
        example: '+1234567890',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by insurance provider',
        example: 'Blue Cross',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "insuranceProvider", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by medical conditions',
        type: [String],
        example: ['diabetes', 'hypertension'],
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], ContactQueryDto.prototype, "medicalConditions", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by allergies',
        type: [String],
        example: ['penicillin', 'peanuts'],
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], ContactQueryDto.prototype, "allergies", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by created by user ID',
        example: 'user123',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "createdBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by updated by user ID',
        example: 'user123',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "updatedBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Page number for pagination',
        minimum: 1,
        default: 1,
        example: 1,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], ContactQueryDto.prototype, "page", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Number of items per page',
        minimum: 1,
        maximum: 100,
        default: 10,
        example: 20,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], ContactQueryDto.prototype, "limit", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Field to sort by',
        enum: SortField,
        default: SortField.CREATED_AT,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsIn)(Object.values(SortField)),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "sortBy", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Sort order',
        enum: SortOrder,
        default: SortOrder.DESC,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsIn)(Object.values(SortOrder)),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "sortOrder", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Include inactive contacts in results',
        default: false,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], ContactQueryDto.prototype, "includeInactive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Include contacts with upcoming appointments',
        default: false,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], ContactQueryDto.prototype, "hasUpcomingAppointments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Only include contacts with recent activity',
        example: 30,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], ContactQueryDto.prototype, "recentActivityDays", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Only include contacts with specific communication preferences',
        example: true,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], ContactQueryDto.prototype, "allowsEmail", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Only include contacts that allow SMS',
        example: true,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], ContactQueryDto.prototype, "allowsSMS", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Only include contacts with documents',
        example: true,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], ContactQueryDto.prototype, "hasDocuments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Only include contacts with medical history',
        example: true,
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], ContactQueryDto.prototype, "hasMedicalHistory", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Preferred language for filtering',
        example: 'en',
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], ContactQueryDto.prototype, "preferredLanguage", void 0);


/***/ }),
/* 155 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MergeContactsDto: () => (/* binding */ MergeContactsDto),
/* harmony export */   MergeContactsResponseDto: () => (/* binding */ MergeContactsResponseDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(150);
/* harmony import */ var _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(151);
/* harmony import */ var _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(153);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







class MergeContactsDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { primaryContactId: { required: true, type: () => String, format: "uuid" }, secondaryContactId: { required: true, type: () => String }, secondaryContactIds: { required: true, type: () => [String], format: "uuid", minItems: 1 }, firstName: { required: false, type: () => String, minLength: 2, maxLength: 50 }, lastName: { required: false, type: () => String, minLength: 2, maxLength: 50 }, email: { required: false, type: () => String, format: "email" }, phone: { required: false, type: () => String }, whatsapp: { required: false, type: () => String }, dateOfBirth: { required: false, type: () => Date }, gender: { required: false, enum: (__webpack_require__(150).Gender) }, maritalStatus: { required: false, enum: (__webpack_require__(151).MaritalStatus) }, address: { required: false, type: () => (__webpack_require__(153).UpdateContactAddressDto) }, emergencyContact: { required: false, type: () => (__webpack_require__(153).UpdateEmergencyContactDto) }, medicalInfo: { required: false, type: () => (__webpack_require__(153).UpdateMedicalInfoDto) }, insuranceInfo: { required: false, type: () => (__webpack_require__(153).UpdateInsuranceInfoDto) }, communicationPrefs: { required: false, type: () => (__webpack_require__(153).UpdateCommunicationPrefsDto) }, notes: { required: false, type: () => String, maxLength: 500 }, documents: { required: false, type: () => [String], format: "uri" }, tags: { required: false, type: () => [String] }, groups: { required: false, type: () => [String] }, keepHistory: { required: false, type: () => Boolean }, deleteSecondaryContacts: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Primary contact ID that will be kept' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "primaryContactId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Secondary contact IDs that will be merged into the primary contact', type: [String] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ArrayMinSize)(1),
    __metadata("design:type", Array)
], MergeContactsDto.prototype, "secondaryContactIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "firstName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MinLength)(2),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(50),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "lastName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEmail)(),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "email", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "phone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsPhoneNumber)(),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "whatsapp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], MergeContactsDto.prototype, "dateOfBirth", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_gender_enum__WEBPACK_IMPORTED_MODULE_3__.Gender),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "gender", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_marital_status_enum__WEBPACK_IMPORTED_MODULE_4__.MaritalStatus),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "maritalStatus", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateContactAddressDto),
    __metadata("design:type", _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateContactAddressDto)
], MergeContactsDto.prototype, "address", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateEmergencyContactDto),
    __metadata("design:type", _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateEmergencyContactDto)
], MergeContactsDto.prototype, "emergencyContact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateMedicalInfoDto),
    __metadata("design:type", _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateMedicalInfoDto)
], MergeContactsDto.prototype, "medicalInfo", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateInsuranceInfoDto),
    __metadata("design:type", _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateInsuranceInfoDto)
], MergeContactsDto.prototype, "insuranceInfo", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateCommunicationPrefsDto),
    __metadata("design:type", _update_contact_dto__WEBPACK_IMPORTED_MODULE_5__.UpdateCommunicationPrefsDto)
], MergeContactsDto.prototype, "communicationPrefs", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.MaxLength)(500),
    __metadata("design:type", String)
], MergeContactsDto.prototype, "notes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUrl)({}, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    __metadata("design:type", Array)
], MergeContactsDto.prototype, "documents", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], MergeContactsDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    __metadata("design:type", Array)
], MergeContactsDto.prototype, "groups", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to keep the history of the merged contacts' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], MergeContactsDto.prototype, "keepHistory", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Whether to delete the secondary contacts after merging' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], MergeContactsDto.prototype, "deleteSecondaryContacts", void 0);
class MergeContactsResponseDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, mergedContactIds: { required: true, type: () => [String] }, mergedAt: { required: true, type: () => Date }, mergedBy: { required: true, type: () => String } };
    }
}


/***/ }),
/* 156 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppointmentEventTypes: () => (/* binding */ AppointmentEventTypes),
/* harmony export */   AppointmentsModule: () => (/* binding */ AppointmentsModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_jwt__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(17);
/* harmony import */ var _nestjs_passport__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_passport__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _auth_controllers_auth_controller__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(119);
/* harmony import */ var _auth_services_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(18);
/* harmony import */ var _auth_strategies_jwt_strategy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(128);
/* harmony import */ var _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(16);
/* harmony import */ var _auth_entities_refresh_token_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(43);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(21);
/* harmony import */ var _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(28);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(14);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};













var AppointmentEventTypes;
(function (AppointmentEventTypes) {
    AppointmentEventTypes["CREATED"] = "appointment.created";
    AppointmentEventTypes["UPDATED"] = "appointment.updated";
    AppointmentEventTypes["CANCELLED"] = "appointment.cancelled";
    AppointmentEventTypes["COMPLETED"] = "appointment.completed";
    AppointmentEventTypes["RESCHEDULED"] = "appointment.rescheduled";
})(AppointmentEventTypes || (AppointmentEventTypes = {}));
let AppointmentsModule = class AppointmentsModule {
};
AppointmentsModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_config__WEBPACK_IMPORTED_MODULE_4__.ConfigModule,
            _nestjs_passport__WEBPACK_IMPORTED_MODULE_2__.PassportModule.register({ defaultStrategy: 'jwt' }),
            _nestjs_jwt__WEBPACK_IMPORTED_MODULE_1__.JwtModule.registerAsync({
                imports: [_nestjs_config__WEBPACK_IMPORTED_MODULE_4__.ConfigModule],
                inject: [_nestjs_config__WEBPACK_IMPORTED_MODULE_4__.ConfigService],
                useFactory: async (configService) => ({
                    secret: configService.get('JWT_SECRET'),
                    signOptions: {
                        expiresIn: configService.get('JWT_EXPIRATION', '1h'),
                    },
                }),
            }),
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_3__.TypeOrmModule.forFeature([_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_10__.User, _auth_entities_refresh_token_entity__WEBPACK_IMPORTED_MODULE_9__.RefreshToken, _organizations_entities_organization_entity__WEBPACK_IMPORTED_MODULE_11__.Organization]),
            _users_users_module__WEBPACK_IMPORTED_MODULE_12__.UsersModule,
        ],
        controllers: [_auth_controllers_auth_controller__WEBPACK_IMPORTED_MODULE_5__.AuthController],
        providers: [
            _auth_services_auth_service__WEBPACK_IMPORTED_MODULE_6__.AuthService,
            _auth_strategies_jwt_strategy__WEBPACK_IMPORTED_MODULE_7__.JwtStrategy,
            _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_8__.JwtAuthGuard,
        ],
        exports: [
            _auth_services_auth_service__WEBPACK_IMPORTED_MODULE_6__.AuthService,
            _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_8__.JwtAuthGuard,
            _nestjs_passport__WEBPACK_IMPORTED_MODULE_2__.PassportModule,
        ],
    })
], AppointmentsModule);



/***/ }),
/* 157 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketsModule: () => (/* binding */ TicketsModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _controllers_tickets_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(158);
/* harmony import */ var _services_tickets_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(161);
/* harmony import */ var _services_ticket_activity_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(170);
/* harmony import */ var _services_ticket_escalation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(171);
/* harmony import */ var _entities_ticket_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(23);
/* harmony import */ var _entities_ticket_comment_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(162);
/* harmony import */ var _entities_ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(163);
/* harmony import */ var _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(164);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(21);
/* harmony import */ var _listeners_ticket_listener__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(173);
/* harmony import */ var _listeners_ticket_assignment_listener__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(174);
/* harmony import */ var _listeners_ticket_escalation_listener__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(175);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(14);
/* harmony import */ var _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(89);
/* harmony import */ var _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(104);
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(118);
/* harmony import */ var _departments_departments_module__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(176);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




















let TicketsModule = class TicketsModule {
};
TicketsModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_ticket_entity__WEBPACK_IMPORTED_MODULE_7__.Ticket,
                _entities_ticket_comment_entity__WEBPACK_IMPORTED_MODULE_8__.TicketComment,
                _entities_ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_9__.TicketAttachment,
                _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_10__.TicketActivity,
                _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_11__.User
            ]),
            _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitterModule.forRoot({
                wildcard: true,
                maxListeners: 20,
                verboseMemoryLeak: true,
            }),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _users_users_module__WEBPACK_IMPORTED_MODULE_15__.UsersModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_16__.NotificationsModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_17__.OrganizationsModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _auth_auth_module__WEBPACK_IMPORTED_MODULE_18__.AuthModule),
            _departments_departments_module__WEBPACK_IMPORTED_MODULE_19__.DepartmentsModule
        ],
        controllers: [
            _controllers_tickets_controller__WEBPACK_IMPORTED_MODULE_3__.TicketsController
        ],
        providers: [
            _services_tickets_service__WEBPACK_IMPORTED_MODULE_4__.TicketsService,
            _services_ticket_activity_service__WEBPACK_IMPORTED_MODULE_5__.TicketActivityService,
            _services_ticket_escalation_service__WEBPACK_IMPORTED_MODULE_6__.TicketEscalationService,
            _listeners_ticket_listener__WEBPACK_IMPORTED_MODULE_12__.TicketListener,
            _listeners_ticket_assignment_listener__WEBPACK_IMPORTED_MODULE_13__.TicketAssignmentListener,
            _listeners_ticket_escalation_listener__WEBPACK_IMPORTED_MODULE_14__.TicketEscalationListener
        ],
        exports: [
            _services_tickets_service__WEBPACK_IMPORTED_MODULE_4__.TicketsService,
            _services_ticket_activity_service__WEBPACK_IMPORTED_MODULE_5__.TicketActivityService
        ]
    })
], TicketsModule);



/***/ }),
/* 158 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketsController: () => (/* binding */ TicketsController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74);
/* harmony import */ var _common_guards_organization_guard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(159);
/* harmony import */ var _common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(106);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22);
/* harmony import */ var _services_tickets_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(161);
/* harmony import */ var _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(24);
/* harmony import */ var _dto_update_ticket_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(166);
/* harmony import */ var _dto_ticket_comment_dto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(167);
/* harmony import */ var _dto_ticket_assignment_dto__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(168);
/* harmony import */ var _dto_ticket_query_dto__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(169);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};














let TicketsController = class TicketsController {
    constructor(ticketsService) {
        this.ticketsService = ticketsService;
    }
    async create(createTicketDto, req) {
        return this.ticketsService.create(Object.assign(Object.assign({}, createTicketDto), { organizationId: req.organization.id, createdBy: req.user.id }));
    }
    async findAll(query, req) {
        return this.ticketsService.findAll(Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async getDashboard(req) {
        return this.ticketsService.getDashboard(req.organization.id);
    }
    async getAssignedTickets(query, req) {
        return this.ticketsService.getAssignedTickets(Object.assign(Object.assign({}, query), { organizationId: req.organization.id, userId: req.user.id }));
    }
    async findOne(id, req) {
        const ticket = await this.ticketsService.findOne(id, req.organization.id);
        if (!ticket) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.NotFoundException('Ticket not found');
        }
        return ticket;
    }
    async update(id, updateTicketDto, req) {
        return this.ticketsService.update(id, Object.assign(Object.assign({}, updateTicketDto), { organizationId: req.organization.id, updatedBy: req.user.id }));
    }
    async remove(id, req) {
        await this.ticketsService.remove(id, req.organization.id);
    }
    async addComment(id, commentDto, req) {
        return this.ticketsService.addComment(id, Object.assign(Object.assign({}, commentDto), { organizationId: req.organization.id, userId: req.user.id }));
    }
    async assignTicket(id, assignmentDto, req) {
        return this.ticketsService.assignTicket(id, Object.assign(Object.assign({}, assignmentDto), { organizationId: req.organization.id, assignedBy: req.user.id, ticketIds: [id] }));
    }
    async escalateTicket(id, reason, req) {
        return this.ticketsService.escalateTicket(id, {
            reason,
            organizationId: req.organization.id,
            escalatedBy: req.user.id,
        });
    }
    async resolveTicket(id, resolution, req) {
        return this.ticketsService.resolveTicket(id, {
            resolution,
            organizationId: req.organization.id,
            resolvedBy: req.user.id,
        });
    }
    async reopenTicket(id, reason, req) {
        return this.ticketsService.reopenTicket(id, {
            reason,
            organizationId: req.organization.id,
            reopenedBy: req.user.id,
        });
    }
    async getTimeline(id, req) {
        return this.ticketsService.getTimeline(id, req.organization.id);
    }
    async getRelatedTickets(id, req) {
        return this.ticketsService.getRelatedTickets(id, req.organization.id);
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Create new ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Ticket created successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(23).Ticket) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.CreateTicketDto, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "create", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get all tickets' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return all tickets' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_ticket_query_dto__WEBPACK_IMPORTED_MODULE_12__.TicketQueryDto, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "findAll", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('dashboard'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get tickets dashboard data' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return tickets dashboard data' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "getDashboard", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('assigned'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get tickets assigned to current user' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return assigned tickets' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_ticket_query_dto__WEBPACK_IMPORTED_MODULE_12__.TicketQueryDto, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "getAssignedTickets", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get ticket by id' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return ticket details' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(23).Ticket) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "findOne", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Ticket updated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(23).Ticket) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_ticket_dto__WEBPACK_IMPORTED_MODULE_9__.UpdateTicketDto, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "update", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_5__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Delete ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.NO_CONTENT, description: 'Ticket deleted successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "remove", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/comments'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Add comment to ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Comment added successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(162).TicketComment) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_ticket_comment_dto__WEBPACK_IMPORTED_MODULE_10__.CreateTicketCommentDto, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "addComment", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id/assign'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_5__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Assign ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Ticket assigned successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(23).Ticket) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_ticket_assignment_dto__WEBPACK_IMPORTED_MODULE_11__.TicketAssignmentDto, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "assignTicket", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/escalate'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_5__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_6__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Escalate ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Ticket escalated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(23).Ticket) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)('reason')),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "escalateTicket", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/resolve'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Resolve ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Ticket resolved successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(23).Ticket) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)('resolution')),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "resolveTicket", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/reopen'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Reopen ticket' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Ticket reopened successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(23).Ticket) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)('reason')),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "reopenTicket", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/timeline'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get ticket timeline' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return ticket timeline' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: [(__webpack_require__(164).TicketActivity)] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "getTimeline", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/related'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get related tickets' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return related tickets' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], TicketsController.prototype, "getRelatedTickets", null);
TicketsController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Tickets'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('tickets'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__.JwtAuthGuard, _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__.RolesGuard, _common_guards_organization_guard__WEBPACK_IMPORTED_MODULE_4__.OrganizationGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    __metadata("design:paramtypes", [_services_tickets_service__WEBPACK_IMPORTED_MODULE_7__.TicketsService])
], TicketsController);



/***/ }),
/* 159 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrganizationGuard: () => (/* binding */ OrganizationGuard)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _modules_organizations_services_organizations_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(107);
/* harmony import */ var _decorators_auth_decorator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(160);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let OrganizationGuard = class OrganizationGuard {
    constructor(reflector, organizationService) {
        this.reflector = reflector;
        this.organizationService = organizationService;
    }
    async canActivate(context) {
        const requireOrganization = this.reflector.getAllAndOverride(_decorators_auth_decorator__WEBPACK_IMPORTED_MODULE_3__.AUTH_ORG_KEY, [context.getHandler(), context.getClass()]);
        if (!requireOrganization) {
            return true;
        }
        const request = context.switchToHttp().getRequest();
        const user = request.user;
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User not found');
        }
        if (!user.organizationId) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('User is not associated with any organization');
        }
        try {
            const organization = await this.organizationService.findOne(user.organizationId);
            if (!organization) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('Organization not found');
            }
            if (organization.status !== 'ACTIVE') {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('Organization is inactive');
            }
            if (!this.isSubscriptionValid(organization)) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('Organization subscription is invalid or expired');
            }
            await this.checkOrganizationLimits(organization, request);
            request.organization = organization;
            return true;
        }
        catch (error) {
            if (error instanceof _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException || error instanceof _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException) {
                throw error;
            }
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('Organization access denied');
        }
    }
    isSubscriptionValid(organization) {
        const now = new Date();
        const subscriptionEnd = organization.subscriptionEndDate;
        if (!organization.isSubscriptionActive) {
            return false;
        }
        if (subscriptionEnd && subscriptionEnd < now) {
            return false;
        }
        return true;
    }
    async checkOrganizationLimits(organization, request) {
        if (organization.maxUsers > 0) {
            const userCount = await this.organizationService.getAdminCount(organization.id);
            if (userCount >= organization.maxUsers) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('Organization user limit reached');
            }
        }
        if (organization.maxStorage > 0 && request.url.includes('/storage')) {
            const statistics = await this.organizationService.getStatistics(organization.id);
            if (statistics.storageUsed >= organization.maxStorage) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('Organization storage limit reached');
            }
        }
        const requestedFeature = this.getRequestedFeature(request);
        if (requestedFeature && !this.hasFeatureAccess(organization, requestedFeature)) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException(`Access to ${requestedFeature} feature is not included in your plan`);
        }
    }
    getRequestedFeature(request) {
        const featureMap = {
            '/api/messages/whatsapp': 'WHATSAPP_INTEGRATION',
            '/api/analytics': 'ADVANCED_ANALYTICS',
            '/api/export': 'DATA_EXPORT',
        };
        for (const [endpoint, feature] of Object.entries(featureMap)) {
            if (request.url.includes(endpoint)) {
                return feature;
            }
        }
        return null;
    }
    hasFeatureAccess(organization, feature) {
        const tierFeatures = this.getTierFeatures(organization.subscriptionTier);
        return tierFeatures.includes(feature);
    }
    getTierFeatures(tier) {
        const tierFeaturesMap = {
            'FREE': ['BASIC'],
            'BASIC': ['BASIC', 'DATA_EXPORT'],
            'PROFESSIONAL': ['BASIC', 'DATA_EXPORT', 'ADVANCED_ANALYTICS'],
            'ENTERPRISE': ['BASIC', 'DATA_EXPORT', 'ADVANCED_ANALYTICS', 'WHATSAPP_INTEGRATION'],
        };
        return tierFeaturesMap[tier] || [];
    }
};
OrganizationGuard = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_core__WEBPACK_IMPORTED_MODULE_1__.Reflector,
        _modules_organizations_services_organizations_service__WEBPACK_IMPORTED_MODULE_2__.OrganizationsService])
], OrganizationGuard);



/***/ }),
/* 160 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AUTH_ORG_KEY: () => (/* binding */ AUTH_ORG_KEY),
/* harmony export */   AUTH_ROLES_KEY: () => (/* binding */ AUTH_ROLES_KEY),
/* harmony export */   Auth: () => (/* binding */ Auth),
/* harmony export */   CurrentOrganization: () => (/* binding */ CurrentOrganization),
/* harmony export */   CurrentUser: () => (/* binding */ CurrentUser),
/* harmony export */   Public: () => (/* binding */ Public),
/* harmony export */   RequireOrganization: () => (/* binding */ RequireOrganization)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _modules_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var _modules_auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74);




const AUTH_ROLES_KEY = 'roles';
const AUTH_ORG_KEY = 'requireOrganization';
function Auth(options = {}) {
    const { roles = [], requireOrganization = true } = options;
    return (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.applyDecorators)((0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(AUTH_ROLES_KEY, roles), (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(AUTH_ORG_KEY, requireOrganization), (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UseGuards)(_modules_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__.JwtAuthGuard, _modules_auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__.RolesGuard), (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__.ApiBearerAuth)(), (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__.ApiUnauthorizedResponse)({ description: 'Unauthorized' }));
}
function Public() {
    return (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)('isPublic', true);
}
function RequireOrganization() {
    return (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)(AUTH_ORG_KEY, true);
}

const CurrentUser = (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.createParamDecorator)((data, ctx) => {
    const request = ctx.switchToHttp().getRequest();
    const user = request.user;
    return data ? user === null || user === void 0 ? void 0 : user[data] : user;
});
const CurrentOrganization = (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.createParamDecorator)((data, ctx) => {
    const request = ctx.switchToHttp().getRequest();
    const organization = request.organization;
    return data ? organization === null || organization === void 0 ? void 0 : organization[data] : organization;
});


/***/ }),
/* 161 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketsService: () => (/* binding */ TicketsService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(23);
/* harmony import */ var _entities_ticket_comment_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(162);
/* harmony import */ var _entities_ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(163);
/* harmony import */ var _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(164);
/* harmony import */ var _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(24);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(46);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(21);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(71);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_11__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};












let TicketsService = class TicketsService {
    constructor(ticketRepository, commentRepository, attachmentRepository, activityRepository, dataSource, userRepository, eventEmitter, notificationsService) {
        this.ticketRepository = ticketRepository;
        this.commentRepository = commentRepository;
        this.attachmentRepository = attachmentRepository;
        this.activityRepository = activityRepository;
        this.dataSource = dataSource;
        this.userRepository = userRepository;
        this.eventEmitter = eventEmitter;
        this.notificationsService = notificationsService;
    }
    async getRelatedTickets(ticketId, organizationId) {
        return [];
    }
    async remove(id, organizationId) {
        const ticket = await this.findOne(id, organizationId);
        ticket.status = _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.DELETED;
        ticket.deletedAt = new Date();
        await this.ticketRepository.save(ticket);
    }
    async reopenTicket(id, reopenDetails) {
        const ticket = await this.ticketRepository.findOne({ where: { id, organizationId: reopenDetails.organizationId } });
        if (!ticket) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('Ticket not found');
        }
        ticket.status = _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.REOPENED;
        ticket.reopenReason = reopenDetails.reason;
        const reopenedByUser = await this.userRepository.findOne({ where: { id: reopenDetails.reopenedBy } });
        if (!reopenedByUser) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('User not found');
        }
        ticket.reopenedBy = reopenedByUser;
        await this.ticketRepository.save(ticket);
        return ticket;
    }
    async create(data) {
        var _a, _b;
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const createdByUser = await this.userRepository.findOne({ where: { id: data.createdBy } });
            if (!createdByUser) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('User not found');
            }
            const ticket = this.ticketRepository.create(Object.assign(Object.assign({}, data), { status: _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.OPEN, createdBy: createdByUser, attachments: (_a = data.attachments) === null || _a === void 0 ? void 0 : _a.map(attachmentData => {
                    const attachment = new _entities_ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_6__.TicketAttachment();
                    Object.assign(attachment, attachmentData);
                    attachment.organizationId = data.organizationId;
                    attachment.uploadedById = data.createdBy;
                    return attachment;
                }) }));
            await queryRunner.manager.save(ticket);
            if ((_b = data.attachments) === null || _b === void 0 ? void 0 : _b.length) {
                for (const attachmentData of data.attachments) {
                    const attachment = new _entities_ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_6__.TicketAttachment();
                    Object.assign(attachment, attachmentData);
                    attachment.ticketId = ticket.id;
                    attachment.organizationId = data.organizationId;
                    attachment.uploadedById = data.createdBy;
                    await queryRunner.manager.save(attachment);
                }
            }
            const activity = new _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__.TicketActivity();
            activity.ticketId = ticket.id;
            activity.organizationId = data.organizationId;
            activity.userId = data.createdBy;
            activity.action = 'CREATED';
            activity.details = { status: ticket.status };
            await queryRunner.manager.save(activity);
            await queryRunner.commitTransaction();
            if (ticket.assigneeId) {
                await this.notificationsService.create({
                    type: 'TICKET_ASSIGNED',
                    title: 'New Ticket Assigned',
                    content: `Ticket #${ticket.referenceNumber} has been assigned to you: ${ticket.title}`,
                    recipients: ticket.assigneeId ? [{ userId: ticket.assigneeId }] : [],
                    organizationId: data.organizationId,
                    senderId: data.createdBy,
                });
            }
            this.eventEmitter.emit('ticket.created', ticket);
            return ticket;
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async findAll(query) {
        const { organizationId, status, priority, type, assigneeId, contactId, departmentId, search, startDate, endDate, page = 1, limit = 10, } = query;
        const queryBuilder = this.ticketRepository
            .createQueryBuilder('ticket')
            .where('ticket.organizationId = :organizationId', { organizationId })
            .leftJoinAndSelect('ticket.assignee', 'assignee')
            .leftJoinAndSelect('ticket.contact', 'contact')
            .leftJoinAndSelect('ticket.department', 'department');
        if (status) {
            queryBuilder.andWhere('ticket.status = :status', { status });
        }
        if (priority) {
            queryBuilder.andWhere('ticket.priority = :priority', { priority });
        }
        if (type) {
            queryBuilder.andWhere('ticket.type = :type', { type });
        }
        if (assigneeId) {
            queryBuilder.andWhere('ticket.assigneeId = :assigneeId', { assigneeId });
        }
        if (contactId) {
            queryBuilder.andWhere('ticket.contactId = :contactId', { contactId });
        }
        if (departmentId) {
            queryBuilder.andWhere('ticket.departmentId = :departmentId', { departmentId });
        }
        if (search) {
            queryBuilder.andWhere('(LOWER(ticket.title) LIKE LOWER(:search) OR LOWER(ticket.description) LIKE LOWER(:search) OR ticket.referenceNumber LIKE :search)', { search: `%${search}%` });
        }
        if (startDate) {
            queryBuilder.andWhere('ticket.createdAt >= :startDate', { startDate });
        }
        if (endDate) {
            queryBuilder.andWhere('ticket.createdAt <= :endDate', { endDate });
        }
        queryBuilder.orderBy('ticket.createdAt', 'DESC');
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_11__.paginate)(queryBuilder, { page, limit });
    }
    async findOne(id, organizationId) {
        const ticket = await this.ticketRepository
            .createQueryBuilder('ticket')
            .where('ticket.id = :id', { id })
            .andWhere('ticket.organizationId = :organizationId', { organizationId })
            .leftJoinAndSelect('ticket.assignee', 'assignee')
            .leftJoinAndSelect('ticket.contact', 'contact')
            .leftJoinAndSelect('ticket.department', 'department')
            .leftJoinAndSelect('ticket.comments', 'comments')
            .leftJoinAndSelect('ticket.attachments', 'attachments')
            .leftJoinAndSelect('ticket.activities', 'activities')
            .getOne();
        if (!ticket) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException('Ticket not found');
        }
        return ticket;
    }
    async update(id, data) {
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const ticket = await this.findOne(id, data.organizationId);
            const oldStatus = ticket.status;
            Object.assign(ticket, data);
            await queryRunner.manager.save(ticket);
            if (data.status && data.status !== oldStatus) {
                const activity = new _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__.TicketActivity();
                activity.ticketId = ticket.id;
                activity.organizationId = data.organizationId;
                activity.userId = data.updatedBy;
                activity.action = 'STATUS_CHANGED';
                activity.details = {
                    oldStatus,
                    newStatus: data.status,
                    note: data.statusNote,
                };
                await queryRunner.manager.save(activity);
                if (ticket.assigneeId) {
                    await this.notificationsService.create({
                        type: 'TICKET_STATUS_CHANGED',
                        title: 'Ticket Status Updated',
                        content: `Ticket #${ticket.referenceNumber} status changed to ${data.status}`,
                        recipients: ticket.assigneeId ? [{ userId: ticket.assigneeId }] : [],
                        organizationId: data.organizationId,
                        senderId: data.updatedBy,
                    });
                }
            }
            await queryRunner.commitTransaction();
            return ticket;
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async assignTicket(id, data) {
        const ticket = await this.findOne(id, data.organizationId);
        const oldAssigneeId = ticket.assigneeId;
        ticket.assigneeId = data.assigneeId;
        await this.ticketRepository.save(ticket);
        const activity = new _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__.TicketActivity();
        activity.ticketId = ticket.id;
        activity.organizationId = data.organizationId;
        activity.userId = data.assignedBy;
        activity.action = 'ASSIGNED';
        activity.details = {
            oldAssigneeId,
            newAssigneeId: data.assigneeId,
            note: data.note,
        };
        await this.activityRepository.save(activity);
        await this.notificationsService.create({
            type: 'TICKET_ASSIGNED',
            title: 'Ticket Assigned',
            content: `Ticket #${ticket.referenceNumber} has been assigned to you`,
            recipients: [{ userId: data.assigneeId }],
            organizationId: data.organizationId,
            senderId: data.assignedBy,
        });
        return ticket;
    }
    async addComment(id, data) {
        const ticket = await this.findOne(id, data.organizationId);
        const comment = new _entities_ticket_comment_entity__WEBPACK_IMPORTED_MODULE_5__.TicketComment();
        Object.assign(comment, data);
        comment.ticketId = ticket.id;
        comment.organizationId = data.organizationId;
        comment.userId = data.userId;
        await this.commentRepository.save(comment);
        ticket.lastActivityAt = new Date();
        await this.ticketRepository.save(ticket);
        const activity = new _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__.TicketActivity();
        activity.ticketId = ticket.id;
        activity.organizationId = data.organizationId;
        activity.userId = data.userId;
        activity.action = 'COMMENTED';
        activity.details = { commentId: comment.id };
        await this.activityRepository.save(activity);
        if (data.isInternal && ticket.assigneeId !== data.userId) {
            await this.notificationsService.create({
                type: 'TICKET_INTERNAL_NOTE',
                title: 'New Internal Note',
                content: `New internal note added to ticket #${ticket.referenceNumber}`,
                recipients: ticket.assigneeId ? [{ userId: ticket.assigneeId }] : [],
                organizationId: data.organizationId,
                senderId: data.userId,
            });
        }
        return comment;
    }
    async escalateTicket(id, data) {
        const ticket = await this.findOne(id, data.organizationId);
        ticket.status = _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.ESCALATED;
        ticket.escalatedAt = new Date();
        ticket.escalatedById = data.escalatedBy;
        ticket.escalationReason = data.reason;
        await this.ticketRepository.save(ticket);
        const activity = new _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__.TicketActivity();
        activity.ticketId = ticket.id;
        activity.organizationId = data.organizationId;
        activity.userId = data.escalatedBy;
        activity.action = 'ESCALATED';
        activity.details = { reason: data.reason };
        await this.activityRepository.save(activity);
        await this.notificationsService.create({
            type: 'TICKET_ESCALATED',
            title: 'Ticket Escalated',
            content: `Ticket #${ticket.referenceNumber} has been escalated: ${data.reason}`,
            priority: 'HIGH',
            recipients: [{ userId: 'ADMIN_USER_ID' }],
            organizationId: data.organizationId,
            senderId: data.escalatedBy,
        });
        return ticket;
    }
    async resolveTicket(id, data) {
        const ticket = await this.findOne(id, data.organizationId);
        ticket.status = _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.RESOLVED;
        ticket.resolvedAt = new Date();
        ticket.resolvedById = data.resolvedBy;
        ticket.resolution = data.resolution;
        await this.ticketRepository.save(ticket);
        const activity = new _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__.TicketActivity();
        activity.ticketId = ticket.id;
        activity.organizationId = data.organizationId;
        activity.userId = data.resolvedBy;
        activity.action = 'RESOLVED';
        activity.details = { resolution: data.resolution };
        await this.activityRepository.save(activity);
        if (ticket.createdById !== data.resolvedBy) {
            await this.notificationsService.create({
                type: 'TICKET_RESOLVED',
                title: 'Ticket Resolved',
                content: `Your ticket #${ticket.referenceNumber} has been resolved`,
                recipients: [{ userId: ticket.createdById }],
                organizationId: data.organizationId,
                senderId: data.resolvedBy,
            });
        }
        return ticket;
    }
    async getAssignedTickets(query) {
        const { organizationId, userId, status, priority, type, contactId, departmentId, search, startDate, endDate, page = 1, limit = 10, } = query;
        const queryBuilder = this.ticketRepository
            .createQueryBuilder('ticket')
            .where('ticket.organizationId = :organizationId', { organizationId })
            .andWhere('ticket.assigneeId = :assigneeId', { assigneeId: userId })
            .leftJoinAndSelect('ticket.contact', 'contact')
            .leftJoinAndSelect('ticket.department', 'department');
        if (status) {
            queryBuilder.andWhere('ticket.status = :status', { status });
        }
        if (priority) {
            queryBuilder.andWhere('ticket.priority = :priority', { priority });
        }
        if (type) {
            queryBuilder.andWhere('ticket.type = :type', { type });
        }
        if (contactId) {
            queryBuilder.andWhere('ticket.contactId = :contactId', { contactId });
        }
        if (departmentId) {
            queryBuilder.andWhere('ticket.departmentId = :departmentId', { departmentId });
        }
        if (search) {
            queryBuilder.andWhere('(LOWER(ticket.title) LIKE LOWER(:search) OR LOWER(ticket.description) LIKE LOWER(:search) OR ticket.referenceNumber LIKE :search)', { search: `%${search}%` });
        }
        if (startDate) {
            queryBuilder.andWhere('ticket.createdAt >= :startDate', { startDate });
        }
        if (endDate) {
            queryBuilder.andWhere('ticket.createdAt <= :endDate', { endDate });
        }
        queryBuilder.orderBy('ticket.createdAt', 'DESC');
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_11__.paginate)(queryBuilder, { page, limit });
    }
    async getTimeline(id, organizationId) {
        const activities = await this.activityRepository
            .createQueryBuilder('activity')
            .where('activity.ticketId = :ticketId', { ticketId: id })
            .andWhere('activity.organizationId = :organizationId', { organizationId })
            .leftJoinAndSelect('activity.user', 'user')
            .orderBy('activity.createdAt', 'DESC')
            .getMany();
        return activities;
    }
    async getDashboard(organizationId) {
        const stats = await this.ticketRepository
            .createQueryBuilder('ticket')
            .where('ticket.organizationId = :organizationId', { organizationId })
            .select([
            'COUNT(*) as total',
            'COUNT(CASE WHEN status = :open THEN 1 END) as open',
            'COUNT(CASE WHEN status = :inProgress THEN 1 END) as inProgress',
            'COUNT(CASE WHEN status = :escalated THEN 1 END) as escalated',
            'COUNT(CASE WHEN priority = :urgent THEN 1 END) as urgent',
        ])
            .setParameter('open', _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.OPEN)
            .setParameter('inProgress', _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.IN_PROGRESS)
            .setParameter('escalated', _dto_create_ticket_dto__WEBPACK_IMPORTED_MODULE_8__.TicketStatus.ESCALATED)
            .setParameter('urgent', 'URGENT')
            .getRawOne();
        return stats;
    }
};
TicketsService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__.Ticket)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_comment_entity__WEBPACK_IMPORTED_MODULE_5__.TicketComment)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_6__.TicketAttachment)),
    __param(3, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_7__.TicketActivity)),
    __param(5, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_10__.User)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.DataSource,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_9__.NotificationsService])
], TicketsService);



/***/ }),
/* 162 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketComment: () => (/* binding */ TicketComment)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ticket_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(21);
/* harmony import */ var _ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(163);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





let TicketComment = class TicketComment {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, userId: { required: true, type: () => String }, content: { required: true, type: () => String }, isInternal: { required: true, type: () => Boolean }, ticketId: { required: true, type: () => String }, ticket: { required: true, type: () => (__webpack_require__(23).Ticket) }, authorId: { required: true, type: () => String }, author: { required: true, type: () => (__webpack_require__(21).User) }, attachments: { required: true, type: () => [(__webpack_require__(163).TicketAttachment)] }, parentId: { required: true, type: () => String }, parent: { required: true, type: () => (__webpack_require__(162).TicketComment) }, metadata: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, editedAt: { required: true, type: () => Date }, editedBy: { required: true, type: () => String } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], TicketComment.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text'),
    __metadata("design:type", String)
], TicketComment.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], TicketComment.prototype, "isInternal", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], TicketComment.prototype, "ticketId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _ticket_entity__WEBPACK_IMPORTED_MODULE_2__.Ticket, ticket => ticket.comments),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'ticketId' }),
    __metadata("design:type", _ticket_entity__WEBPACK_IMPORTED_MODULE_2__.Ticket)
], TicketComment.prototype, "ticket", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], TicketComment.prototype, "authorId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'authorId' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], TicketComment.prototype, "author", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _ticket_attachment_entity__WEBPACK_IMPORTED_MODULE_4__.TicketAttachment, attachment => attachment.comment),
    __metadata("design:type", Array)
], TicketComment.prototype, "attachments", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TicketComment.prototype, "parentId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('TicketComment', { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'parentId' }),
    __metadata("design:type", TicketComment)
], TicketComment.prototype, "parent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketComment.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], TicketComment.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], TicketComment.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], TicketComment.prototype, "editedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TicketComment.prototype, "editedBy", void 0);
TicketComment = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('ticket_comments')
], TicketComment);



/***/ }),
/* 163 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketAttachment: () => (/* binding */ TicketAttachment)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ticket_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let TicketAttachment = class TicketAttachment {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, fileName: { required: true, type: () => String }, fileSize: { required: true, type: () => Number }, mimeType: { required: true, type: () => String }, storageKey: { required: true, type: () => String }, description: { required: true, type: () => String }, ticketId: { required: true, type: () => String }, ticket: { required: true, type: () => (__webpack_require__(23).Ticket) }, commentId: { required: true, type: () => String }, comment: { required: true, type: () => Object }, uploadedById: { required: true, type: () => String }, uploadedBy: { required: true, type: () => (__webpack_require__(21).User) }, metadata: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, isPrivate: { required: true, type: () => Boolean }, isActive: { required: true, type: () => Boolean } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], TicketAttachment.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], TicketAttachment.prototype, "fileName", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", Number)
], TicketAttachment.prototype, "fileSize", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], TicketAttachment.prototype, "mimeType", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], TicketAttachment.prototype, "storageKey", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TicketAttachment.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], TicketAttachment.prototype, "ticketId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _ticket_entity__WEBPACK_IMPORTED_MODULE_2__.Ticket, ticket => ticket.attachments),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'ticketId' }),
    __metadata("design:type", _ticket_entity__WEBPACK_IMPORTED_MODULE_2__.Ticket)
], TicketAttachment.prototype, "ticket", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], TicketAttachment.prototype, "commentId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('TicketComment', 'attachments', { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'commentId' }),
    __metadata("design:type", Object)
], TicketAttachment.prototype, "comment", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], TicketAttachment.prototype, "uploadedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'uploadedById' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], TicketAttachment.prototype, "uploadedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketAttachment.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], TicketAttachment.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: false }),
    __metadata("design:type", Boolean)
], TicketAttachment.prototype, "isPrivate", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ default: true }),
    __metadata("design:type", Boolean)
], TicketAttachment.prototype, "isActive", void 0);
TicketAttachment = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('ticket_attachments')
], TicketAttachment);



/***/ }),
/* 164 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketActivity: () => (/* binding */ TicketActivity)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ticket_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(21);
/* harmony import */ var _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(165);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





let TicketActivity = class TicketActivity {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, userId: { required: true, type: () => String }, action: { required: true, type: () => String }, details: { required: true, type: () => Object }, ticketId: { required: true, type: () => String }, ticket: { required: true, type: () => (__webpack_require__(23).Ticket) }, performedById: { required: true, type: () => String }, performedBy: { required: true, type: () => (__webpack_require__(21).User) }, type: { required: true, enum: (__webpack_require__(165).TicketActivityType) }, data: { required: true, type: () => Object }, metadata: { required: false, type: () => Object }, timestamp: { required: true, type: () => Date }, ipAddress: { required: false, type: () => String }, userAgent: { required: false, type: () => String }, changes: { required: false }, tags: { required: false, type: () => [String] }, parentActivityId: { required: false, type: () => String }, parentActivity: { required: false, type: () => (__webpack_require__(164).TicketActivity) }, context: { required: false, type: () => ({ location: { required: false, type: () => String }, deviceInfo: { required: false, type: () => String }, sessionId: { required: false, type: () => String }, referrer: { required: false, type: () => String } }) }, isSystem: { required: true, type: () => Boolean }, isAutomated: { required: true, type: () => Boolean }, requiresAttention: { required: true, type: () => Boolean }, expiresAt: { required: false, type: () => Date }, relatedEntities: { required: false }, duration: { required: false, type: () => Number }, status: { required: false, type: () => String }, importance: { required: true, type: () => Number }, isHidden: { required: true, type: () => Boolean }, customFields: { required: false, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, processedAt: { required: false, type: () => Date }, categories: { required: false, type: () => [String] }, validationResults: { required: false, type: () => ({ isValid: { required: true, type: () => Boolean }, errors: { required: false, type: () => [String] }, warnings: { required: false, type: () => [String] } }) }, metrics: { required: false, type: () => ({ responseTime: { required: false, type: () => Number }, resourceUsage: { required: false, type: () => Object }, performance: { required: false, type: () => Object } }) }, securityContext: { required: false, type: () => ({ permissions: { required: false, type: () => [String] }, roles: { required: false, type: () => [String] }, accessLevel: { required: false, type: () => String }, authenticationType: { required: false, type: () => String } }) }, businessContext: { required: false, type: () => ({ department: { required: false, type: () => String }, costCenter: { required: false, type: () => String }, projectCode: { required: false, type: () => String }, priority: { required: false, type: () => String } }) }, audit: { required: false, type: () => ({ version: { required: true, type: () => Number }, changedBy: { required: true, type: () => String }, changedAt: { required: true, type: () => Date }, reason: { required: false, type: () => String } }) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], TicketActivity.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], TicketActivity.prototype, "ticketId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _ticket_entity__WEBPACK_IMPORTED_MODULE_2__.Ticket, ticket => ticket.activities, { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'ticketId' }),
    __metadata("design:type", _ticket_entity__WEBPACK_IMPORTED_MODULE_2__.Ticket)
], TicketActivity.prototype, "ticket", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], TicketActivity.prototype, "performedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'performedById' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], TicketActivity.prototype, "performedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_4__.TicketActivityType
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], TicketActivity.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb'),
    __metadata("design:type", Object)
], TicketActivity.prototype, "data", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Date)
], TicketActivity.prototype, "timestamp", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TicketActivity.prototype, "ipAddress", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TicketActivity.prototype, "userAgent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], TicketActivity.prototype, "changes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { array: true, nullable: true }),
    __metadata("design:type", Array)
], TicketActivity.prototype, "tags", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TicketActivity.prototype, "parentActivityId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => TicketActivity, { nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'parentActivityId' }),
    __metadata("design:type", TicketActivity)
], TicketActivity.prototype, "parentActivity", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "context", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], TicketActivity.prototype, "isSystem", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], TicketActivity.prototype, "isAutomated", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], TicketActivity.prototype, "requiresAttention", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], TicketActivity.prototype, "expiresAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], TicketActivity.prototype, "relatedEntities", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('int', { nullable: true }),
    __metadata("design:type", Number)
], TicketActivity.prototype, "duration", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('varchar', { length: 50, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], TicketActivity.prototype, "status", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('int', { default: 0 }),
    __metadata("design:type", Number)
], TicketActivity.prototype, "importance", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], TicketActivity.prototype, "isHidden", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "customFields", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], TicketActivity.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], TicketActivity.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], TicketActivity.prototype, "processedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ type: 'text', array: true, nullable: true }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Array)
], TicketActivity.prototype, "categories", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "validationResults", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "metrics", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "securityContext", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "businessContext", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], TicketActivity.prototype, "audit", void 0);
TicketActivity = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('ticket_activities'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['ticketId', 'timestamp']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['performedById', 'timestamp'])
], TicketActivity);



/***/ }),
/* 165 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketActivityType: () => (/* binding */ TicketActivityType)
/* harmony export */ });
var TicketActivityType;
(function (TicketActivityType) {
    TicketActivityType["TICKET_CREATED"] = "ticket_created";
    TicketActivityType["TICKET_DELETED"] = "ticket_deleted";
    TicketActivityType["TICKET_RESTORED"] = "ticket_restored";
    TicketActivityType["STATUS_CHANGED"] = "status_changed";
    TicketActivityType["PRIORITY_CHANGED"] = "priority_changed";
    TicketActivityType["CATEGORY_CHANGED"] = "category_changed";
    TicketActivityType["ESCALATION"] = "ESCALATION";
    TicketActivityType["RESPONSE"] = "RESPONSE";
    TicketActivityType["RESOLUTION"] = "RESOLUTION";
    TicketActivityType["ASSIGNED"] = "assigned";
    TicketActivityType["UNASSIGNED"] = "unassigned";
    TicketActivityType["SELF_ASSIGNED"] = "self_assigned";
    TicketActivityType["TEAM_ASSIGNED"] = "team_assigned";
    TicketActivityType["COMMENT_ADDED"] = "comment_added";
    TicketActivityType["COMMENT_UPDATED"] = "comment_updated";
    TicketActivityType["COMMENT_DELETED"] = "comment_deleted";
    TicketActivityType["INTERNAL_NOTE_ADDED"] = "internal_note_added";
    TicketActivityType["EMAIL_SENT"] = "email_sent";
    TicketActivityType["EMAIL_RECEIVED"] = "email_received";
    TicketActivityType["ATTACHMENT_ADDED"] = "attachment_added";
    TicketActivityType["ATTACHMENT_REMOVED"] = "attachment_removed";
    TicketActivityType["TAG_ADDED"] = "tag_added";
    TicketActivityType["TAG_REMOVED"] = "tag_removed";
    TicketActivityType["LINKED_TO_TICKET"] = "linked_to_ticket";
    TicketActivityType["UNLINKED_FROM_TICKET"] = "unlinked_from_ticket";
    TicketActivityType["DUPLICATED_FROM"] = "duplicated_from";
    TicketActivityType["MERGED_WITH"] = "merged_with";
    TicketActivityType["WORKFLOW_TRIGGERED"] = "workflow_triggered";
    TicketActivityType["AUTOMATION_EXECUTED"] = "automation_executed";
    TicketActivityType["SLA_UPDATED"] = "sla_updated";
    TicketActivityType["SLA_BREACHED"] = "sla_breached";
    TicketActivityType["ESCALATED"] = "escalated";
    TicketActivityType["TIME_LOGGED"] = "time_logged";
    TicketActivityType["TIME_ESTIMATE_UPDATED"] = "time_estimate_updated";
    TicketActivityType["DEADLINE_UPDATED"] = "deadline_updated";
    TicketActivityType["SHARED_WITH_USER"] = "shared_with_user";
    TicketActivityType["MENTIONED_USER"] = "mentioned_user";
    TicketActivityType["SUBSCRIPTION_ADDED"] = "subscription_added";
    TicketActivityType["SUBSCRIPTION_REMOVED"] = "subscription_removed";
    TicketActivityType["CUSTOMER_REPLIED"] = "customer_replied";
    TicketActivityType["CUSTOMER_VIEWED"] = "customer_viewed";
    TicketActivityType["FEEDBACK_SUBMITTED"] = "feedback_submitted";
    TicketActivityType["SATISFACTION_RATED"] = "satisfaction_rated";
    TicketActivityType["KB_ARTICLE_LINKED"] = "kb_article_linked";
    TicketActivityType["KB_ARTICLE_UNLINKED"] = "kb_article_unlinked";
    TicketActivityType["SOLUTION_ADDED"] = "solution_added";
    TicketActivityType["SOLUTION_APPROVED"] = "solution_approved";
    TicketActivityType["VISIBILITY_CHANGED"] = "visibility_changed";
    TicketActivityType["PERMISSIONS_UPDATED"] = "permissions_updated";
    TicketActivityType["CONFIDENTIALITY_CHANGED"] = "confidentiality_changed";
    TicketActivityType["CUSTOM_FIELD_UPDATED"] = "custom_field_updated";
    TicketActivityType["CUSTOM_FIELD_ADDED"] = "custom_field_added";
    TicketActivityType["CUSTOM_FIELD_REMOVED"] = "custom_field_removed";
    TicketActivityType["INTEGRATION_TRIGGERED"] = "integration_triggered";
    TicketActivityType["WEBHOOK_SENT"] = "webhook_sent";
    TicketActivityType["EXTERNAL_REFERENCE_ADDED"] = "external_reference_added";
    TicketActivityType["EXTERNAL_REFERENCE_REMOVED"] = "external_reference_removed";
    TicketActivityType["SYSTEM_UPDATE"] = "system_update";
    TicketActivityType["MAINTENANCE_NOTE"] = "maintenance_note";
    TicketActivityType["ERROR_LOGGED"] = "error_logged";
    TicketActivityType["WARNING_LOGGED"] = "warning_logged";
    TicketActivityType["ARCHIVED"] = "archived";
    TicketActivityType["UNARCHIVED"] = "unarchived";
    TicketActivityType["HISTORY_CLEARED"] = "history_cleared";
    TicketActivityType["EXPORTED"] = "exported";
    TicketActivityType["REPORT_GENERATED"] = "report_generated";
    TicketActivityType["METRICS_UPDATED"] = "metrics_updated";
    TicketActivityType["ANALYTICS_EVENT"] = "analytics_event";
    TicketActivityType["COST_UPDATED"] = "cost_updated";
    TicketActivityType["BILLING_STATUS_CHANGED"] = "billing_status_changed";
    TicketActivityType["EXPENSE_ADDED"] = "expense_added";
    TicketActivityType["EXPENSE_REMOVED"] = "expense_removed";
    TicketActivityType["COMPLIANCE_CHECK"] = "compliance_check";
    TicketActivityType["AUDIT_LOG_CREATED"] = "audit_log_created";
    TicketActivityType["SECURITY_REVIEW"] = "security_review";
    TicketActivityType["GDPR_REQUEST"] = "gdpr_request";
})(TicketActivityType || (TicketActivityType = {}));


/***/ }),
/* 166 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateTicketDto: () => (/* binding */ UpdateTicketDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _create_ticket_dto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class UpdateTicketDto extends (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.PartialType)((0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.OmitType)(_create_ticket_dto__WEBPACK_IMPORTED_MODULE_1__.CreateTicketDto, ['type', 'source'])) {
    static _OPENAPI_METADATA_FACTORY() {
        return { status: { required: false, enum: (__webpack_require__(24).TicketStatus) }, statusNote: { required: false, type: () => String, maxLength: 1000 }, resolution: { required: false, type: () => String, maxLength: 1000 } };
    }
}
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsEnum)(_create_ticket_dto__WEBPACK_IMPORTED_MODULE_1__.TicketStatus),
    __metadata("design:type", String)
], UpdateTicketDto.prototype, "status", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.MaxLength)(1000),
    __metadata("design:type", String)
], UpdateTicketDto.prototype, "statusNote", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.MaxLength)(1000),
    __metadata("design:type", String)
], UpdateTicketDto.prototype, "resolution", void 0);


/***/ }),
/* 167 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CommentAttachment: () => (/* binding */ CommentAttachment),
/* harmony export */   CommentVisibility: () => (/* binding */ CommentVisibility),
/* harmony export */   CreateTicketCommentDto: () => (/* binding */ CreateTicketCommentDto),
/* harmony export */   TicketCommentResponseDto: () => (/* binding */ TicketCommentResponseDto),
/* harmony export */   UpdateTicketCommentDto: () => (/* binding */ UpdateTicketCommentDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CommentVisibility;
(function (CommentVisibility) {
    CommentVisibility["PUBLIC"] = "public";
    CommentVisibility["INTERNAL"] = "internal";
    CommentVisibility["PRIVATE"] = "private";
})(CommentVisibility || (CommentVisibility = {}));
class CommentAttachment {
    static _OPENAPI_METADATA_FACTORY() {
        return { fileName: { required: true, type: () => String }, fileSize: { required: true, type: () => Number }, mimeType: { required: true, type: () => String }, fileUrl: { required: true, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'The original name of the uploaded file' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], CommentAttachment.prototype, "fileName", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'The file size in bytes' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", Number)
], CommentAttachment.prototype, "fileSize", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'The MIME type of the file' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], CommentAttachment.prototype, "mimeType", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'The URL or path to the stored file' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], CommentAttachment.prototype, "fileUrl", void 0);
class CreateTicketCommentDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { content: { required: true, type: () => String }, isInternal: { required: true, type: () => Boolean }, visibility: { required: false, enum: (__webpack_require__(167).CommentVisibility) }, parentId: { required: false, type: () => String, format: "uuid" }, attachments: { required: false, type: () => [(__webpack_require__(167).CommentAttachment)] }, mentionedUserIds: { required: false, type: () => [String], format: "uuid" }, sendNotifications: { required: false, type: () => Boolean } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'The main content of the comment',
        example: 'This is a comment on the ticket'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], CreateTicketCommentDto.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        enum: CommentVisibility,
        description: 'Visibility level of the comment',
        default: CommentVisibility.PUBLIC
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(CommentVisibility),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], CreateTicketCommentDto.prototype, "visibility", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'ID of the parent comment if this is a reply',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], CreateTicketCommentDto.prototype, "parentId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        type: [CommentAttachment],
        description: 'Array of attachments for the comment'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => CommentAttachment),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Array)
], CreateTicketCommentDto.prototype, "attachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Mentioned user IDs in the comment',
        type: [String]
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Array)
], CreateTicketCommentDto.prototype, "mentionedUserIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Whether the comment should trigger notifications',
        default: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], CreateTicketCommentDto.prototype, "sendNotifications", void 0);
class UpdateTicketCommentDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { content: { required: false, type: () => String }, visibility: { required: false, enum: (__webpack_require__(167).CommentVisibility) }, attachments: { required: false, type: () => [(__webpack_require__(167).CommentAttachment)] } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Updated content of the comment',
        example: 'This is the updated comment'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], UpdateTicketCommentDto.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        enum: CommentVisibility,
        description: 'Updated visibility level of the comment'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(CommentVisibility),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], UpdateTicketCommentDto.prototype, "visibility", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        type: [CommentAttachment],
        description: 'Updated array of attachments'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => CommentAttachment),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Array)
], UpdateTicketCommentDto.prototype, "attachments", void 0);
class TicketCommentResponseDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, ticketId: { required: true, type: () => String }, authorId: { required: true, type: () => String }, content: { required: true, type: () => String }, visibility: { required: true, enum: (__webpack_require__(167).CommentVisibility) }, parentId: { required: false, type: () => String }, attachments: { required: true, type: () => [(__webpack_require__(167).CommentAttachment)] }, mentionedUserIds: { required: true, type: () => [String] }, createdAt: { required: true, type: () => Date }, updatedAt: { required: false, type: () => Date }, deletedAt: { required: false, type: () => Date }, isEdited: { required: true, type: () => Boolean }, replyCount: { required: true, type: () => Number } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Unique identifier of the comment',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    __metadata("design:type", String)
], TicketCommentResponseDto.prototype, "id", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'The ticket ID this comment belongs to',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    __metadata("design:type", String)
], TicketCommentResponseDto.prototype, "ticketId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'User ID of the comment author',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    __metadata("design:type", String)
], TicketCommentResponseDto.prototype, "authorId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'The main content of the comment',
        example: 'This is a comment on the ticket'
    }),
    __metadata("design:type", String)
], TicketCommentResponseDto.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        enum: CommentVisibility,
        description: 'Visibility level of the comment'
    }),
    __metadata("design:type", String)
], TicketCommentResponseDto.prototype, "visibility", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'ID of the parent comment if this is a reply',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    __metadata("design:type", String)
], TicketCommentResponseDto.prototype, "parentId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        type: [CommentAttachment],
        description: 'Array of attachments for the comment'
    }),
    __metadata("design:type", Array)
], TicketCommentResponseDto.prototype, "attachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Array of mentioned user IDs',
        type: [String]
    }),
    __metadata("design:type", Array)
], TicketCommentResponseDto.prototype, "mentionedUserIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Timestamp when the comment was created',
        example: '2024-02-10T12:00:00Z'
    }),
    __metadata("design:type", Date)
], TicketCommentResponseDto.prototype, "createdAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Timestamp when the comment was last updated',
        example: '2024-02-10T13:00:00Z'
    }),
    __metadata("design:type", Date)
], TicketCommentResponseDto.prototype, "updatedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Timestamp when the comment was deleted',
        example: '2024-02-10T14:00:00Z'
    }),
    __metadata("design:type", Date)
], TicketCommentResponseDto.prototype, "deletedAt", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Whether the comment has been edited',
        example: false
    }),
    __metadata("design:type", Boolean)
], TicketCommentResponseDto.prototype, "isEdited", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Number of replies to this comment',
        example: 0
    }),
    __metadata("design:type", Number)
], TicketCommentResponseDto.prototype, "replyCount", void 0);


/***/ }),
/* 168 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AssignmentNotification: () => (/* binding */ AssignmentNotification),
/* harmony export */   AssignmentResponseDto: () => (/* binding */ AssignmentResponseDto),
/* harmony export */   AssignmentRules: () => (/* binding */ AssignmentRules),
/* harmony export */   AssignmentType: () => (/* binding */ AssignmentType),
/* harmony export */   BulkTicketAssignmentDto: () => (/* binding */ BulkTicketAssignmentDto),
/* harmony export */   CreateTicketAssignmentDto: () => (/* binding */ CreateTicketAssignmentDto),
/* harmony export */   TicketAssignmentDto: () => (/* binding */ TicketAssignmentDto),
/* harmony export */   UpdateTicketAssignmentDto: () => (/* binding */ UpdateTicketAssignmentDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AssignmentType;
(function (AssignmentType) {
    AssignmentType["USER"] = "user";
    AssignmentType["TEAM"] = "team";
    AssignmentType["DEPARTMENT"] = "department";
    AssignmentType["AUTO"] = "auto";
    AssignmentType["ROUND_ROBIN"] = "round_robin";
})(AssignmentType || (AssignmentType = {}));
class AssignmentNotification {
    constructor() {
        this.notifyAssignee = true;
        this.notifyPreviousAssignee = true;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { notifyAssignee: { required: false, type: () => Boolean, default: true }, notifyPreviousAssignee: { required: false, type: () => Boolean, default: true }, customMessage: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Whether to notify the assignee',
        default: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], AssignmentNotification.prototype, "notifyAssignee", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Whether to notify the previous assignee',
        default: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], AssignmentNotification.prototype, "notifyPreviousAssignee", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Custom notification message',
        example: 'You have been assigned to handle this urgent support request.'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], AssignmentNotification.prototype, "customMessage", void 0);
class TicketAssignmentDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { assigneeId: { required: true, type: () => String, format: "uuid" }, note: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'The ID of the user to assign the ticket to',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], TicketAssignmentDto.prototype, "assigneeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Optional note about the assignment',
        example: 'Assigning to support team lead for escalated issue'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], TicketAssignmentDto.prototype, "note", void 0);
class AssignmentRules {
    constructor() {
        this.considerWorkload = true;
        this.checkSkillMatch = true;
        this.considerTimeZone = false;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { considerWorkload: { required: false, type: () => Boolean, default: true }, checkSkillMatch: { required: false, type: () => Boolean, default: true }, considerTimeZone: { required: false, type: () => Boolean, default: false }, requiredSkills: { required: false, type: () => [String] } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Whether to consider workload when assigning',
        default: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], AssignmentRules.prototype, "considerWorkload", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Whether to check for skill match',
        default: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], AssignmentRules.prototype, "checkSkillMatch", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Whether to consider time zones',
        default: false
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], AssignmentRules.prototype, "considerTimeZone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Required skills for the assignment',
        type: [String]
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Array)
], AssignmentRules.prototype, "requiredSkills", void 0);
class CreateTicketAssignmentDto {
    constructor() {
        this.isTemporary = false;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { type: { required: true, enum: (__webpack_require__(168).AssignmentType) }, assigneeId: { required: true, type: () => String, format: "uuid" }, notification: { required: false, type: () => (__webpack_require__(168).AssignmentNotification) }, rules: { required: false, type: () => (__webpack_require__(168).AssignmentRules) }, reason: { required: false, type: () => String }, notes: { required: false, type: () => [String] }, isTemporary: { required: false, type: () => Boolean, default: false }, temporaryUntil: { required: false, type: () => Date } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Type of assignment',
        enum: AssignmentType,
        example: AssignmentType.USER
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(AssignmentType),
    __metadata("design:type", String)
], CreateTicketAssignmentDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'ID of the assignee (user, team, or department)',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4'),
    __metadata("design:type", String)
], CreateTicketAssignmentDto.prototype, "assigneeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Notification settings for the assignment'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => AssignmentNotification),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", AssignmentNotification)
], CreateTicketAssignmentDto.prototype, "notification", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Assignment rules and preferences'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => AssignmentRules),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", AssignmentRules)
], CreateTicketAssignmentDto.prototype, "rules", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Reason for the assignment',
        example: 'Reassigned due to technical expertise required'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], CreateTicketAssignmentDto.prototype, "reason", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        type: [String],
        description: 'Additional notes or comments about the assignment'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Array)
], CreateTicketAssignmentDto.prototype, "notes", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Whether this is a temporary assignment',
        default: false
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], CreateTicketAssignmentDto.prototype, "isTemporary", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        type: Date,
        description: 'If temporary, when the assignment should end'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    __metadata("design:type", Date)
], CreateTicketAssignmentDto.prototype, "temporaryUntil", void 0);
class UpdateTicketAssignmentDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { type: { required: false, enum: (__webpack_require__(168).AssignmentType) }, assigneeId: { required: false, type: () => String, format: "uuid" }, notification: { required: false, type: () => (__webpack_require__(168).AssignmentNotification) }, rules: { required: false, type: () => (__webpack_require__(168).AssignmentRules) }, reason: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        enum: AssignmentType,
        description: 'Updated type of assignment'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(AssignmentType),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], UpdateTicketAssignmentDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Updated assignee ID',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4'),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], UpdateTicketAssignmentDto.prototype, "assigneeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Updated notification settings'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => AssignmentNotification),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", AssignmentNotification)
], UpdateTicketAssignmentDto.prototype, "notification", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Updated assignment rules'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => AssignmentRules),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", AssignmentRules)
], UpdateTicketAssignmentDto.prototype, "rules", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Reason for updating the assignment',
        example: 'Adjusted assignment due to workload balancing'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], UpdateTicketAssignmentDto.prototype, "reason", void 0);
class BulkTicketAssignmentDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { ticketIds: { required: true, type: () => [String], format: "uuid", minItems: 1 }, assigneeId: { required: true, type: () => String, format: "uuid" }, note: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Array of ticket IDs to assign',
        example: ['123e4567-e89b-12d3-a456-426614174000', '123e4567-e89b-12d3-a456-426614174001'],
        type: [String]
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    ArrayMinSize(1),
    __metadata("design:type", Array)
], BulkTicketAssignmentDto.prototype, "ticketIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'The ID of the user to assign the tickets to',
        example: '123e4567-e89b-12d3-a456-426614174000'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], BulkTicketAssignmentDto.prototype, "assigneeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Optional note about the bulk assignment',
        example: 'Assigning all pending tickets to the new support agent'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], BulkTicketAssignmentDto.prototype, "note", void 0);
class AssignmentResponseDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { success: { required: true, type: () => Boolean }, ticketId: { required: true, type: () => String }, assigneeId: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(168).AssignmentType) }, error: { required: false, type: () => String }, timestamp: { required: true, type: () => Date }, details: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Whether the assignment was successful'
    }),
    __metadata("design:type", Boolean)
], AssignmentResponseDto.prototype, "success", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'The ticket ID'
    }),
    __metadata("design:type", String)
], AssignmentResponseDto.prototype, "ticketId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'The assignee ID'
    }),
    __metadata("design:type", String)
], AssignmentResponseDto.prototype, "assigneeId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Type of assignment',
        enum: AssignmentType
    }),
    __metadata("design:type", String)
], AssignmentResponseDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Error message if assignment failed'
    }),
    __metadata("design:type", String)
], AssignmentResponseDto.prototype, "error", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({
        description: 'Timestamp of the assignment'
    }),
    __metadata("design:type", Date)
], AssignmentResponseDto.prototype, "timestamp", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Additional details about the assignment'
    }),
    __metadata("design:type", Object)
], AssignmentResponseDto.prototype, "details", void 0);
function ArrayMinSize(min, validationOptions) {
    return function (object, propertyName) {
        (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.registerDecorator)({
            name: 'arrayMinSize',
            target: object.constructor,
            propertyName: propertyName,
            options: validationOptions,
            constraints: [min],
            validator: {
                validate(value, args) {
                    const [minSize] = args.constraints;
                    return Array.isArray(value) && value.length >= minSize;
                },
                defaultMessage(args) {
                    const [minSize] = args.constraints;
                    return `Array must contain at least ${minSize} elements`;
                }
            }
        });
    };
}


/***/ }),
/* 169 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SortOrder: () => (/* binding */ SortOrder),
/* harmony export */   TicketQueryDto: () => (/* binding */ TicketQueryDto),
/* harmony export */   TicketSortField: () => (/* binding */ TicketSortField)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var TicketSortField;
(function (TicketSortField) {
    TicketSortField["CREATED_AT"] = "createdAt";
    TicketSortField["UPDATED_AT"] = "updatedAt";
    TicketSortField["PRIORITY"] = "priority";
    TicketSortField["STATUS"] = "status";
    TicketSortField["DUE_DATE"] = "dueDate";
    TicketSortField["LAST_ACTIVITY"] = "lastActivity";
})(TicketSortField || (TicketSortField = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
class TicketQueryDto {
    constructor() {
        this.page = 1;
        this.limit = 10;
        this.limit2 = 20;
        this.offset = 0;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { searchTerm: { required: false, type: () => String }, priority: { required: false, type: () => String }, type: { required: false, type: () => String }, assigneeId: { required: false, type: () => String, format: "uuid" }, contactId: { required: false, type: () => String, format: "uuid" }, departmentId: { required: false, type: () => String, format: "uuid" }, search: { required: false, type: () => String }, startDate: { required: false, type: () => String }, endDate: { required: false, type: () => String }, page: { required: false, type: () => Number, default: 1, minimum: 1 }, limit: { required: false, type: () => Number, default: 10, minimum: 1 }, status: { required: false, type: () => [String] }, priorities: { required: false, type: () => [String] }, category: { required: false, type: () => [String] }, assigneeIds: { required: false, type: () => [String], format: "uuid" }, creatorIds: { required: false, type: () => [String], format: "uuid" }, tags: { required: false, type: () => [String] }, createdAfter: { required: false, type: () => Date }, createdBefore: { required: false, type: () => Date }, updatedAfter: { required: false, type: () => Date }, updatedBefore: { required: false, type: () => Date }, dueDateStart: { required: false, type: () => Date }, dueDateEnd: { required: false, type: () => Date }, includeArchived: { required: false, type: () => Boolean }, hasUnreadUpdates: { required: false, type: () => Boolean }, hasAttachments: { required: false, type: () => Boolean }, sortField: { required: false, enum: (__webpack_require__(169).TicketSortField) }, sortOrder: { required: false, enum: (__webpack_require__(169).SortOrder) }, limit2: { required: false, type: () => Number, default: 20, minimum: 1, maximum: 100 }, offset: { required: false, type: () => Number, default: 0, minimum: 0 }, customFields: { required: false, type: () => Object }, relatedTicketIds: { required: false, type: () => [String], format: "uuid" }, requiresAttention: { required: false, type: () => Boolean }, hasSlaBreach: { required: false, type: () => Boolean }, slaStatus: { required: false, type: () => [String] }, fields: { required: false, type: () => [String] } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Search term to filter tickets by title or description',
        example: 'login issue'
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "searchTerm", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "priority", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "type", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "assigneeId", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "contactId", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "departmentId", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "search", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "startDate", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "endDate", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], TicketQueryDto.prototype, "page", void 0);
__decorate([
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    __metadata("design:type", Number)
], TicketQueryDto.prototype, "limit", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by status',
        isArray: true,
        example: ['OPEN', 'IN_PROGRESS']
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by priority',
        isArray: true,
        example: ['HIGH', 'URGENT']
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "priorities", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by category',
        isArray: true,
        example: ['TECHNICAL', 'BILLING']
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "category", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by assignee IDs',
        isArray: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "assigneeIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by creator IDs',
        isArray: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "creatorIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by tag names',
        isArray: true,
        example: ['bug', 'feature-request']
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets created after this date',
        type: Date
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    __metadata("design:type", Date)
], TicketQueryDto.prototype, "createdAfter", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets created before this date',
        type: Date
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    __metadata("design:type", Date)
], TicketQueryDto.prototype, "createdBefore", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets updated after this date',
        type: Date
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    __metadata("design:type", Date)
], TicketQueryDto.prototype, "updatedAfter", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets updated before this date',
        type: Date
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    __metadata("design:type", Date)
], TicketQueryDto.prototype, "updatedBefore", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by due date range start',
        type: Date
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    __metadata("design:type", Date)
], TicketQueryDto.prototype, "dueDateStart", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter tickets by due date range end',
        type: Date
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    __metadata("design:type", Date)
], TicketQueryDto.prototype, "dueDateEnd", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Include archived tickets in results',
        default: false
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketQueryDto.prototype, "includeArchived", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Only return tickets that have unread updates',
        default: false
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketQueryDto.prototype, "hasUnreadUpdates", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Only return tickets that have attachments',
        default: false
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketQueryDto.prototype, "hasAttachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Field to sort tickets by',
        enum: TicketSortField,
        default: TicketSortField.CREATED_AT
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(TicketSortField),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "sortField", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Sort order direction',
        enum: SortOrder,
        default: SortOrder.DESC
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(SortOrder),
    __metadata("design:type", String)
], TicketQueryDto.prototype, "sortOrder", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Number of tickets to return',
        minimum: 1,
        maximum: 100,
        default: 20
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], TicketQueryDto.prototype, "limit2", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Number of tickets to skip',
        minimum: 0,
        default: 0
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], TicketQueryDto.prototype, "offset", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Custom field filters',
        type: 'object',
        additionalProperties: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Object),
    __metadata("design:type", Object)
], TicketQueryDto.prototype, "customFields", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Relation IDs to filter by',
        isArray: true
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "relatedTicketIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Get tickets requiring attention',
        default: false
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketQueryDto.prototype, "requiresAttention", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Get tickets with SLA breaches',
        default: false
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], TicketQueryDto.prototype, "hasSlaBreach", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Filter by specific SLA status',
        example: ['warning', 'breached']
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "slaStatus", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({
        description: 'Fields to include in the response',
        isArray: true,
        example: ['id', 'title', 'status']
    }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], TicketQueryDto.prototype, "fields", void 0);


/***/ }),
/* 170 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketActivityService: () => (/* binding */ TicketActivityService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(164);
/* harmony import */ var _entities_ticket_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(23);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var TicketActivityService_1;







let TicketActivityService = TicketActivityService_1 = class TicketActivityService {
    recordActivity(arg0) {
        throw new Error('Method not implemented.');
    }
    constructor(activityRepository, ticketRepository, userRepository, eventEmitter) {
        this.activityRepository = activityRepository;
        this.ticketRepository = ticketRepository;
        this.userRepository = userRepository;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(TicketActivityService_1.name);
    }
    async logActivity(options) {
        try {
            const ticket = await this.ticketRepository.findOne({
                where: { id: options.ticketId }
            });
            if (!ticket) {
                throw new Error(`Ticket ${options.ticketId} not found`);
            }
            const activity = this.activityRepository.create({
                ticketId: options.ticketId,
                performedById: options.performedById,
                type: options.type,
                data: this.sanitizeActivityData(options.data || {}),
                metadata: options.metadata || {},
                timestamp: new Date()
            });
            await this.activityRepository.save(activity);
            this.eventEmitter.emit('ticket.activity.created', {
                activity,
                ticket
            });
            return activity;
        }
        catch (error) {
            this.logger.error('Error logging ticket activity:', error);
            throw error;
        }
    }
    async getTicketActivities(ticketId, options = {}) {
        var _a;
        try {
            const queryBuilder = this.activityRepository
                .createQueryBuilder('activity')
                .where('activity.ticketId = :ticketId', { ticketId });
            if ((_a = options.types) === null || _a === void 0 ? void 0 : _a.length) {
                queryBuilder.andWhere('activity.type IN (:...types)', { types: options.types });
            }
            if (options.startDate) {
                queryBuilder.andWhere('activity.timestamp >= :startDate', { startDate: options.startDate });
            }
            if (options.endDate) {
                queryBuilder.andWhere('activity.timestamp <= :endDate', { endDate: options.endDate });
            }
            queryBuilder
                .leftJoinAndSelect('activity.performedBy', 'user')
                .orderBy('activity.timestamp', 'DESC');
            if (options.limit) {
                queryBuilder.take(options.limit);
            }
            if (options.offset) {
                queryBuilder.skip(options.offset);
            }
            const [activities, total] = await queryBuilder.getManyAndCount();
            return { activities, total };
        }
        catch (error) {
            this.logger.error(`Error fetching activities for ticket ${ticketId}:`, error);
            throw error;
        }
    }
    async getUserActivities(userId, options = {}) {
        try {
            const queryBuilder = this.activityRepository
                .createQueryBuilder('activity')
                .where('activity.performedById = :userId', { userId });
            if (options.startDate) {
                queryBuilder.andWhere('activity.timestamp >= :startDate', { startDate: options.startDate });
            }
            if (options.endDate) {
                queryBuilder.andWhere('activity.timestamp <= :endDate', { endDate: options.endDate });
            }
            queryBuilder
                .leftJoinAndSelect('activity.ticket', 'ticket')
                .orderBy('activity.timestamp', 'DESC');
            if (options.limit) {
                queryBuilder.take(options.limit);
            }
            if (options.offset) {
                queryBuilder.skip(options.offset);
            }
            const [activities, total] = await queryBuilder.getManyAndCount();
            return { activities, total };
        }
        catch (error) {
            this.logger.error(`Error fetching activities for user ${userId}:`, error);
            throw error;
        }
    }
    async getActivityDetails(activityId) {
        try {
            const activity = await this.activityRepository.findOne({
                where: { id: activityId },
                relations: ['performedBy', 'ticket']
            });
            if (!activity) {
                throw new Error(`Activity ${activityId} not found`);
            }
            return activity;
        }
        catch (error) {
            this.logger.error(`Error fetching activity details for ${activityId}:`, error);
            throw error;
        }
    }
    async getActivitySummary(ticketId, startDate, endDate) {
        try {
            const activities = await this.activityRepository
                .createQueryBuilder('activity')
                .select('activity.type', 'type')
                .addSelect('COUNT(*)', 'count')
                .where('activity.ticketId = :ticketId', { ticketId })
                .andWhere('activity.timestamp BETWEEN :startDate AND :endDate', { startDate, endDate })
                .groupBy('activity.type')
                .getRawMany();
            return activities.reduce((acc, curr) => {
                acc[curr.type] = parseInt(curr.count, 10);
                return acc;
            }, {});
        }
        catch (error) {
            this.logger.error(`Error generating activity summary for ticket ${ticketId}:`, error);
            throw error;
        }
    }
    sanitizeActivityData(data) {
        const sensitiveFields = ['password', 'token', 'secret', 'key'];
        const sanitized = Object.assign({}, data);
        const sanitizeObject = (obj) => {
            for (const [key, value] of Object.entries(obj)) {
                if (sensitiveFields.some(field => key.toLowerCase().includes(field))) {
                    obj[key] = '[REDACTED]';
                }
                else if (typeof value === 'object' && value !== null) {
                    sanitizeObject(value);
                }
            }
        };
        sanitizeObject(sanitized);
        return sanitized;
    }
    async generateActivityReport(ticketId, startDate, endDate) {
        try {
            const activities = await this.activityRepository.find({
                where: {
                    ticketId,
                    timestamp: Between(startDate, endDate)
                },
                relations: ['performedBy'],
                order: { timestamp: 'ASC' }
            });
            const groupedActivities = activities.reduce((acc, activity) => {
                const date = activity.timestamp.toISOString().split('T')[0];
                if (!acc[date]) {
                    acc[date] = [];
                }
                acc[date].push(activity);
                return acc;
            }, {});
            const statistics = {
                totalActivities: activities.length,
                byType: this.calculateActivityTypeStats(activities),
                byUser: this.calculateUserActivityStats(activities),
                averageActivitiesPerDay: activities.length / ((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24)),
            };
            return {
                ticketId,
                period: { startDate, endDate },
                statistics,
                activities: groupedActivities,
            };
        }
        catch (error) {
            this.logger.error(`Error generating activity report for ticket ${ticketId}:`, error);
            throw error;
        }
    }
    calculateActivityTypeStats(activities) {
        return activities.reduce((acc, activity) => {
            acc[activity.type] = (acc[activity.type] || 0) + 1;
            return acc;
        }, {});
    }
    calculateUserActivityStats(activities) {
        return activities.reduce((acc, activity) => {
            const userId = activity.performedById;
            acc[userId] = (acc[userId] || 0) + 1;
            return acc;
        }, {});
    }
};
TicketActivityService = TicketActivityService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_4__.TicketActivity)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_5__.Ticket)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_6__.User)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], TicketActivityService);

function Between(startDate, endDate) {
    throw new Error('Function not implemented.');
}


/***/ }),
/* 171 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketEscalationService: () => (/* binding */ TicketEscalationService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(23);
/* harmony import */ var _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(164);
/* harmony import */ var _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(165);
/* harmony import */ var _enums_ticket_status_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(172);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(46);
/* harmony import */ var _organizations_services_organizations_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(107);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var TicketEscalationService_1;










let TicketEscalationService = TicketEscalationService_1 = class TicketEscalationService {
    constructor(ticketRepository, activityRepository, notificationsService, organizationsService, configService) {
        this.ticketRepository = ticketRepository;
        this.activityRepository = activityRepository;
        this.notificationsService = notificationsService;
        this.organizationsService = organizationsService;
        this.configService = configService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(TicketEscalationService_1.name);
        this.escalationRules = {
            HIGH: {
                priority: 'HIGH',
                responseTime: 1,
                resolutionTime: 4,
                escalationLevels: [
                    {
                        level: 1,
                        timeThreshold: 1,
                        notifyRoles: ['SUPERVISOR']
                    },
                    {
                        level: 2,
                        timeThreshold: 2,
                        notifyRoles: ['MANAGER']
                    },
                    {
                        level: 3,
                        timeThreshold: 4,
                        notifyRoles: ['DIRECTOR']
                    }
                ]
            },
            MEDIUM: {
                priority: 'MEDIUM',
                responseTime: 4,
                resolutionTime: 24,
                escalationLevels: [
                    {
                        level: 1,
                        timeThreshold: 4,
                        notifyRoles: ['SUPERVISOR']
                    },
                    {
                        level: 2,
                        timeThreshold: 8,
                        notifyRoles: ['MANAGER']
                    }
                ]
            },
            LOW: {
                priority: 'LOW',
                responseTime: 24,
                resolutionTime: 72,
                escalationLevels: [
                    {
                        level: 1,
                        timeThreshold: 24,
                        notifyRoles: ['SUPERVISOR']
                    }
                ]
            }
        };
    }
    async checkTicketsForEscalation() {
        const unresolved = await this.ticketRepository.find({
            where: {
                status: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.In)([_enums_ticket_status_enum__WEBPACK_IMPORTED_MODULE_7__.TicketStatus.OPEN, _enums_ticket_status_enum__WEBPACK_IMPORTED_MODULE_7__.TicketStatus.IN_PROGRESS])
            },
            relations: ['assignee', 'organization', 'activities']
        });
        for (const ticket of unresolved) {
            const currentLevel = this.getCurrentEscalationLevel(ticket);
            if (currentLevel < 3) {
                await this.checkTicketEscalation(ticket);
            }
        }
    }
    getCurrentEscalationLevel(ticket) {
        var _a, _b;
        const escalationActivities = ((_a = ticket.activities) === null || _a === void 0 ? void 0 : _a.filter(activity => activity.type === _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_6__.TicketActivityType.ESCALATION)) || [];
        if (escalationActivities.length > 0) {
            const latestEscalation = escalationActivities.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())[0];
            return ((_b = latestEscalation.metadata) === null || _b === void 0 ? void 0 : _b.newLevel) || 0;
        }
        return 0;
    }
    async checkTicketEscalation(ticket) {
        const rule = this.escalationRules[ticket.priority];
        if (!rule)
            return;
        const timeElapsed = this.getHoursElapsed(ticket.createdAt);
        const currentLevel = this.getCurrentEscalationLevel(ticket);
        const nextEscalation = rule.escalationLevels.find(level => level.level === currentLevel + 1 && timeElapsed >= level.timeThreshold);
        if (nextEscalation) {
            await this.escalateTicket(ticket, nextEscalation);
        }
    }
    async escalateTicket(ticket, escalation) {
        try {
            const activityData = {
                ticket,
                type: _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_6__.TicketActivityType.ESCALATION,
                metadata: {
                    description: `Ticket escalated to level ${escalation.level}`,
                    previousLevel: this.getCurrentEscalationLevel(ticket),
                    newLevel: escalation.level,
                    reason: 'SLA breach'
                }
            };
            const activity = this.activityRepository.create(activityData);
            await this.activityRepository.save(activity);
            await this.notifyEscalation(ticket, escalation);
        }
        catch (error) {
            this.logger.error(`Failed to escalate ticket ${ticket.id}:`, error);
        }
    }
    async notifyEscalation(ticket, escalation) {
        try {
            const staff = await this.getOrganizationStaffByRoles(ticket.organizationId, escalation.notifyRoles);
            for (const user of staff) {
                await this.notificationsService.send({
                    userId: user.id,
                    type: 'TICKET_ESCALATION',
                    title: `Ticket #${ticket.id} Escalated`,
                    message: `Ticket has been escalated to level ${escalation.level}`,
                    data: {
                        ticketId: ticket.id,
                        escalationLevel: escalation.level,
                        priority: ticket.priority
                    }
                });
            }
        }
        catch (error) {
            this.logger.error(`Failed to notify escalation for ticket ${ticket.id}:`, error);
        }
    }
    async getOrganizationStaffByRoles(organizationId, roles) {
        try {
            const organization = await this.organizationsService.findOne(organizationId);
            if (!organization)
                return [];
            const staff = organization.staff || [];
            return staff.filter((member) => roles.includes(member.role));
        }
        catch (error) {
            this.logger.error(`Failed to get staff for organization ${organizationId}:`, error);
            return [];
        }
    }
    getHoursElapsed(date) {
        const elapsed = Date.now() - date.getTime();
        return elapsed / (1000 * 60 * 60);
    }
    async getTicketSlaStatus(ticketId) {
        const ticket = await this.ticketRepository.findOne({
            where: { id: ticketId },
            relations: ['activities']
        });
        if (!ticket) {
            throw new Error('Ticket not found');
        }
        const rule = this.escalationRules[ticket.priority];
        const firstResponse = ticket.activities.find(a => a.type === _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_6__.TicketActivityType.RESPONSE);
        const resolution = ticket.activities.find(a => a.type === _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_6__.TicketActivityType.RESOLUTION);
        return {
            responseTime: {
                target: rule.responseTime,
                actual: firstResponse ?
                    this.getHoursElapsed(ticket.createdAt) : null,
                breached: !firstResponse &&
                    this.getHoursElapsed(ticket.createdAt) > rule.responseTime
            },
            resolutionTime: {
                target: rule.resolutionTime,
                actual: resolution ?
                    this.getHoursElapsed(ticket.createdAt) : null,
                breached: !resolution &&
                    this.getHoursElapsed(ticket.createdAt) > rule.resolutionTime
            }
        };
    }
    async checkSlaBreachEscalation(ticketId) {
        const slaStatus = await this.getTicketSlaStatus(ticketId);
        const ticket = await this.ticketRepository.findOne({
            where: { id: ticketId },
            relations: ['activities']
        });
        if (!ticket)
            return;
        if (slaStatus.responseTime.breached || slaStatus.resolutionTime.breached) {
            const rule = this.escalationRules[ticket.priority];
            const currentLevel = this.getCurrentEscalationLevel(ticket);
            const nextLevel = rule.escalationLevels.find(level => level.level === currentLevel + 1);
            if (nextLevel) {
                await this.escalateTicket(ticket, nextLevel);
            }
        }
    }
};
TicketEscalationService = TicketEscalationService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__.Ticket)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_5__.TicketActivity)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_8__.NotificationsService,
        _organizations_services_organizations_service__WEBPACK_IMPORTED_MODULE_9__.OrganizationsService,
        _nestjs_config__WEBPACK_IMPORTED_MODULE_3__.ConfigService])
], TicketEscalationService);



/***/ }),
/* 172 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketStatus: () => (/* binding */ TicketStatus)
/* harmony export */ });
var TicketStatus;
(function (TicketStatus) {
    TicketStatus["NEW"] = "NEW";
    TicketStatus["OPEN"] = "OPEN";
    TicketStatus["IN_PROGRESS"] = "IN_PROGRESS";
    TicketStatus["RESOLVED"] = "RESOLVED";
    TicketStatus["CLOSED"] = "CLOSED";
})(TicketStatus || (TicketStatus = {}));


/***/ }),
/* 173 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketListener: () => (/* binding */ TicketListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _entities_ticket_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(23);
/* harmony import */ var _services_ticket_activity_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(170);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46);
/* harmony import */ var _modules_notifications_dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40);
/* harmony import */ var _users_services_users_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








let TicketListener = class TicketListener {
    constructor(activityService, notificationsService, usersService) {
        this.activityService = activityService;
        this.notificationsService = notificationsService;
        this.usersService = usersService;
    }
    async handleTicketCreated(ticket) {
        await this.activityService.recordActivity({
            ticketId: ticket.id,
            organizationId: ticket.organizationId,
            userId: ticket.createdById,
            action: 'CREATED',
            details: { status: ticket.status },
        });
        if (ticket.assigneeId) {
            await this.notificationsService.create({
                type: 'TICKET_ASSIGNED',
                title: 'New Ticket Assigned',
                content: `Ticket #${ticket.referenceNumber} has been assigned to you`,
                recipients: [{ userId: ticket.assigneeId }],
                organizationId: ticket.organizationId,
                senderId: ticket.createdById,
            });
        }
    }
    async handleTicketEscalated(payload) {
        const { ticket, reason } = payload;
        await this.activityService.recordActivity({
            ticketId: ticket.id,
            organizationId: ticket.organizationId,
            userId: ticket.escalatedById || '',
            action: 'ESCALATED',
            details: { status: ticket.status },
        });
        const adminUsers = await this.findAdminUsers(ticket.organizationId);
        if (adminUsers.length > 0) {
            await this.notificationsService.create({
                type: _modules_notifications_dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationType.TICKET_ESCALATED,
                title: 'Ticket Escalated',
                content: `Ticket #${ticket.referenceNumber} has been escalated: ${reason}`,
                priority: _modules_notifications_dto_create_notification_dto__WEBPACK_IMPORTED_MODULE_5__.NotificationPriority.HIGH,
                recipients: adminUsers.map((admin) => ({ userId: admin.id })),
                organizationId: ticket.organizationId,
                senderId: ticket.escalatedById || '',
            });
        }
    }
    async findAdminUsers(organizationId) {
        try {
            const result = await this.usersService.findAll({
                organizationId,
                role: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_7__.Role.ADMIN,
                isActive: true,
                page: 1,
                limit: 50
            });
            return result.items.map(user => ({ id: user.id }));
        }
        catch (error) {
            console.error('Error finding admin users:', error);
            return [];
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('ticket.created'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_2__.Ticket]),
    __metadata("design:returntype", Promise)
], TicketListener.prototype, "handleTicketCreated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('ticket.escalated'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], TicketListener.prototype, "handleTicketEscalated", null);
TicketListener = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_services_ticket_activity_service__WEBPACK_IMPORTED_MODULE_3__.TicketActivityService,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_4__.NotificationsService,
        _users_services_users_service__WEBPACK_IMPORTED_MODULE_6__.UsersService])
], TicketListener);



/***/ }),
/* 174 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketAssignmentListener: () => (/* binding */ TicketAssignmentListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(23);
/* harmony import */ var _entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(164);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(46);
/* harmony import */ var _users_services_users_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(45);
/* harmony import */ var _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(165);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};









let TicketAssignmentListener = class TicketAssignmentListener {
    constructor(ticketRepository, activityRepository, notificationsService, usersService) {
        this.ticketRepository = ticketRepository;
        this.activityRepository = activityRepository;
        this.notificationsService = notificationsService;
        this.usersService = usersService;
    }
    async handleTicketAssigned(event) {
        await this.createAssignmentActivity(event);
        await this.sendAssignmentNotifications(event);
    }
    async createAssignmentActivity(event) {
        const activity = this.activityRepository.create({
            ticketId: event.ticketId,
            type: _enums_ticket_activity_type_enum__WEBPACK_IMPORTED_MODULE_8__.TicketActivityType.ASSIGNED,
            metadata: {
                previousAssigneeId: event.previousAssigneeId,
                newAssigneeId: event.newAssigneeId,
                assignedById: event.assignedById
            }
        });
        await this.activityRepository.save(activity);
    }
    async sendAssignmentNotifications(event) {
        const ticket = await this.ticketRepository.findOne({
            where: { id: event.ticketId },
            relations: ['organization']
        });
        if (!ticket)
            return;
        if (event.newAssigneeId) {
            const newAssignee = await this.usersService.findById(event.newAssigneeId);
            if (newAssignee) {
                await this.notificationsService.send({
                    userId: newAssignee.id,
                    type: 'TICKET_ASSIGNED',
                    title: `Ticket #${ticket.id} Assigned to You`,
                    message: `You have been assigned to ticket: ${ticket.title}`,
                    data: {
                        ticketId: ticket.id,
                        organizationId: ticket.organizationId
                    }
                });
            }
        }
        if (event.previousAssigneeId) {
            const previousAssignee = await this.usersService.findById(event.previousAssigneeId);
            if (previousAssignee) {
                await this.notificationsService.send({
                    userId: previousAssignee.id,
                    type: 'TICKET_UNASSIGNED',
                    title: `Ticket #${ticket.id} Reassigned`,
                    message: `You have been unassigned from ticket: ${ticket.title}`,
                    data: {
                        ticketId: ticket.id,
                        organizationId: ticket.organizationId
                    }
                });
            }
        }
    }
    async handleAutoAssignment(payload) {
        const ticket = await this.ticketRepository.findOne({
            where: { id: payload.ticketId }
        });
        if (!ticket || ticket.assigneeId)
            return;
        const availableAgent = await this.findAvailableAgent(payload.organizationId, payload.priority);
        if (availableAgent) {
            await this.ticketRepository.update(payload.ticketId, {
                assigneeId: availableAgent.id
            });
            await this.handleTicketAssigned({
                ticketId: payload.ticketId,
                newAssigneeId: availableAgent.id,
                assignedById: 'SYSTEM'
            });
        }
    }
    async findAvailableAgent(organizationId, priority) {
        const supportAgents = await this.usersService.findByRole('SUPPORT', organizationId);
        if (!supportAgents || supportAgents.length === 0) {
            return null;
        }
        return supportAgents[0];
    }
    async handleAgentAvailabilityChange(payload) {
        if (!payload.isAvailable) {
            const assignedTickets = await this.ticketRepository.find({
                where: {
                    assigneeId: payload.userId,
                    status: (0,typeorm__WEBPACK_IMPORTED_MODULE_3__.In)(['OPEN', 'IN_PROGRESS'])
                }
            });
            for (const ticket of assignedTickets) {
                await this.handleAutoAssignment({
                    ticketId: ticket.id,
                    organizationId: ticket.organizationId,
                    priority: ticket.priority
                });
            }
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('ticket.assigned'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], TicketAssignmentListener.prototype, "handleTicketAssigned", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('ticket.auto_assignment.needed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], TicketAssignmentListener.prototype, "handleAutoAssignment", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('user.availability.changed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], TicketAssignmentListener.prototype, "handleAgentAvailabilityChange", null);
TicketAssignmentListener = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_ticket_entity__WEBPACK_IMPORTED_MODULE_4__.Ticket)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_ticket_activity_entity__WEBPACK_IMPORTED_MODULE_5__.TicketActivity)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_6__.NotificationsService,
        _users_services_users_service__WEBPACK_IMPORTED_MODULE_7__.UsersService])
], TicketAssignmentListener);



/***/ }),
/* 175 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TicketEscalationListener: () => (/* binding */ TicketEscalationListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_tickets_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(161);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(46);
/* harmony import */ var _users_services_users_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






let TicketEscalationListener = class TicketEscalationListener {
    constructor(ticketsService, notificationsService, usersService) {
        this.ticketsService = ticketsService;
        this.notificationsService = notificationsService;
        this.usersService = usersService;
    }
    async handleSlaBreachEvent(payload) {
        const { ticketId, organizationId, slaType, elapsedTime } = payload;
        const ticket = await this.ticketsService.findOne(ticketId, organizationId);
        const admins = await this.findAdmins(organizationId);
        if (admins.length === 0) {
            console.warn('No admins to notify for SLA breach');
            return;
        }
        const typeMessage = slaType === 'response'
            ? 'Response time SLA breached'
            : 'Resolution time SLA breached';
        const formattedTime = this.formatElapsedTime(elapsedTime);
        for (const admin of admins) {
            await this.notificationsService.create({
                type: 'SLA_BREACH',
                title: `${typeMessage} for Ticket #${ticket.referenceNumber}`,
                content: `${typeMessage} (${formattedTime}) for Ticket #${ticket.referenceNumber}`,
                priority: 'HIGH',
                recipients: [{ userId: admin.id }],
                organizationId: organizationId,
                senderId: 'system'
            });
        }
    }
    async handleEscalationLevelChanged(payload) {
        const { ticketId, organizationId, previousLevel, newLevel } = payload;
        const ticket = await this.ticketsService.findOne(ticketId, organizationId);
        const admins = await this.findAdmins(organizationId);
        if (admins.length === 0) {
            console.warn('No admins to notify for escalation level change');
            return;
        }
        for (const admin of admins) {
            await this.notificationsService.create({
                type: 'ESCALATION_LEVEL_CHANGED',
                title: `Ticket #${ticket.referenceNumber} Escalation Level Changed`,
                content: `Ticket #${ticket.referenceNumber} escalation level changed from ${previousLevel} to ${newLevel}`,
                priority: 'MEDIUM',
                recipients: [{ userId: admin.id }],
                organizationId: organizationId,
                senderId: 'system'
            });
        }
    }
    async findAdmins(organizationId) {
        try {
            const result = await this.usersService.findAll({
                organizationId,
                role: _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN,
                isActive: true,
                page: 1,
                limit: 50
            });
            return result.items;
        }
        catch (error) {
            console.error('Error finding admin users:', error);
            return [];
        }
    }
    formatElapsedTime(milliseconds) {
        const seconds = Math.floor(milliseconds / 1000);
        const minutes = Math.floor(seconds / 60);
        const hours = Math.floor(minutes / 60);
        if (hours > 0) {
            return `${hours}h ${minutes % 60}m`;
        }
        else if (minutes > 0) {
            return `${minutes}m ${seconds % 60}s`;
        }
        else {
            return `${seconds}s`;
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('ticket.sla.breach'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], TicketEscalationListener.prototype, "handleSlaBreachEvent", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('ticket.escalation.levelchanged'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], TicketEscalationListener.prototype, "handleEscalationLevelChanged", null);
TicketEscalationListener = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_services_tickets_service__WEBPACK_IMPORTED_MODULE_2__.TicketsService,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_3__.NotificationsService,
        _users_services_users_service__WEBPACK_IMPORTED_MODULE_4__.UsersService])
], TicketEscalationListener);



/***/ }),
/* 176 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentsModule: () => (/* binding */ DepartmentsModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_departments_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(177);
/* harmony import */ var _services_department_members_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(178);
/* harmony import */ var _services_department_hierarchy_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(179);
/* harmony import */ var _services_department_audit_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(180);
/* harmony import */ var _controllers_departments_controller__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(182);
/* harmony import */ var _entities_department_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(27);
/* harmony import */ var _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(181);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(21);
/* harmony import */ var _listeners_department_assignment_listener__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(189);
/* harmony import */ var _listeners_department_audit_listener__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(190);
/* harmony import */ var _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(104);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(14);
/* harmony import */ var _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(89);
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(118);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
















let DepartmentsModule = class DepartmentsModule {
};
DepartmentsModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_department_entity__WEBPACK_IMPORTED_MODULE_7__.Department,
                _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_8__.DepartmentAuditLog,
                _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__.User
            ]),
            _organizations_organizations_module__WEBPACK_IMPORTED_MODULE_12__.OrganizationsModule,
            _users_users_module__WEBPACK_IMPORTED_MODULE_13__.UsersModule,
            _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_14__.NotificationsModule,
            _auth_auth_module__WEBPACK_IMPORTED_MODULE_15__.AuthModule
        ],
        controllers: [
            _controllers_departments_controller__WEBPACK_IMPORTED_MODULE_6__.DepartmentsController
        ],
        providers: [
            _services_departments_service__WEBPACK_IMPORTED_MODULE_2__.DepartmentsService,
            _services_department_members_service__WEBPACK_IMPORTED_MODULE_3__.DepartmentMembersService,
            _services_department_hierarchy_service__WEBPACK_IMPORTED_MODULE_4__.DepartmentHierarchyService,
            _services_department_audit_service__WEBPACK_IMPORTED_MODULE_5__.DepartmentAuditService,
            _listeners_department_assignment_listener__WEBPACK_IMPORTED_MODULE_10__.DepartmentAssignmentListener,
            _listeners_department_audit_listener__WEBPACK_IMPORTED_MODULE_11__.DepartmentAuditListener
        ],
        exports: [
            _services_departments_service__WEBPACK_IMPORTED_MODULE_2__.DepartmentsService,
            _services_department_members_service__WEBPACK_IMPORTED_MODULE_3__.DepartmentMembersService,
            _services_department_hierarchy_service__WEBPACK_IMPORTED_MODULE_4__.DepartmentHierarchyService,
            _services_department_audit_service__WEBPACK_IMPORTED_MODULE_5__.DepartmentAuditService,
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule
        ]
    })
], DepartmentsModule);



/***/ }),
/* 177 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentsService: () => (/* binding */ DepartmentsService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_department_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(27);
/* harmony import */ var _organizations_services_organizations_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(107);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};






let DepartmentsService = class DepartmentsService {
    constructor(departmentRepository, organizationsService, eventEmitter) {
        this.departmentRepository = departmentRepository;
        this.organizationsService = organizationsService;
        this.eventEmitter = eventEmitter;
    }
    async create(createDepartmentDto, userId, organizationId) {
        const department = this.departmentRepository.create(Object.assign(Object.assign({}, createDepartmentDto), { organizationId, createdById: userId, updatedById: userId, isActive: true }));
        return await this.departmentRepository.save(department);
    }
    async findAll(organizationId, query) {
        const where = { organizationId };
        if (query.isActive !== undefined) {
            where.isActive = query.isActive;
        }
        if (query.parentDepartmentId) {
            where.parentDepartmentId = query.parentDepartmentId;
        }
        if (query.managerId) {
            where.managerId = query.managerId;
        }
        return this.departmentRepository.findAndCount({
            where,
            order: { createdAt: 'DESC' },
            skip: query.skip,
            take: query.take,
            relations: query.relations || [],
        });
    }
    async findById(id, organizationId, relations) {
        const where = { id };
        if (organizationId) {
            where.organizationId = organizationId;
        }
        const department = await this.departmentRepository.findOne({
            where,
            relations: relations || []
        });
        if (!department) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Department with ID ${id} not found`);
        }
        return department;
    }
    async update(id, updateDepartmentDto, userId) {
        const department = await this.findById(id);
        if (updateDepartmentDto.parentDepartmentId) {
            await this.validateParentDepartment(id, updateDepartmentDto.parentDepartmentId);
        }
        const updatedDepartment = await this.departmentRepository.save(Object.assign(Object.assign(Object.assign({}, department), updateDepartmentDto), { updatedById: userId }));
        this.eventEmitter.emit('department.updated', {
            departmentId: id,
            organizationId: department.organizationId,
            updatedById: userId,
            changes: updateDepartmentDto,
        });
        return updatedDepartment;
    }
    async delete(id, userId) {
        const department = await this.findById(id);
        const hasChildren = await this.departmentRepository.count({
            where: { parentDepartmentId: id },
        });
        if (hasChildren) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Cannot delete department with child departments');
        }
        await this.departmentRepository.softDelete(id);
        this.eventEmitter.emit('department.deleted', {
            departmentId: id,
            organizationId: department.organizationId,
            deletedById: userId,
        });
    }
    async validateParentDepartment(departmentId, parentId) {
        if (departmentId === parentId) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Department cannot be its own parent');
        }
        const childDepartments = await this.findAllChildren(departmentId);
        if (childDepartments.some(dept => dept.id === parentId)) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Cannot set a child department as parent department');
        }
    }
    async findAllChildren(departmentId) {
        const children = await this.departmentRepository.find({
            where: { parentDepartmentId: departmentId },
        });
        const allChildren = [...children];
        for (const child of children) {
            const grandChildren = await this.findAllChildren(child.id);
            allChildren.push(...grandChildren);
        }
        return allChildren;
    }
    async updateMemberCount(id) {
        const count = await this.departmentRepository
            .createQueryBuilder('department')
            .leftJoin('department.members', 'member')
            .where('department.id = :id', { id })
            .getCount();
        await this.departmentRepository.update(id, { memberCount: count });
    }
};
DepartmentsService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_department_entity__WEBPACK_IMPORTED_MODULE_4__.Department)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _organizations_services_organizations_service__WEBPACK_IMPORTED_MODULE_5__.OrganizationsService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], DepartmentsService);



/***/ }),
/* 178 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentMembersService: () => (/* binding */ DepartmentMembersService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_department_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(27);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21);
/* harmony import */ var _users_services_users_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45);
/* harmony import */ var _departments_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(177);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};








let DepartmentMembersService = class DepartmentMembersService {
    constructor(departmentRepository, userRepository, usersService, departmentsService, eventEmitter) {
        this.departmentRepository = departmentRepository;
        this.userRepository = userRepository;
        this.usersService = usersService;
        this.departmentsService = departmentsService;
        this.eventEmitter = eventEmitter;
    }
    async addMember(departmentId, userId, performedById) {
        const department = await this.departmentsService.findById(departmentId);
        const user = await this.usersService.findById(userId);
        const isMember = await this.departmentRepository
            .createQueryBuilder('department')
            .innerJoin('department.members', 'member')
            .where('department.id = :departmentId', { departmentId })
            .andWhere('member.id = :userId', { userId })
            .getExists();
        if (isMember) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('User is already a member of this department');
        }
        await this.departmentRepository
            .createQueryBuilder()
            .relation(_entities_department_entity__WEBPACK_IMPORTED_MODULE_4__.Department, 'members')
            .of(department)
            .add(user);
        await this.departmentsService.updateMemberCount(departmentId);
        this.eventEmitter.emit('department.member.added', {
            departmentId,
            userId,
            performedById,
            organizationId: department.organizationId,
        });
    }
    async removeMember(departmentId, userId, performedById) {
        const department = await this.departmentsService.findById(departmentId);
        const isMember = await this.departmentRepository
            .createQueryBuilder('department')
            .innerJoin('department.members', 'member')
            .where('department.id = :departmentId', { departmentId })
            .andWhere('member.id = :userId', { userId })
            .getExists();
        if (!isMember) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('User is not a member of this department');
        }
        if (department.managerId === userId) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Cannot remove department manager from department');
        }
        await this.departmentRepository
            .createQueryBuilder()
            .relation(_entities_department_entity__WEBPACK_IMPORTED_MODULE_4__.Department, 'members')
            .of(department)
            .remove(userId);
        await this.departmentsService.updateMemberCount(departmentId);
        this.eventEmitter.emit('department.member.removed', {
            departmentId,
            userId,
            performedById,
            organizationId: department.organizationId,
        });
    }
    async getMembers(departmentId, query) {
        const queryBuilder = this.userRepository
            .createQueryBuilder('user')
            .innerJoin('user.departments', 'department')
            .where('department.id = :departmentId', { departmentId });
        if (query.search) {
            queryBuilder.andWhere('(user.firstName ILIKE :search OR user.lastName ILIKE :search OR user.email ILIKE :search)', { search: `%${query.search}%` });
        }
        return queryBuilder
            .orderBy('user.firstName', 'ASC')
            .addOrderBy('user.lastName', 'ASC')
            .skip(query.skip)
            .take(query.take)
            .getManyAndCount();
    }
    async transferMember(userId, fromDepartmentId, toDepartmentId, performedById) {
        await this.removeMember(fromDepartmentId, userId, performedById);
        await this.addMember(toDepartmentId, userId, performedById);
        const fromDepartment = await this.departmentsService.findById(fromDepartmentId);
        this.eventEmitter.emit('department.member.transferred', {
            userId,
            fromDepartmentId,
            toDepartmentId,
            performedById,
            organizationId: fromDepartment.organizationId,
        });
    }
    async getUserDepartments(userId) {
        return this.departmentRepository
            .createQueryBuilder('department')
            .innerJoin('department.members', 'member')
            .where('member.id = :userId', { userId })
            .getMany();
    }
    async isMember(departmentId, userId) {
        return this.departmentRepository
            .createQueryBuilder('department')
            .innerJoin('department.members', 'member')
            .where('department.id = :departmentId', { departmentId })
            .andWhere('member.id = :userId', { userId })
            .getExists();
    }
};
DepartmentMembersService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_department_entity__WEBPACK_IMPORTED_MODULE_4__.Department)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_5__.User)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _users_services_users_service__WEBPACK_IMPORTED_MODULE_6__.UsersService,
        _departments_service__WEBPACK_IMPORTED_MODULE_7__.DepartmentsService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], DepartmentMembersService);



/***/ }),
/* 179 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentHierarchyService: () => (/* binding */ DepartmentHierarchyService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_department_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(27);
/* harmony import */ var _departments_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(177);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};






let DepartmentHierarchyService = class DepartmentHierarchyService {
    constructor(departmentRepository, departmentsService, eventEmitter) {
        this.departmentRepository = departmentRepository;
        this.departmentsService = departmentsService;
        this.eventEmitter = eventEmitter;
    }
    async getDepartmentTree(organizationId, rootDepartmentId) {
        const departments = await this.departmentRepository.find({
            where: { organizationId },
            order: { name: 'ASC' },
        });
        return this.buildDepartmentTree(departments, rootDepartmentId);
    }
    buildDepartmentTree(departments, rootDepartmentId, level = 0) {
        const rootDepartments = departments.filter(dept => rootDepartmentId
            ? dept.id === rootDepartmentId
            : !dept.parentDepartmentId);
        return rootDepartments.map(dept => ({
            id: dept.id,
            name: dept.name,
            managerId: dept.managerId,
            memberCount: dept.memberCount,
            level,
            metadata: dept.metadata,
            children: this.buildDepartmentTree(departments.filter(d => d.parentDepartmentId === dept.id), undefined, level + 1),
        }));
    }
    async moveDepartment(departmentId, newParentId, userId) {
        const department = await this.departmentsService.findById(departmentId);
        if (newParentId) {
            const newParent = await this.departmentsService.findById(newParentId);
            if (newParent.organizationId !== department.organizationId) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Cannot move department to different organization');
            }
            await this.validateHierarchyMove(departmentId, newParentId);
        }
        await this.departmentRepository.update(departmentId, {
            parentDepartmentId: newParentId || undefined,
            updatedById: userId,
        });
        this.eventEmitter.emit('department.moved', {
            departmentId,
            previousParentId: department.parentDepartmentId,
            newParentId,
            performedById: userId,
            organizationId: department.organizationId,
        });
    }
    async validateHierarchyMove(departmentId, newParentId) {
        if (departmentId === newParentId) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Department cannot be its own parent');
        }
        const childDepartments = await this.getAllChildDepartments(departmentId);
        if (childDepartments.some(dept => dept.id === newParentId)) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Cannot move department under its own child');
        }
    }
    async getAllChildDepartments(departmentId) {
        const children = await this.departmentRepository.find({
            where: { parentDepartmentId: departmentId },
        });
        const allChildren = [...children];
        for (const child of children) {
            const grandChildren = await this.getAllChildDepartments(child.id);
            allChildren.push(...grandChildren);
        }
        return allChildren;
    }
    async getDepartmentAncestors(departmentId) {
        const ancestors = [];
        let currentDepartment = await this.departmentsService.findById(departmentId, undefined, ['parentDepartment']);
        while (currentDepartment.parentDepartment) {
            ancestors.push(currentDepartment.parentDepartment);
            currentDepartment = await this.departmentsService.findById(currentDepartment.parentDepartment.id, undefined, ['parentDepartment']);
        }
        return ancestors.reverse();
    }
    async getDepartmentDescendants(departmentId) {
        return this.getAllChildDepartments(departmentId);
    }
    async getDepartmentSiblings(departmentId) {
        const department = await this.departmentsService.findById(departmentId, undefined, ['parentDepartment']);
        return this.departmentRepository.find({
            where: {
                parentDepartmentId: department.parentDepartmentId || (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.IsNull)(),
                id: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Not)(departmentId),
                organizationId: department.organizationId,
            },
        });
    }
    async getDepartmentDepth(departmentId) {
        const ancestors = await this.getDepartmentAncestors(departmentId);
        return ancestors.length;
    }
    async reorderDepartments(parentDepartmentId, orderedDepartmentIds, userId) {
        const departments = await this.departmentRepository.find({
            where: {
                id: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.In)(orderedDepartmentIds),
                parentDepartmentId: parentDepartmentId || (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.IsNull)(),
            },
        });
        if (departments.length !== orderedDepartmentIds.length) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Invalid department IDs provided');
        }
        for (let i = 0; i < orderedDepartmentIds.length; i++) {
            await this.departmentRepository.update(orderedDepartmentIds[i], {
                sortOrder: i,
                updatedById: userId,
            });
        }
        this.eventEmitter.emit('department.reordered', {
            parentDepartmentId,
            orderedDepartmentIds,
            performedById: userId,
            organizationId: departments[0].organizationId,
        });
    }
    async updateDepartmentParent(departmentId, parentDepartmentId, userId) {
        const updateData = {
            parentDepartmentId,
            updatedById: userId
        };
        await this.departmentRepository.update(departmentId, updateData);
        return await this.departmentRepository.findOneOrFail({ where: { id: departmentId } });
    }
    async updateDepartmentOrder(departmentId, sortOrder, userId) {
        const updateData = {
            sortOrder,
            updatedById: userId
        };
        await this.departmentRepository.update(departmentId, updateData);
        return await this.departmentRepository.findOneOrFail({ where: { id: departmentId } });
    }
};
DepartmentHierarchyService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_department_entity__WEBPACK_IMPORTED_MODULE_4__.Department)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _departments_service__WEBPACK_IMPORTED_MODULE_5__.DepartmentsService,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], DepartmentHierarchyService);



/***/ }),
/* 180 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentAuditService: () => (/* binding */ DepartmentAuditService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(181);
/* harmony import */ var _entities_department_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(27);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};





let DepartmentAuditService = class DepartmentAuditService {
    constructor(auditLogRepository, departmentRepository) {
        this.auditLogRepository = auditLogRepository;
        this.departmentRepository = departmentRepository;
    }
    async log(options) {
        var _a, _b;
        const auditLog = this.auditLogRepository.create({
            departmentId: options.departmentId,
            organizationId: options.organizationId,
            action: options.action,
            performedById: options.performedById,
            changes: options.changes,
            metadata: options.metadata,
            affectedUserId: options.affectedUserId,
            ipAddress: (_a = options.request) === null || _a === void 0 ? void 0 : _a.ip,
            userAgent: (_b = options.request) === null || _b === void 0 ? void 0 : _b.headers['user-agent'],
        });
        return this.auditLogRepository.save(auditLog);
    }
    async getDepartmentAuditTrail(departmentId, options = {}) {
        var _a;
        const queryBuilder = this.auditLogRepository
            .createQueryBuilder('audit')
            .leftJoinAndSelect('audit.performedBy', 'performer')
            .leftJoinAndSelect('audit.affectedUser', 'affected')
            .where('audit.departmentId = :departmentId', { departmentId });
        if (options.startDate) {
            queryBuilder.andWhere('audit.createdAt >= :startDate', {
                startDate: options.startDate
            });
        }
        if (options.endDate) {
            queryBuilder.andWhere('audit.createdAt <= :endDate', {
                endDate: options.endDate
            });
        }
        if ((_a = options.actions) === null || _a === void 0 ? void 0 : _a.length) {
            queryBuilder.andWhere('audit.action IN (:...actions)', {
                actions: options.actions
            });
        }
        return queryBuilder
            .orderBy('audit.createdAt', 'DESC')
            .take(options.limit || 50)
            .skip(options.offset || 0)
            .getManyAndCount();
    }
    async getUserDepartmentActivity(userId, options = {}) {
        var _a;
        const queryBuilder = this.auditLogRepository
            .createQueryBuilder('audit')
            .where('(audit.performedById = :userId OR audit.affectedUserId = :userId)', { userId });
        if ((_a = options.departmentIds) === null || _a === void 0 ? void 0 : _a.length) {
            queryBuilder.andWhere('audit.departmentId IN (:...departmentIds)', {
                departmentIds: options.departmentIds
            });
        }
        if (options.startDate) {
            queryBuilder.andWhere('audit.createdAt >= :startDate', {
                startDate: options.startDate
            });
        }
        if (options.endDate) {
            queryBuilder.andWhere('audit.createdAt <= :endDate', {
                endDate: options.endDate
            });
        }
        return queryBuilder
            .orderBy('audit.createdAt', 'DESC')
            .take(options.limit || 50)
            .skip(options.offset || 0)
            .getManyAndCount();
    }
    compareChanges(oldData, newData) {
        const changes = {};
        for (const key of Object.keys(newData)) {
            if (oldData[key] !== undefined &&
                JSON.stringify(oldData[key]) !== JSON.stringify(newData[key])) {
                changes[key] = {
                    old: oldData[key],
                    new: newData[key]
                };
            }
        }
        return changes;
    }
    async cleanupOldLogs(retentionDays = 365) {
        const cutoffDate = new Date();
        cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
        const result = await this.auditLogRepository
            .createQueryBuilder()
            .delete()
            .where('createdAt < :cutoffDate', { cutoffDate })
            .execute();
        return result.affected || 0;
    }
};
DepartmentAuditService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditLog)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_department_entity__WEBPACK_IMPORTED_MODULE_4__.Department)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository])
], DepartmentAuditService);



/***/ }),
/* 181 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentAuditAction: () => (/* binding */ DepartmentAuditAction),
/* harmony export */   DepartmentAuditLog: () => (/* binding */ DepartmentAuditLog)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _department_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var DepartmentAuditAction;
(function (DepartmentAuditAction) {
    DepartmentAuditAction["CREATED"] = "CREATED";
    DepartmentAuditAction["UPDATED"] = "UPDATED";
    DepartmentAuditAction["DELETED"] = "DELETED";
    DepartmentAuditAction["MEMBER_ADDED"] = "MEMBER_ADDED";
    DepartmentAuditAction["MEMBER_REMOVED"] = "MEMBER_REMOVED";
    DepartmentAuditAction["MEMBER_TRANSFERRED"] = "MEMBER_TRANSFERRED";
    DepartmentAuditAction["MANAGER_CHANGED"] = "MANAGER_CHANGED";
    DepartmentAuditAction["MOVED"] = "MOVED";
    DepartmentAuditAction["REORDERED"] = "REORDERED";
})(DepartmentAuditAction || (DepartmentAuditAction = {}));
let DepartmentAuditLog = class DepartmentAuditLog {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, departmentId: { required: true, type: () => String }, department: { required: true, type: () => (__webpack_require__(27).Department) }, organizationId: { required: true, type: () => String }, action: { required: true, enum: (__webpack_require__(181).DepartmentAuditAction) }, changes: { required: true, type: () => Object }, metadata: { required: true, type: () => Object }, performedById: { required: true, type: () => String }, performedBy: { required: true, type: () => (__webpack_require__(21).User) }, ipAddress: { required: true, type: () => String }, userAgent: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, affectedUserId: { required: true, type: () => String }, affectedUser: { required: true, type: () => (__webpack_require__(21).User) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "departmentId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _department_entity__WEBPACK_IMPORTED_MODULE_2__.Department),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'departmentId' }),
    __metadata("design:type", _department_entity__WEBPACK_IMPORTED_MODULE_2__.Department)
], DepartmentAuditLog.prototype, "department", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: DepartmentAuditAction
    }),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "action", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DepartmentAuditLog.prototype, "changes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DepartmentAuditLog.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "performedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'performedById' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], DepartmentAuditLog.prototype, "performedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('inet', { nullable: true }),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "ipAddress", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "userAgent", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], DepartmentAuditLog.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], DepartmentAuditLog.prototype, "affectedUserId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)(() => _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'affectedUserId' }),
    __metadata("design:type", _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_3__.User)
], DepartmentAuditLog.prototype, "affectedUser", void 0);
DepartmentAuditLog = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('department_audit_logs')
], DepartmentAuditLog);



/***/ }),
/* 182 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentsController: () => (/* binding */ DepartmentsController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_departments_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(177);
/* harmony import */ var _services_department_members_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(178);
/* harmony import */ var _auth_guards_auth_guard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(183);
/* harmony import */ var _organizations_guards_organization_guard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(184);
/* harmony import */ var _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(74);
/* harmony import */ var _common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(106);
/* harmony import */ var _common_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(185);
/* harmony import */ var _dto_update_department_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(186);
/* harmony import */ var _dto_add_member_dto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(187);
/* harmony import */ var _dto_department_query_dto__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(188);
/* harmony import */ var _entities_department_entity__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(27);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(22);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
















let DepartmentsController = class DepartmentsController {
    constructor(departmentsService, departmentMembersService) {
        this.departmentsService = departmentsService;
        this.departmentMembersService = departmentMembersService;
    }
    async create(createDepartmentDto, req) {
        return this.departmentsService.create(createDepartmentDto, req.user['id'], req.user['organizationId']);
    }
    async findAll(query, req) {
        return this.departmentsService.findAll(req.user['organizationId'], query);
    }
    async findOne(id, req) {
        return this.departmentsService.findById(id, req.user['organizationId']);
    }
    async update(id, updateDepartmentDto, userId) {
        return this.departmentsService.update(id, updateDepartmentDto, userId);
    }
    async remove(id, userId) {
        await this.departmentsService.delete(id, userId);
    }
    async addMember(departmentId, addMemberDto, userId) {
        await this.departmentMembersService.addMember(departmentId, addMemberDto.userId, userId);
    }
    async removeMember(departmentId, memberId, userId) {
        await this.departmentMembersService.removeMember(departmentId, memberId, userId);
    }
    async getMembers(departmentId, query) {
        return this.departmentMembersService.getMembers(departmentId, query);
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_7__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.MANAGER),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Create department' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 201, type: _entities_department_entity__WEBPACK_IMPORTED_MODULE_12__.Department }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(27).Department) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "create", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get all departments' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200, type: [_entities_department_entity__WEBPACK_IMPORTED_MODULE_12__.Department] }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_department_query_dto__WEBPACK_IMPORTED_MODULE_11__.DepartmentQueryDto, Object]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "findAll", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get department by id' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200, type: _entities_department_entity__WEBPACK_IMPORTED_MODULE_12__.Department }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(27).Department) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id')),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "findOne", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_7__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.MANAGER),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update department' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200, type: _entities_department_entity__WEBPACK_IMPORTED_MODULE_12__.Department }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(27).Department) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id')),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_common_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_8__.CurrentUser)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_department_dto__WEBPACK_IMPORTED_MODULE_9__.UpdateDepartmentDto, String]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "update", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_7__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Delete department' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 204 }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id')),
    __param(1, (0,_common_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_8__.CurrentUser)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "remove", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/members'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_7__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.MANAGER),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Add member to department' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200 }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id')),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_common_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_8__.CurrentUser)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_add_member_dto__WEBPACK_IMPORTED_MODULE_10__.AddMemberDto, String]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "addMember", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id/members/:userId'),
    (0,_common_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_7__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_13__.Role.MANAGER),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Remove member from department' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 204 }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id')),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('userId')),
    __param(2, (0,_common_decorators_current_user_decorator__WEBPACK_IMPORTED_MODULE_8__.CurrentUser)('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, String, String]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "removeMember", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id/members'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get department members' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: 200, type: [_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_14__.User] }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id')),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_department_query_dto__WEBPACK_IMPORTED_MODULE_11__.DepartmentQueryDto]),
    __metadata("design:returntype", Promise)
], DepartmentsController.prototype, "getMembers", null);
DepartmentsController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Departments'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('departments'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_auth_guards_auth_guard__WEBPACK_IMPORTED_MODULE_4__.AuthGuard, _organizations_guards_organization_guard__WEBPACK_IMPORTED_MODULE_5__.OrganizationGuard, _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_6__.RolesGuard),
    __metadata("design:paramtypes", [_services_departments_service__WEBPACK_IMPORTED_MODULE_2__.DepartmentsService,
        _services_department_members_service__WEBPACK_IMPORTED_MODULE_3__.DepartmentMembersService])
], DepartmentsController);



/***/ }),
/* 183 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthGuard: () => (/* binding */ AuthGuard)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19);
/* harmony import */ var _nestjs_jwt__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_jwt__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _decorators_public_decorator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(73);
/* harmony import */ var _users_services_users_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var AuthGuard_1;







let AuthGuard = AuthGuard_1 = class AuthGuard {
    constructor(reflector, authService, jwtService, configService, usersService) {
        this.reflector = reflector;
        this.authService = authService;
        this.jwtService = jwtService;
        this.configService = configService;
        this.usersService = usersService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(AuthGuard_1.name);
    }
    async canActivate(context) {
        try {
            const request = context.switchToHttp().getRequest();
            const isPublic = this.reflector.getAllAndOverride(_decorators_public_decorator__WEBPACK_IMPORTED_MODULE_5__.IS_PUBLIC_KEY, [
                context.getHandler(),
                context.getClass(),
            ]);
            const token = this.extractTokenFromHeader(request);
            if (!token) {
                if (isPublic)
                    return true;
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('No authentication token provided');
            }
            try {
                const payload = this.jwtService.verify(token, {
                    secret: this.configService.get('JWT_SECRET')
                });
                if (this.authService.isTokenBlacklisted(token)) {
                    throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Token has been revoked');
                }
                const user = await this.usersService.findById(payload.sub);
                if (!user) {
                    throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User not found');
                }
                if (!user.isActive) {
                    throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('User account is inactive');
                }
                if (this.authService.requireEmailVerification && !user.isEmailVerified) {
                    throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Email verification required');
                }
                request.user = user;
                request.tokenMetadata = {
                    token,
                    iat: payload.iat,
                    exp: payload.exp,
                };
                return true;
            }
            catch (error) {
                if (isPublic)
                    return true;
                this.logger.error('Token validation failed:', error);
                if (error.name === 'TokenExpiredError') {
                    throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Token has expired');
                }
                if (error.name === 'JsonWebTokenError') {
                    throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Invalid token');
                }
                throw error;
            }
        }
        catch (error) {
            if (error instanceof _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException) {
                throw error;
            }
            this.logger.error('Authentication error:', error);
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('Authentication failed');
        }
    }
    extractTokenFromHeader(request) {
        var _a, _b;
        const [type, token] = (_b = (_a = request.headers.authorization) === null || _a === void 0 ? void 0 : _a.split(' ')) !== null && _b !== void 0 ? _b : [];
        return type === 'Bearer' ? token : undefined;
    }
};
AuthGuard = AuthGuard_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_core__WEBPACK_IMPORTED_MODULE_1__.Reflector,
        _services_auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService,
        _nestjs_jwt__WEBPACK_IMPORTED_MODULE_3__.JwtService,
        _nestjs_config__WEBPACK_IMPORTED_MODULE_4__.ConfigService,
        _users_services_users_service__WEBPACK_IMPORTED_MODULE_6__.UsersService])
], AuthGuard);



/***/ }),
/* 184 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OptionalOrganization: () => (/* binding */ OptionalOrganization),
/* harmony export */   OrganizationGuard: () => (/* binding */ OrganizationGuard)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_organizations_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(107);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(22);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var OrganizationGuard_1;




let OrganizationGuard = OrganizationGuard_1 = class OrganizationGuard {
    constructor(reflector, organizationsService) {
        this.reflector = reflector;
        this.organizationsService = organizationsService;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(OrganizationGuard_1.name);
    }
    async canActivate(context) {
        try {
            const request = context.switchToHttp().getRequest();
            const user = request.user;
            if (!user) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedException('No authenticated user found');
            }
            if (user.role === _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_3__.Role.SUPER_ADMIN) {
                return true;
            }
            const organizationId = this.extractOrganizationId(request);
            if (!organizationId) {
                const isOptional = this.reflector.get('optionalOrganization', context.getHandler());
                return isOptional || false;
            }
            const hasAccess = await this.verifyOrganizationAccess(user.id, organizationId);
            if (!hasAccess) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('User does not have access to this organization');
            }
            const [organization, member] = await Promise.all([
                this.organizationsService.findOne(organizationId),
                this.organizationsService.getMemberContext(organizationId, user.id)
            ]);
            if (!organization) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('Organization not found');
            }
            if (!member) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ForbiddenException('User is not a member of this organization');
            }
            request.organization = organization;
            request.organizationMember = member;
            return true;
        }
        catch (error) {
            this.logger.error('Error in organization guard:', error);
            throw error;
        }
    }
    extractOrganizationId(request) {
        var _a, _b, _c;
        return (((_a = request.params) === null || _a === void 0 ? void 0 : _a.organizationId) ||
            ((_b = request.body) === null || _b === void 0 ? void 0 : _b.organizationId) ||
            ((_c = request.query) === null || _c === void 0 ? void 0 : _c.organizationId) ||
            this.extractFromPath(request.path));
    }
    extractFromPath(path) {
        const matches = path.match(/\/organizations\/([^\/]+)/);
        return matches === null || matches === void 0 ? void 0 : matches[1];
    }
    async verifyOrganizationAccess(userId, organizationId) {
        try {
            const membership = await this.organizationsService.getMemberContext(organizationId, userId);
            if (!membership) {
                return false;
            }
            if (!membership.isActive) {
                return false;
            }
            return true;
        }
        catch (error) {
            this.logger.error(`Error verifying organization access for user ${userId}:`, error);
            return false;
        }
    }
};
OrganizationGuard = OrganizationGuard_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_core__WEBPACK_IMPORTED_MODULE_1__.Reflector,
        _services_organizations_service__WEBPACK_IMPORTED_MODULE_2__.OrganizationsService])
], OrganizationGuard);

const OptionalOrganization = () => {
    return (target, key, descriptor) => {
        if (key) {
            if (descriptor) {
                (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.SetMetadata)('optionalOrganization', true)(target, key, descriptor);
            }
        }
        return descriptor;
    };
};


/***/ }),
/* 185 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CurrentUser: () => (/* binding */ CurrentUser),
/* harmony export */   TypedCurrentUser: () => (/* binding */ TypedCurrentUser)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);

const CurrentUser = (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.createParamDecorator)((data, context) => {
    const request = context.switchToHttp().getRequest();
    const user = request.user;
    if (!user) {
        return null;
    }
    if (!data) {
        return user;
    }
    return data.split('.').reduce((obj, key) => {
        return obj === null || obj === void 0 ? void 0 : obj[key];
    }, user);
});
const TypedCurrentUser = (propertyPath) => CurrentUser(propertyPath);


/***/ }),
/* 186 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateDepartmentDto: () => (/* binding */ UpdateDepartmentDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



class UpdateDepartmentDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: false, type: () => String }, description: { required: false, type: () => String }, parentDepartmentId: { required: false, type: () => String, format: "uuid" }, managerId: { required: false, type: () => String, format: "uuid" }, isActive: { required: false, type: () => Boolean }, contactEmail: { required: false, type: () => String }, contactPhone: { required: false, type: () => String }, workingHours: { required: false, type: () => String }, timezone: { required: false, type: () => String }, tags: { required: false, type: () => [String] }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "description", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "parentDepartmentId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "managerId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    __metadata("design:type", Boolean)
], UpdateDepartmentDto.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "contactEmail", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "contactPhone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "workingHours", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], UpdateDepartmentDto.prototype, "timezone", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], UpdateDepartmentDto.prototype, "tags", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], UpdateDepartmentDto.prototype, "metadata", void 0);


/***/ }),
/* 187 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AddMemberDto: () => (/* binding */ AddMemberDto),
/* harmony export */   DepartmentMemberRole: () => (/* binding */ DepartmentMemberRole)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var DepartmentMemberRole;
(function (DepartmentMemberRole) {
    DepartmentMemberRole["MANAGER"] = "MANAGER";
    DepartmentMemberRole["SUPERVISOR"] = "SUPERVISOR";
    DepartmentMemberRole["MEMBER"] = "MEMBER";
})(DepartmentMemberRole || (DepartmentMemberRole = {}));
class AddMemberDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { userId: { required: true, type: () => String, format: "uuid" }, role: { required: true, enum: (__webpack_require__(187).DepartmentMemberRole) }, title: { required: false, type: () => String }, responsibilities: { required: false, type: () => String }, startDate: { required: false, type: () => String }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], AddMemberDto.prototype, "userId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ enum: DepartmentMemberRole }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(DepartmentMemberRole),
    __metadata("design:type", String)
], AddMemberDto.prototype, "role", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], AddMemberDto.prototype, "title", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], AddMemberDto.prototype, "responsibilities", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], AddMemberDto.prototype, "startDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], AddMemberDto.prototype, "metadata", void 0);


/***/ }),
/* 188 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentQueryDto: () => (/* binding */ DepartmentQueryDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class DepartmentQueryDto {
    constructor() {
        this.skip = 0;
        this.take = 10;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { search: { required: false, type: () => String }, parentDepartmentId: { required: false, type: () => String, format: "uuid" }, managerId: { required: false, type: () => String, format: "uuid" }, isActive: { required: false, type: () => Boolean }, relations: { required: false, type: () => [String] }, skip: { required: false, type: () => Number, default: 0, minimum: 0 }, take: { required: false, type: () => Number, default: 10, minimum: 1, maximum: 100 } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    __metadata("design:type", String)
], DepartmentQueryDto.prototype, "search", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], DepartmentQueryDto.prototype, "parentDepartmentId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    __metadata("design:type", String)
], DepartmentQueryDto.prototype, "managerId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Boolean),
    __metadata("design:type", Boolean)
], DepartmentQueryDto.prototype, "isActive", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)({ each: true }),
    __metadata("design:type", Array)
], DepartmentQueryDto.prototype, "relations", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ default: 0 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(0),
    __metadata("design:type", Number)
], DepartmentQueryDto.prototype, "skip", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ default: 10 }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNumber)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    __metadata("design:type", Number)
], DepartmentQueryDto.prototype, "take", void 0);


/***/ }),
/* 189 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentAssignmentListener: () => (/* binding */ DepartmentAssignmentListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_department_audit_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(180);
/* harmony import */ var _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(181);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46);
/* harmony import */ var _users_services_users_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(45);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






let DepartmentAssignmentListener = class DepartmentAssignmentListener {
    constructor(auditService, notificationsService, usersService) {
        this.auditService = auditService;
        this.notificationsService = notificationsService;
        this.usersService = usersService;
    }
    async handleMemberAdded(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.MEMBER_ADDED,
            performedById: event.performedById,
            affectedUserId: event.userId,
            metadata: {
                action: event.action,
            },
        });
        const user = await this.usersService.findById(event.userId);
        if (user) {
            const notification = {
                userId: user.id,
                type: 'DEPARTMENT_ASSIGNMENT',
                title: 'Department Assignment',
                message: 'You have been assigned to a new department',
                data: {
                    departmentId: event.departmentId,
                    organizationId: event.organizationId,
                },
                organizationId: event.organizationId,
                priority: 'MEDIUM',
            };
            await this.notificationsService.send(notification);
        }
    }
    async handleMemberRemoved(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.MEMBER_REMOVED,
            performedById: event.performedById,
            affectedUserId: event.userId,
            metadata: {
                action: event.action,
            },
        });
        const user = await this.usersService.findById(event.userId);
        if (user) {
            const notification = {
                userId: user.id,
                type: 'DEPARTMENT_UNASSIGNMENT',
                title: 'Department Unassignment',
                message: 'You have been removed from a department',
                data: {
                    departmentId: event.departmentId,
                    organizationId: event.organizationId,
                },
                organizationId: event.organizationId,
                priority: 'MEDIUM',
            };
            await this.notificationsService.send(notification);
        }
    }
    async handleMemberTransferred(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.MEMBER_TRANSFERRED,
            performedById: event.performedById,
            affectedUserId: event.userId,
            metadata: {
                action: event.action,
                previousDepartmentId: event.previousDepartmentId,
            },
        });
        const user = await this.usersService.findById(event.userId);
        if (user) {
            const notification = {
                userId: user.id,
                type: 'DEPARTMENT_TRANSFER',
                title: 'Department Transfer',
                message: 'You have been transferred to a different department',
                data: {
                    departmentId: event.departmentId,
                    previousDepartmentId: event.previousDepartmentId,
                    organizationId: event.organizationId,
                },
                organizationId: event.organizationId,
                priority: 'MEDIUM',
            };
            await this.notificationsService.send(notification);
        }
    }
    async handleManagerChanged(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.MANAGER_CHANGED,
            performedById: event.performedById,
            affectedUserId: event.newManagerId,
            metadata: {
                previousManagerId: event.previousManagerId,
            },
        });
        const newManagerNotification = {
            userId: event.newManagerId,
            type: 'DEPARTMENT_MANAGER_ASSIGNMENT',
            title: 'Department Manager Assignment',
            message: 'You have been assigned as a department manager',
            data: {
                departmentId: event.departmentId,
                organizationId: event.organizationId,
            },
            organizationId: event.organizationId,
            priority: 'MEDIUM',
        };
        await this.notificationsService.send(newManagerNotification);
        if (event.previousManagerId) {
            const previousManagerNotification = {
                userId: event.previousManagerId,
                type: 'DEPARTMENT_MANAGER_UNASSIGNMENT',
                title: 'Department Manager Unassignment',
                message: 'You are no longer the manager of a department',
                data: {
                    departmentId: event.departmentId,
                    organizationId: event.organizationId,
                },
                organizationId: event.organizationId,
                priority: 'MEDIUM',
            };
            await this.notificationsService.send(previousManagerNotification);
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.member.added'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAssignmentListener.prototype, "handleMemberAdded", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.member.removed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAssignmentListener.prototype, "handleMemberRemoved", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.member.transferred'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAssignmentListener.prototype, "handleMemberTransferred", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.manager.changed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAssignmentListener.prototype, "handleManagerChanged", null);
DepartmentAssignmentListener = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_services_department_audit_service__WEBPACK_IMPORTED_MODULE_2__.DepartmentAuditService,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_4__.NotificationsService,
        _users_services_users_service__WEBPACK_IMPORTED_MODULE_5__.UsersService])
], DepartmentAssignmentListener);



/***/ }),
/* 190 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DepartmentAuditListener: () => (/* binding */ DepartmentAuditListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_department_audit_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(180);
/* harmony import */ var _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(181);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let DepartmentAuditListener = class DepartmentAuditListener {
    constructor(auditService) {
        this.auditService = auditService;
    }
    async handleDepartmentCreated(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.CREATED,
            performedById: event.createdById,
            request: event.request,
        });
    }
    async handleDepartmentUpdated(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.UPDATED,
            performedById: event.updatedById,
            changes: event.changes,
            request: event.request,
        });
    }
    async handleDepartmentDeleted(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.DELETED,
            performedById: event.deletedById,
            request: event.request,
        });
    }
    async handleDepartmentMoved(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.MOVED,
            performedById: event.performedById,
            metadata: {
                previousParentId: event.previousParentId,
                newParentId: event.newParentId,
            },
            request: event.request,
        });
    }
    async handleDepartmentReordered(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.REORDERED,
            performedById: event.performedById,
            metadata: {
                newOrder: event.newOrder,
            },
            request: event.request,
        });
    }
    async handleBulkUpdate(event) {
        for (const departmentId of event.departmentIds) {
            await this.auditService.log({
                departmentId,
                organizationId: event.organizationId,
                action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.UPDATED,
                performedById: event.performedById,
                changes: event.changes,
                metadata: {
                    bulkUpdate: true,
                    totalDepartments: event.departmentIds.length,
                },
                request: event.request,
            });
        }
    }
    async handleHierarchyChanged(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.UPDATED,
            performedById: event.performedById,
            changes: event.changes,
            metadata: {
                hierarchyUpdate: true,
            },
            request: event.request,
        });
    }
    async handleSettingsUpdated(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.UPDATED,
            performedById: event.performedById,
            changes: event.changes,
            metadata: {
                settingsUpdate: true,
            },
            request: event.request,
        });
    }
    async handleAccessModified(event) {
        await this.auditService.log({
            departmentId: event.departmentId,
            organizationId: event.organizationId,
            action: _entities_department_audit_log_entity__WEBPACK_IMPORTED_MODULE_3__.DepartmentAuditAction.UPDATED,
            performedById: event.performedById,
            metadata: Object.assign({ accessUpdate: true }, event.changes),
            request: event.request,
        });
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.created'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleDepartmentCreated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.updated'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleDepartmentUpdated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.deleted'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleDepartmentDeleted", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.moved'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleDepartmentMoved", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.reordered'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleDepartmentReordered", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.bulk_update'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleBulkUpdate", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.hierarchy.changed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleHierarchyChanged", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.settings.updated'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleSettingsUpdated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('department.access.modified'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], DepartmentAuditListener.prototype, "handleAccessModified", null);
DepartmentAuditListener = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_services_department_audit_service__WEBPACK_IMPORTED_MODULE_2__.DepartmentAuditService])
], DepartmentAuditListener);



/***/ }),
/* 191 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessagesModule: () => (/* binding */ MessagesModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _controllers_messages_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(192);
/* harmony import */ var _services_messages_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(193);
/* harmony import */ var _entities_message_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(29);
/* harmony import */ var _entities_message_template_entity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(31);
/* harmony import */ var _entities_message_attachment_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(32);
/* harmony import */ var _entities_template_category_entity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(200);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(21);
/* harmony import */ var _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(33);
/* harmony import */ var _users_users_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(14);
/* harmony import */ var _contacts_contacts_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(144);
/* harmony import */ var _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(89);
/* harmony import */ var _auth_auth_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(118);
/* harmony import */ var _events_message_event_handler__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(201);
/* harmony import */ var _listeners_message_delivery_listener__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(203);
/* harmony import */ var _listeners_message_queue_listener__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(204);
/* harmony import */ var _services_error_handler_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(206);
/* harmony import */ var _services_message_delivery_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(205);
/* harmony import */ var _services_message_scheduler_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(207);
/* harmony import */ var _services_template_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(208);
/* harmony import */ var _repositories_message_repository__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(209);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};























let MessagesModule = class MessagesModule {
};
MessagesModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_message_entity__WEBPACK_IMPORTED_MODULE_5__.Message,
                _entities_message_template_entity__WEBPACK_IMPORTED_MODULE_6__.MessageTemplate,
                _entities_message_attachment_entity__WEBPACK_IMPORTED_MODULE_7__.MessageAttachment,
                _entities_template_category_entity__WEBPACK_IMPORTED_MODULE_8__.TemplateCategory,
                _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_9__.User,
                _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_10__.Contact
            ]),
            _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_2__.EventEmitterModule.forRoot({
                wildcard: true,
                maxListeners: 20,
                verboseMemoryLeak: true,
            }),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _users_users_module__WEBPACK_IMPORTED_MODULE_11__.UsersModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _contacts_contacts_module__WEBPACK_IMPORTED_MODULE_12__.ContactsModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _notifications_notifications_module__WEBPACK_IMPORTED_MODULE_13__.NotificationsModule),
            (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => _auth_auth_module__WEBPACK_IMPORTED_MODULE_14__.AuthModule)
        ],
        controllers: [
            _controllers_messages_controller__WEBPACK_IMPORTED_MODULE_3__.MessagesController
        ],
        providers: [
            _services_messages_service__WEBPACK_IMPORTED_MODULE_4__.MessagesService,
            _services_error_handler_service__WEBPACK_IMPORTED_MODULE_18__.ErrorHandlerService,
            _services_message_delivery_service__WEBPACK_IMPORTED_MODULE_19__.MessageDeliveryService,
            _services_message_scheduler_service__WEBPACK_IMPORTED_MODULE_20__.MessageSchedulerService,
            _services_template_service__WEBPACK_IMPORTED_MODULE_21__.TemplateService,
            _events_message_event_handler__WEBPACK_IMPORTED_MODULE_15__.MessageEventHandler,
            _listeners_message_delivery_listener__WEBPACK_IMPORTED_MODULE_16__.MessageDeliveryListener,
            _listeners_message_queue_listener__WEBPACK_IMPORTED_MODULE_17__.MessageQueueListener,
            _repositories_message_repository__WEBPACK_IMPORTED_MODULE_22__.MessageRepository
        ],
        exports: [
            _services_messages_service__WEBPACK_IMPORTED_MODULE_4__.MessagesService,
            _services_message_delivery_service__WEBPACK_IMPORTED_MODULE_19__.MessageDeliveryService,
            _services_template_service__WEBPACK_IMPORTED_MODULE_21__.TemplateService
        ]
    })
], MessagesModule);



/***/ }),
/* 192 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessagesController: () => (/* binding */ MessagesController)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
/* harmony import */ var _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74);
/* harmony import */ var _auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75);
/* harmony import */ var _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22);
/* harmony import */ var _services_messages_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(193);
/* harmony import */ var _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(30);
/* harmony import */ var _dto_update_message_dto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(194);
/* harmony import */ var _dto_message_query_dto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(195);
/* harmony import */ var _dto_message_template_dto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(198);
/* harmony import */ var _dto_bulk_message_dto__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(199);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};













let MessagesController = class MessagesController {
    constructor(messagesService) {
        this.messagesService = messagesService;
    }
    async create(createMessageDto, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        if (!req.user)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User information not available');
        return this.messagesService.create(Object.assign(Object.assign({}, createMessageDto), { organizationId: req.organization.id, senderId: req.user.id }));
    }
    async findAll(query, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        return this.messagesService.findAll(Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async getConversations(query, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        return this.messagesService.getConversations(Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async getConversation(contactId, query, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        return this.messagesService.getConversation(contactId, Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async findOne(id, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        const message = await this.messagesService.findOne(id, req.organization.id);
        if (!message) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.NotFoundException('Message not found');
        }
        return message;
    }
    async update(id, updateMessageDto, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        if (!req.user)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User information not available');
        return this.messagesService.update(id, Object.assign(Object.assign({}, updateMessageDto), { organizationId: req.organization.id, updatedBy: req.user.id }));
    }
    async remove(id, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        await this.messagesService.remove(id, req.organization.id);
    }
    async createTemplate(templateDto, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        if (!req.user)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User information not available');
        return this.messagesService.createTemplate(Object.assign(Object.assign({}, templateDto), { organizationId: req.organization.id, createdBy: req.user.id }));
    }
    async getTemplates(query, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        return this.messagesService.getTemplates(Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async sendBulk(bulkMessageDto, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        if (!req.user)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User information not available');
        if (!bulkMessageDto.contactIds || bulkMessageDto.contactIds.length === 0) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Contact IDs are required for bulk messaging');
        }
        return this.messagesService.sendBulk(Object.assign(Object.assign({}, bulkMessageDto), { organizationId: req.organization.id, senderId: req.user.id }));
    }
    async getStatistics(query, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        return this.messagesService.getStatistics(Object.assign(Object.assign({}, query), { organizationId: req.organization.id }));
    }
    async resend(id, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        if (!req.user)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User information not available');
        return this.messagesService.resend(id, {
            organizationId: req.organization.id,
            userId: req.user.id,
        });
    }
    async markAsRead(id, req) {
        if (!req.organization)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('Organization information not available');
        if (!req.user)
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.BadRequestException('User information not available');
        return this.messagesService.markAsRead(id, {
            organizationId: req.organization.id,
            userId: req.user.id,
        });
    }
};
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Create new message' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Message sent successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(29).Message) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_create_message_dto__WEBPACK_IMPORTED_MODULE_7__.CreateMessageDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "create", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get all messages' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return all messages' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_message_query_dto__WEBPACK_IMPORTED_MODULE_9__.MessageQueryDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "findAll", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('conversations'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get all conversations' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return all conversations' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_message_query_dto__WEBPACK_IMPORTED_MODULE_9__.MessageQueryDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "getConversations", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('conversations/:contactId'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get conversation with contact' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return conversation messages' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('contactId', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_message_query_dto__WEBPACK_IMPORTED_MODULE_9__.MessageQueryDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "getConversation", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)(':id'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get message by id' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return message details' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(29).Message) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "findOne", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Put)(':id'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Update message' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Message updated successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: (__webpack_require__(29).Message) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(2, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, _dto_update_message_dto__WEBPACK_IMPORTED_MODULE_8__.UpdateMessageDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "update", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Delete)(':id'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Delete message' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.NO_CONTENT, description: 'Message deleted successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "remove", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('templates'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Create message template' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Template created successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_message_template_dto__WEBPACK_IMPORTED_MODULE_10__.MessageTemplateDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "createTemplate", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('templates'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get message templates' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return message templates' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: [(__webpack_require__(31).MessageTemplate)] }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_message_query_dto__WEBPACK_IMPORTED_MODULE_9__.MessageQueryDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "getTemplates", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)('bulk'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Send bulk messages' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.CREATED, description: 'Bulk messages queued successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201 }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Body)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_bulk_message_dto__WEBPACK_IMPORTED_MODULE_11__.BulkMessageDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "sendBulk", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Get)('statistics'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Get messaging statistics' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Return messaging statistics' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 200, type: Object }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Query)()),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_dto_message_query_dto__WEBPACK_IMPORTED_MODULE_9__.MessageQueryDto, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "getStatistics", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/resend'),
    (0,_auth_decorators_roles_decorator__WEBPACK_IMPORTED_MODULE_4__.Roles)(_users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.ADMIN, _users_enums_role_enum__WEBPACK_IMPORTED_MODULE_5__.Role.STAFF),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Resend failed message' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Message resent successfully' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(29).Message) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "resend", null);
__decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Post)(':id/mark-read'),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiOperation)({ summary: 'Mark message as read' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse)({ status: _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.HttpStatus.OK, description: 'Message marked as read' }),
    _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiResponse({ status: 201, type: (__webpack_require__(29).Message) }),
    __param(0, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Param)('id', _nestjs_common__WEBPACK_IMPORTED_MODULE_1__.ParseUUIDPipe)),
    __param(1, (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Request)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object]),
    __metadata("design:returntype", Promise)
], MessagesController.prototype, "markAsRead", null);
MessagesController = __decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiTags)('Messages'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.Controller)('messages'),
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_1__.UseGuards)(_auth_guards_jwt_auth_guard__WEBPACK_IMPORTED_MODULE_2__.JwtAuthGuard, _auth_guards_roles_guard__WEBPACK_IMPORTED_MODULE_3__.RolesGuard),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiBearerAuth)(),
    __metadata("design:paramtypes", [_services_messages_service__WEBPACK_IMPORTED_MODULE_6__.MessagesService])
], MessagesController);



/***/ }),
/* 193 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessagesService: () => (/* binding */ MessagesService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_message_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(29);
/* harmony import */ var _entities_message_template_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(31);
/* harmony import */ var _entities_message_attachment_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(32);
/* harmony import */ var _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(30);
/* harmony import */ var _contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(33);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(71);
/* harmony import */ var nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _users_entities_user_entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(21);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};











let MessagesService = class MessagesService {
    constructor(messageRepository, templateRepository, attachmentRepository, contactRepository, userRepository, dataSource, eventEmitter) {
        this.messageRepository = messageRepository;
        this.templateRepository = templateRepository;
        this.attachmentRepository = attachmentRepository;
        this.contactRepository = contactRepository;
        this.userRepository = userRepository;
        this.dataSource = dataSource;
        this.eventEmitter = eventEmitter;
    }
    asPromiseEntity(entity) {
        return Promise.resolve(entity);
    }
    async withTransaction(callback) {
        const queryRunner = this.dataSource.createQueryRunner();
        await queryRunner.connect();
        await queryRunner.startTransaction();
        try {
            const result = await callback(queryRunner);
            await queryRunner.commitTransaction();
            return result;
        }
        catch (error) {
            await queryRunner.rollbackTransaction();
            throw error;
        }
        finally {
            await queryRunner.release();
        }
    }
    async getValidContact(contactId, organizationId, messageType) {
        const contact = await this.contactRepository.findOne({
            where: { id: contactId, organizationId },
        });
        if (!contact) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Contact with ID ${contactId} not found`);
        }
        if (messageType === _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageType.EMAIL && !contact.email) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Contact has no email address');
        }
        if (messageType === _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageType.SMS && !contact.phoneNumber) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Contact has no phone number');
        }
        return contact;
    }
    async getUser(userId, errorContext) {
        const user = await this.userRepository.findOne({
            where: { id: userId }
        });
        if (!user) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`${errorContext} with ID ${userId} not found`);
        }
        return user;
    }
    prepareEmailOptions(data) {
        var _a, _b, _c, _d, _e;
        if (data.type !== _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageType.EMAIL) {
            return undefined;
        }
        return {
            subject: ((_a = data.emailOptions) === null || _a === void 0 ? void 0 : _a.subject) || 'No Subject',
            cc: (_b = data.emailOptions) === null || _b === void 0 ? void 0 : _b.cc,
            bcc: (_c = data.emailOptions) === null || _c === void 0 ? void 0 : _c.bcc,
            trackOpens: (_d = data.emailOptions) === null || _d === void 0 ? void 0 : _d.trackOpens,
            trackClicks: (_e = data.emailOptions) === null || _e === void 0 ? void 0 : _e.trackClicks
        };
    }
    async applyTemplate(message, templateId, organizationId, contact) {
        if (!templateId)
            return;
        const template = await this.templateRepository.findOne({
            where: { id: templateId, organizationId },
        });
        if (!template) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Template with ID ${templateId} not found`);
        }
        message.content = this.processTemplate(template.content, contact);
    }
    createAttachmentEntities(attachments, message) {
        if (!attachments || attachments.length === 0) {
            return [];
        }
        return attachments.map(attachment => {
            return this.attachmentRepository.create({
                fileName: attachment.fileName,
                fileSize: attachment.fileSize ? Number(attachment.fileSize) : 0,
                mimeType: attachment.fileType,
                filePath: attachment.fileUrl,
                publicUrl: attachment.fileUrl,
                isUploaded: true,
                message: message,
                messageId: message.id
            });
        });
    }
    async create(data) {
        return this.withTransaction(async (queryRunner) => {
            const [contact, sender] = await Promise.all([
                this.getValidContact(data.contactId, data.organizationId, data.type),
                this.getUser(data.senderId, 'Sender')
            ]);
            const messageData = {
                content: data.content,
                type: data.type,
                scheduledFor: data.scheduledFor ? new Date(data.scheduledFor) : undefined,
                metadata: data.metadata,
                organizationId: data.organizationId,
                contactId: contact.id,
                senderId: sender.id,
                status: data.scheduledFor ? _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED : _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.QUEUED,
                priority: data.priority,
                requireConfirmation: data.requireConfirmation || false,
                notes: data.notes,
                externalId: data.externalId,
                templateId: data.templateId,
                emailOptions: this.prepareEmailOptions(data)
            };
            const message = this.messageRepository.create(messageData);
            await this.applyTemplate(message, data.templateId, data.organizationId, contact);
            await queryRunner.manager.save(message);
            const attachmentEntities = this.createAttachmentEntities(data.attachments, message);
            if (attachmentEntities.length > 0) {
                await queryRunner.manager.save(_entities_message_attachment_entity__WEBPACK_IMPORTED_MODULE_5__.MessageAttachment, attachmentEntities);
            }
            if (!data.scheduledFor) {
                this.eventEmitter.emit('message.created', message);
            }
            return message;
        });
    }
    async findAll(query) {
        const { organizationId, type, status, startDate, endDate, page = 1, limit = 10 } = query;
        const queryBuilder = this.messageRepository
            .createQueryBuilder('message')
            .where('message.organizationId = :organizationId', { organizationId })
            .leftJoinAndSelect('message.contact', 'contact')
            .leftJoinAndSelect('message.sender', 'sender')
            .leftJoinAndSelect('message.attachments', 'attachments');
        if (type) {
            queryBuilder.andWhere('message.type = :type', { type });
        }
        if (status) {
            queryBuilder.andWhere('message.status = :status', { status });
        }
        if (startDate) {
            queryBuilder.andWhere('message.createdAt >= :startDate', { startDate });
        }
        if (endDate) {
            queryBuilder.andWhere('message.createdAt <= :endDate', { endDate });
        }
        queryBuilder.orderBy('message.createdAt', 'DESC');
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__.paginate)(queryBuilder, { page, limit });
    }
    async getConversations(query) {
        const { organizationId, page = 1, limit = 10 } = query;
        const queryBuilder = this.messageRepository
            .createQueryBuilder('message')
            .select('DISTINCT ON (message.contactId) message.*')
            .where('message.organizationId = :organizationId', { organizationId })
            .orderBy('message.contactId')
            .addOrderBy('message.createdAt', 'DESC');
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__.paginate)(queryBuilder, { page, limit });
    }
    async getConversation(contactId, query) {
        const { organizationId, page = 1, limit = 20 } = query;
        const queryBuilder = this.messageRepository
            .createQueryBuilder('message')
            .where('message.organizationId = :organizationId', { organizationId })
            .andWhere('message.contactId = :contactId', { contactId })
            .leftJoinAndSelect('message.attachments', 'attachments')
            .orderBy('message.createdAt', 'DESC');
        return (0,nestjs_typeorm_paginate__WEBPACK_IMPORTED_MODULE_9__.paginate)(queryBuilder, { page, limit });
    }
    async findOne(id, organizationId) {
        const message = await this.messageRepository.findOne({
            where: { id, organizationId },
            relations: ['contact', 'sender', 'attachments'],
        });
        if (!message) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Message with ID ${id} not found`);
        }
        return message;
    }
    async update(id, data) {
        const [message, user] = await Promise.all([
            this.findOne(id, data.organizationId),
            this.getUser(data.updatedBy, 'User')
        ]);
        if (message.status === _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SENT || message.status === _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.DELIVERED) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Cannot update sent or delivered messages');
        }
        if (data.subject && message.type === _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageType.EMAIL) {
            const emailOptions = message.emailOptions || { subject: 'No Subject' };
            emailOptions.subject = data.subject;
            message.emailOptions = emailOptions;
        }
        if (data.content)
            message.content = data.content;
        if (data.status)
            message.status = data.status;
        if (data.scheduledFor)
            message.scheduledFor = new Date(data.scheduledFor);
        if (data.metadata)
            message.metadata = data.metadata;
        if (data.notes)
            message.notes = data.notes;
        message.updatedById = data.updatedBy;
        return this.messageRepository.save(message);
    }
    async remove(id, organizationId) {
        const message = await this.findOne(id, organizationId);
        await this.messageRepository.softRemove(message);
    }
    async createTemplate(data) {
        const user = await this.getUser(data.createdBy, 'User');
        const { category } = data, restData = __rest(data, ["category"]);
        const templateData = {
            name: data.name,
            description: data.description,
            type: data.type,
            subject: data.subject || '',
            content: data.content,
            parameters: data.variables || {},
            isDefault: data.isDefault || false,
            isActive: true,
            organizationId: data.organizationId,
            createdById: data.createdBy,
            metadata: {}
        };
        const templateEntity = this.templateRepository.create(templateData);
        const template = Array.isArray(templateEntity) ? templateEntity[0] : templateEntity;
        if (category) {
            if (typeof category === 'string') {
                template.category = { id: category };
            }
            else if (category && typeof category === 'object') {
                template.category = category;
            }
        }
        const result = await this.templateRepository.save(template);
        return Array.isArray(result) ? result[0] : result;
    }
    async getTemplates(query) {
        return this.templateRepository.find({
            where: { organizationId: query.organizationId },
            order: { name: 'ASC' },
        });
    }
    async sendBulk(data) {
        return this.withTransaction(async (queryRunner) => {
            const contacts = await this.contactRepository.find({
                where: { id: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.In)(data.contactIds), organizationId: data.organizationId },
            });
            if (contacts.length !== data.contactIds.length) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Some contacts were not found');
            }
            if (!data.messageData) {
                throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Message data is required');
            }
            const sender = await this.getUser(data.senderId, 'Sender');
            const messagesData = contacts.map(contact => {
                return {
                    content: data.content || '',
                    subject: data.subject,
                    type: data.type,
                    scheduledFor: data.scheduledFor ? new Date(data.scheduledFor) : undefined,
                    organizationId: data.organizationId,
                    contactId: contact.id,
                    senderId: data.senderId,
                    status: data.scheduledFor ? _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED : _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.QUEUED,
                    templateId: data.templateId
                };
            });
            const messages = this.messageRepository.create(messagesData);
            const savedMessages = await queryRunner.manager.save(_entities_message_entity__WEBPACK_IMPORTED_MODULE_3__.Message, messages);
            if (data.attachments && data.attachments.length > 0) {
                const allAttachments = [];
                for (const message of savedMessages) {
                    data.attachments.forEach(attachment => {
                        const newAttachment = this.attachmentRepository.create({
                            fileName: attachment.filename,
                            fileSize: 0,
                            mimeType: attachment.contentType,
                            filePath: attachment.content,
                            publicUrl: attachment.content,
                            isUploaded: true,
                            message: message,
                            messageId: message.id
                        });
                        allAttachments.push(newAttachment);
                    });
                }
                if (allAttachments.length > 0) {
                    await queryRunner.manager.save(_entities_message_attachment_entity__WEBPACK_IMPORTED_MODULE_5__.MessageAttachment, allAttachments);
                }
            }
            this.eventEmitter.emit('messages.bulk.created', savedMessages);
            return {
                success: true,
                count: savedMessages.length,
                messageIds: savedMessages.map(m => m.id),
            };
        });
    }
    async getStatistics(query) {
        const { organizationId, startDate, endDate } = query;
        const queryBuilder = this.messageRepository
            .createQueryBuilder('message')
            .where('message.organizationId = :organizationId', { organizationId });
        if (startDate) {
            queryBuilder.andWhere('message.createdAt >= :startDate', { startDate });
        }
        if (endDate) {
            queryBuilder.andWhere('message.createdAt <= :endDate', { endDate });
        }
        const stats = await queryBuilder
            .select([
            'COUNT(*) as total',
            'COUNT(CASE WHEN status = :sent THEN 1 END) as sent',
            'COUNT(CASE WHEN status = :delivered THEN 1 END) as delivered',
            'COUNT(CASE WHEN status = :failed THEN 1 END) as failed',
            'COUNT(CASE WHEN readAt IS NOT NULL THEN 1 END) as read',
        ])
            .setParameter('sent', _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SENT)
            .setParameter('delivered', _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.DELIVERED)
            .setParameter('failed', _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.FAILED)
            .getRawOne();
        return stats;
    }
    async resend(id, context) {
        const [message, user] = await Promise.all([
            this.findOne(id, context.organizationId),
            this.getUser(context.userId, 'User')
        ]);
        if (message.status !== _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.FAILED) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException('Only failed messages can be resent');
        }
        const deliveryDetails = message.deliveryDetails || {};
        message.deliveryDetails = Object.assign({ provider: '', attempts: 0, lastAttempt: undefined, errorCode: undefined, errorMessage: undefined }, (message.deliveryDetails || {}));
        message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.QUEUED;
        message.updatedBy = this.asPromiseEntity(user);
        const savedMessage = await this.messageRepository.save(message);
        this.eventEmitter.emit('message.resend', savedMessage);
        return savedMessage;
    }
    async markAsRead(id, context) {
        const message = await this.findOne(id, context.organizationId);
        if (!message.readAt) {
            message.readAt = new Date();
            await this.messageRepository.save(message);
        }
        return message;
    }
    processTemplate(template, contact) {
        return template.replace(/\{\{(\w+)\}\}/g, (match, key) => {
            const value = contact[key];
            return value !== undefined && value !== null ? String(value) : match;
        });
    }
};
MessagesService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_message_entity__WEBPACK_IMPORTED_MODULE_3__.Message)),
    __param(1, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_message_template_entity__WEBPACK_IMPORTED_MODULE_4__.MessageTemplate)),
    __param(2, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_message_attachment_entity__WEBPACK_IMPORTED_MODULE_5__.MessageAttachment)),
    __param(3, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_contacts_entities_contact_entity__WEBPACK_IMPORTED_MODULE_7__.Contact)),
    __param(4, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_users_entities_user_entity__WEBPACK_IMPORTED_MODULE_10__.User)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        typeorm__WEBPACK_IMPORTED_MODULE_2__.DataSource,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_8__.EventEmitter2])
], MessagesService);



/***/ }),
/* 194 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateMessageDto: () => (/* binding */ UpdateMessageDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _create_message_dto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class UpdateMessageDto extends (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.PartialType)((0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.OmitType)(_create_message_dto__WEBPACK_IMPORTED_MODULE_1__.CreateMessageDto, ['type', 'contactId'])) {
    static _OPENAPI_METADATA_FACTORY() {
        return { status: { required: false, enum: (__webpack_require__(30).MessageStatus) }, subject: { required: false, type: () => String }, metadata: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ enum: _create_message_dto__WEBPACK_IMPORTED_MODULE_1__.MessageStatus }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsEnum)(_create_message_dto__WEBPACK_IMPORTED_MODULE_1__.MessageStatus),
    __metadata("design:type", String)
], UpdateMessageDto.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsString)(),
    __metadata("design:type", String)
], UpdateMessageDto.prototype, "subject", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsOptional)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_2__.IsObject)(),
    __metadata("design:type", Object)
], UpdateMessageDto.prototype, "metadata", void 0);


/***/ }),
/* 195 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageQueryDto: () => (/* binding */ MessageQueryDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_message_status_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(196);
/* harmony import */ var _enums_message_type_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(197);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






class MessageQueryDto {
    constructor() {
        this.page = 1;
        this.limit = 10;
    }
    static _OPENAPI_METADATA_FACTORY() {
        return { status: { required: false, enum: (__webpack_require__(196).MessageStatus) }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date }, type: { required: false, enum: (__webpack_require__(197).MessageType) }, contactId: { required: false, type: () => String, format: "uuid" }, senderId: { required: false, type: () => String, format: "uuid" }, search: { required: false, type: () => String }, isRead: { required: false, type: () => Boolean }, fromDate: { required: false, type: () => Date }, toDate: { required: false, type: () => Date }, page: { required: false, type: () => Number, default: 1, minimum: 1 }, limit: { required: false, type: () => Number, default: 10, minimum: 1, maximum: 100 }, organizationId: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by message status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_message_status_enum__WEBPACK_IMPORTED_MODULE_3__.MessageStatus, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageQueryDto.prototype, "status", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by message type' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_message_type_enum__WEBPACK_IMPORTED_MODULE_4__.MessageType, { each: true }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageQueryDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by contact ID' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageQueryDto.prototype, "contactId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by sender ID' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageQueryDto.prototype, "senderId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Search messages by content' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageQueryDto.prototype, "search", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter by read status' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], MessageQueryDto.prototype, "isRead", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter messages from date', type: Date }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Date)
], MessageQueryDto.prototype, "fromDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Filter messages to date', type: Date }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Date),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsDate)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Date)
], MessageQueryDto.prototype, "toDate", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Page number for pagination', default: 1 }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Number)
], MessageQueryDto.prototype, "page", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Items per page for pagination', default: 10 }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => Number),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsInt)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Min)(1),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.Max)(100),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Number)
], MessageQueryDto.prototype, "limit", void 0);


/***/ }),
/* 196 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageStatus: () => (/* binding */ MessageStatus)
/* harmony export */ });
var MessageStatus;
(function (MessageStatus) {
    MessageStatus["DRAFT"] = "DRAFT";
    MessageStatus["QUEUED"] = "QUEUED";
    MessageStatus["SENDING"] = "SENDING";
    MessageStatus["SENT"] = "SENT";
    MessageStatus["DELIVERED"] = "DELIVERED";
    MessageStatus["READ"] = "READ";
    MessageStatus["FAILED"] = "FAILED";
    MessageStatus["CANCELLED"] = "CANCELLED";
    MessageStatus["SCHEDULED"] = "SCHEDULED";
})(MessageStatus || (MessageStatus = {}));


/***/ }),
/* 197 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageType: () => (/* binding */ MessageType)
/* harmony export */ });
var MessageType;
(function (MessageType) {
    MessageType["EMAIL"] = "EMAIL";
    MessageType["SMS"] = "SMS";
    MessageType["PUSH"] = "PUSH";
    MessageType["IN_APP"] = "IN_APP";
    MessageType["VOICE"] = "VOICE";
    MessageType["WHATSAPP"] = "WHATSAPP";
    MessageType["TELEGRAM"] = "TELEGRAM";
    MessageType["INTERNAL"] = "INTERNAL";
})(MessageType || (MessageType = {}));


/***/ }),
/* 198 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageTemplateDto: () => (/* binding */ MessageTemplateDto),
/* harmony export */   TemplateVariablesDto: () => (/* binding */ TemplateVariablesDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_message_type_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(197);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class TemplateVariablesDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { contact: { required: false, type: () => Object }, organization: { required: false, type: () => Object }, custom: { required: false, type: () => Object } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Contact variables' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], TemplateVariablesDto.prototype, "contact", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Organization variables' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], TemplateVariablesDto.prototype, "organization", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Custom variables' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], TemplateVariablesDto.prototype, "custom", void 0);
class MessageTemplateDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { name: { required: true, type: () => String }, description: { required: false, type: () => String }, type: { required: true, enum: (__webpack_require__(197).MessageType) }, subject: { required: false, type: () => String }, content: { required: true, type: () => String }, variables: { required: false, type: () => (__webpack_require__(198).TemplateVariablesDto) }, isDefault: { required: false, type: () => Boolean }, category: { required: false, type: () => String }, organizationId: { required: false, type: () => String }, createdBy: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Template name' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], MessageTemplateDto.prototype, "name", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Template description' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageTemplateDto.prototype, "description", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Message type', enum: _enums_message_type_enum__WEBPACK_IMPORTED_MODULE_3__.MessageType }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_message_type_enum__WEBPACK_IMPORTED_MODULE_3__.MessageType),
    __metadata("design:type", String)
], MessageTemplateDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Template subject (for email)' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageTemplateDto.prototype, "subject", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Template content' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], MessageTemplateDto.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Template variables' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)(),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => TemplateVariablesDto),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", TemplateVariablesDto)
], MessageTemplateDto.prototype, "variables", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Is this a default template?' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsBoolean)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Boolean)
], MessageTemplateDto.prototype, "isDefault", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Category or tag for the template' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], MessageTemplateDto.prototype, "category", void 0);


/***/ }),
/* 199 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AttachmentDto: () => (/* binding */ AttachmentDto),
/* harmony export */   BulkMessageDto: () => (/* binding */ BulkMessageDto)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var class_validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_validator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enums_message_type_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(197);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





class AttachmentDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { filename: { required: true, type: () => String }, contentType: { required: true, type: () => String }, content: { required: true, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Attachment filename' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], AttachmentDto.prototype, "filename", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Attachment content type' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], AttachmentDto.prototype, "contentType", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Attachment URL or content ID' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], AttachmentDto.prototype, "content", void 0);
class BulkMessageDto {
    static _OPENAPI_METADATA_FACTORY() {
        return { contactIds: { required: true, type: () => [String], format: "uuid" }, messageData: { required: true, type: () => (__webpack_require__(30).CreateMessageDto) }, subject: { required: false, type: () => String }, content: { required: true, type: () => String }, type: { required: true, enum: (__webpack_require__(197).MessageType) }, templateId: { required: false, type: () => String, format: "uuid" }, variables: { required: false, type: () => Object }, attachments: { required: false, type: () => [(__webpack_require__(199).AttachmentDto)] }, scheduledFor: { required: false, type: () => String }, organizationId: { required: false, type: () => String }, senderId: { required: false, type: () => String } };
    }
}
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Array of contact IDs to send messages to', type: [String] }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4', { each: true }),
    __metadata("design:type", Array)
], BulkMessageDto.prototype, "contactIds", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Message sender ID' }),
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Message subject (for email)', required: false }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], BulkMessageDto.prototype, "subject", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Message content body' }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsNotEmpty)(),
    __metadata("design:type", String)
], BulkMessageDto.prototype, "content", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiProperty)({ description: 'Type of message', enum: _enums_message_type_enum__WEBPACK_IMPORTED_MODULE_3__.MessageType }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsEnum)(_enums_message_type_enum__WEBPACK_IMPORTED_MODULE_3__.MessageType),
    __metadata("design:type", String)
], BulkMessageDto.prototype, "type", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Template ID to use', required: false }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsUUID)('4'),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], BulkMessageDto.prototype, "templateId", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Template variables', required: false }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsObject)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Object)
], BulkMessageDto.prototype, "variables", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Message attachments', type: [AttachmentDto], required: false }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsArray)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.ValidateNested)({ each: true }),
    (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.Type)(() => AttachmentDto),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", Array)
], BulkMessageDto.prototype, "attachments", void 0);
__decorate([
    (0,_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__.ApiPropertyOptional)({ description: 'Schedule message for a later time', required: false }),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsString)(),
    (0,class_validator__WEBPACK_IMPORTED_MODULE_1__.IsOptional)(),
    __metadata("design:type", String)
], BulkMessageDto.prototype, "scheduledFor", void 0);


/***/ }),
/* 200 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TemplateCategory: () => (/* binding */ TemplateCategory)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _message_template_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



let TemplateCategory = class TemplateCategory {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, organizationId: { required: true, type: () => String }, templates: { required: true, type: () => [(__webpack_require__(31).MessageTemplate)] }, createdById: { required: true, type: () => String }, updatedById: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], TemplateCategory.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], TemplateCategory.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TemplateCategory.prototype, "description", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    __metadata("design:type", String)
], TemplateCategory.prototype, "organizationId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.OneToMany)(() => _message_template_entity__WEBPACK_IMPORTED_MODULE_2__.MessageTemplate, template => template.category),
    __metadata("design:type", Array)
], TemplateCategory.prototype, "templates", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TemplateCategory.prototype, "createdById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", String)
], TemplateCategory.prototype, "updatedById", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], TemplateCategory.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], TemplateCategory.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.DeleteDateColumn)(),
    __metadata("design:type", Date)
], TemplateCategory.prototype, "deletedAt", void 0);
TemplateCategory = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('template_categories')
], TemplateCategory);



/***/ }),
/* 201 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageEventHandler: () => (/* binding */ MessageEventHandler)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _message_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(202);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



let MessageEventHandler = class MessageEventHandler {
    constructor(eventEmitter) {
        this.eventEmitter = eventEmitter;
    }
    emit(event) {
        this.eventEmitter.emit(event.type, event.message);
    }
    emitCreated(message) {
        this.emit(new _message_events__WEBPACK_IMPORTED_MODULE_2__.MessageEvent(_message_events__WEBPACK_IMPORTED_MODULE_2__.MessageEventType.CREATED, message));
    }
};
MessageEventHandler = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.EventEmitter2])
], MessageEventHandler);



/***/ }),
/* 202 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageEvent: () => (/* binding */ MessageEvent),
/* harmony export */   MessageEventType: () => (/* binding */ MessageEventType)
/* harmony export */ });
var MessageEventType;
(function (MessageEventType) {
    MessageEventType["CREATED"] = "message.created";
    MessageEventType["UPDATED"] = "message.updated";
    MessageEventType["SENT"] = "message.sent";
    MessageEventType["FAILED"] = "message.failed";
})(MessageEventType || (MessageEventType = {}));
class MessageEvent {
    constructor(type, message) {
        this.type = type;
        this.message = message;
    }
}


/***/ }),
/* 203 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageDeliveryListener: () => (/* binding */ MessageDeliveryListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_message_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29);
/* harmony import */ var _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(30);
/* harmony import */ var _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(46);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};







let MessageDeliveryListener = class MessageDeliveryListener {
    constructor(messageRepository, notificationsService) {
        this.messageRepository = messageRepository;
        this.notificationsService = notificationsService;
    }
    async handleMessageDelivered(payload) {
        const { message, deliveryDetails } = payload;
        message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_5__.MessageStatus.DELIVERED;
        message.deliveredAt = new Date();
        message.deliveryDetails = deliveryDetails;
        await this.messageRepository.save(message);
        await this.notificationsService.notifyMessageDelivery(message);
    }
    async handleMessageFailed(payload) {
        var _a;
        const { message, error } = payload;
        message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_5__.MessageStatus.FAILED;
        if (!message.deliveryDetails) {
            message.deliveryDetails = {
                provider: '',
                errorCode: error.code,
                errorMessage: error.message,
                lastAttempt: new Date(),
                attempts: 1
            };
        }
        else {
            message.deliveryDetails = Object.assign(Object.assign({}, message.deliveryDetails), { errorCode: error.code, errorMessage: error.message, lastAttempt: new Date(), attempts: (message.deliveryDetails.attempts || 0) + 1 });
        }
        await this.messageRepository.save(message);
        const attempts = ((_a = message.deliveryDetails) === null || _a === void 0 ? void 0 : _a.attempts) || 0;
        if (attempts >= 3) {
            await this.notificationsService.notifyMessageFailure(message);
        }
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('message.delivered'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], MessageDeliveryListener.prototype, "handleMessageDelivered", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('message.failed'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], MessageDeliveryListener.prototype, "handleMessageFailed", null);
MessageDeliveryListener = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_2__.InjectRepository)(_entities_message_entity__WEBPACK_IMPORTED_MODULE_4__.Message)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_3__.Repository,
        _notifications_services_notifications_service__WEBPACK_IMPORTED_MODULE_6__.NotificationsService])
], MessageDeliveryListener);



/***/ }),
/* 204 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageQueueListener: () => (/* binding */ MessageQueueListener)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _entities_message_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29);
/* harmony import */ var _services_message_delivery_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(205);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let MessageQueueListener = class MessageQueueListener {
    constructor(deliveryService) {
        this.deliveryService = deliveryService;
    }
    handleMessageCreated(message) {
        return this.deliveryService.processMessage(message);
    }
    handleMessageResend(message) {
        return this.deliveryService.processMessage(message);
    }
    handleBulkMessages(messages) {
        return this.deliveryService.processBulkMessages(messages);
    }
};
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('message.created'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_entities_message_entity__WEBPACK_IMPORTED_MODULE_2__.Message]),
    __metadata("design:returntype", void 0)
], MessageQueueListener.prototype, "handleMessageCreated", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('message.resend'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [_entities_message_entity__WEBPACK_IMPORTED_MODULE_2__.Message]),
    __metadata("design:returntype", void 0)
], MessageQueueListener.prototype, "handleMessageResend", null);
__decorate([
    (0,_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_1__.OnEvent)('messages.bulk.created'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Array]),
    __metadata("design:returntype", void 0)
], MessageQueueListener.prototype, "handleBulkMessages", null);
MessageQueueListener = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_services_message_delivery_service__WEBPACK_IMPORTED_MODULE_3__.MessageDeliveryService])
], MessageQueueListener);



/***/ }),
/* 205 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageDeliveryService: () => (/* binding */ MessageDeliveryService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _entities_message_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(29);
/* harmony import */ var _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(30);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var MessageDeliveryService_1;






let MessageDeliveryService = MessageDeliveryService_1 = class MessageDeliveryService {
    constructor(messageRepository, eventEmitter) {
        this.messageRepository = messageRepository;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(MessageDeliveryService_1.name);
    }
    async processMessage(message) {
        try {
            if (message.status === _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_5__.MessageStatus.DELIVERED) {
                return;
            }
            if (message.scheduledFor && message.scheduledFor > new Date()) {
                return;
            }
            message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_5__.MessageStatus.DELIVERING;
            await this.messageRepository.save(message);
            const deliveryResult = await this.deliverMessage(message);
            if (deliveryResult.success) {
                this.eventEmitter.emit('message.delivered', {
                    message,
                    deliveryDetails: {
                        provider: deliveryResult.provider,
                        providerMessageId: deliveryResult.providerMessageId,
                        deliveredAt: new Date(),
                    },
                });
            }
            else {
                this.eventEmitter.emit('message.failed', {
                    message,
                    error: {
                        code: deliveryResult.errorCode || 'DELIVERY_FAILED',
                        message: deliveryResult.errorMessage || 'Unknown delivery error',
                    },
                });
            }
        }
        catch (error) {
            this.logger.error(`Error processing message ${message.id}: ${error.message}`, error.stack);
            this.eventEmitter.emit('message.failed', {
                message,
                error: {
                    code: 'PROCESS_ERROR',
                    message: error.message,
                },
            });
        }
    }
    async processBulkMessages(messages) {
        try {
            const promises = messages.map(message => this.processMessage(message));
            await Promise.all(promises);
        }
        catch (error) {
            this.logger.error(`Error processing bulk messages: ${error.message}`, error.stack);
        }
    }
    async deliverMessage(message) {
        try {
            const isSuccessful = Math.random() > 0.2;
            if (isSuccessful) {
                return {
                    success: true,
                    provider: 'demo-provider',
                    providerMessageId: `msg-${Date.now()}-${Math.floor(Math.random() * 10000)}`,
                };
            }
            else {
                return {
                    success: false,
                    provider: 'demo-provider',
                    errorCode: 'PROVIDER_ERROR',
                    errorMessage: 'Simulated provider error',
                };
            }
        }
        catch (error) {
            this.logger.error(`Delivery error for message ${message.id}: ${error.message}`, error.stack);
            return {
                success: false,
                errorCode: 'DELIVERY_EXCEPTION',
                errorMessage: error.message,
            };
        }
    }
    async retryMessage(messageId) {
        const message = await this.messageRepository.findOne({ where: { id: messageId } });
        if (!message) {
            throw new Error(`Message with ID ${messageId} not found`);
        }
        message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_5__.MessageStatus.SENDING;
        await this.messageRepository.save(message);
        this.eventEmitter.emit('message.resend', message);
    }
};
MessageDeliveryService = MessageDeliveryService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_message_entity__WEBPACK_IMPORTED_MODULE_4__.Message)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], MessageDeliveryService);



/***/ }),
/* 206 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ErrorHandlerService: () => (/* binding */ ErrorHandlerService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

let ErrorHandlerService = class ErrorHandlerService {
    notFound(entity, id) {
        throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`${entity} with ID ${id} not found`);
    }
    badRequest(message) {
        throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.BadRequestException(message);
    }
    conflict(message) {
        throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.ConflictException(message);
    }
};
ErrorHandlerService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)()
], ErrorHandlerService);



/***/ }),
/* 207 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageSchedulerService: () => (/* binding */ MessageSchedulerService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8);
/* harmony import */ var _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _nestjs_schedule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9);
/* harmony import */ var _nestjs_schedule__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_schedule__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _entities_message_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(29);
/* harmony import */ var _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(30);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var MessageSchedulerService_1;







let MessageSchedulerService = MessageSchedulerService_1 = class MessageSchedulerService {
    constructor(messageRepository, eventEmitter) {
        this.messageRepository = messageRepository;
        this.eventEmitter = eventEmitter;
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(MessageSchedulerService_1.name);
    }
    async onModuleInit() {
        this.logger.log('Message scheduler service initialized');
        try {
            await this.processScheduledMessages();
        }
        catch (error) {
            this.logger.error('Error processing scheduled messages:', error);
        }
    }
    onModuleDestroy() {
        if (this.schedulerInterval) {
            clearInterval(this.schedulerInterval);
        }
    }
    async scheduleMessage(message, scheduledFor) {
        message.scheduledFor = scheduledFor;
        message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED;
        return this.messageRepository.save(message);
    }
    async cancelScheduledMessage(messageId) {
        const message = await this.messageRepository.findOne({ where: { id: messageId } });
        if (!message) {
            throw new Error(`Message with ID ${messageId} not found`);
        }
        if (message.status !== _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED) {
            throw new Error(`Message is not scheduled: ${messageId}`);
        }
        message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SENDING;
        message.scheduledFor = undefined;
        await this.messageRepository.save(message);
        this.logger.log(`Scheduled message ${messageId} has been canceled`);
    }
    async rescheduleMessage(messageId, newScheduledFor) {
        const message = await this.messageRepository.findOne({ where: { id: messageId } });
        if (!message) {
            throw new Error(`Message with ID ${messageId} not found`);
        }
        message.scheduledFor = newScheduledFor;
        message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED;
        const updatedMessage = await this.messageRepository.save(message);
        this.logger.log(`Message ${messageId} rescheduled for ${newScheduledFor}`);
        return updatedMessage;
    }
    async processScheduledMessages() {
        try {
            this.logger.debug('Checking for scheduled messages...');
            const now = new Date();
            const dueSendMessages = await this.messageRepository.find({
                where: {
                    status: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED,
                    scheduledFor: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.LessThanOrEqual)(now),
                },
            });
            if (dueSendMessages.length === 0) {
                return;
            }
            this.logger.log(`Found ${dueSendMessages.length} scheduled messages to process`);
            await Promise.all(dueSendMessages.map(async (message) => {
                message.status = _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SENDING;
                await this.messageRepository.save(message);
                this.eventEmitter.emit('message.created', message);
            }));
        }
        catch (error) {
            this.logger.error('Error processing scheduled messages:', error);
        }
    }
    async getAllScheduledMessages() {
        return this.messageRepository.find({
            where: { status: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED },
            order: { scheduledFor: 'ASC' },
        });
    }
    async getScheduledMessagesForPeriod(startDate, endDate) {
        return this.messageRepository.find({
            where: {
                status: _dto_create_message_dto__WEBPACK_IMPORTED_MODULE_6__.MessageStatus.SCHEDULED,
                scheduledFor: (0,typeorm__WEBPACK_IMPORTED_MODULE_2__.Between)(startDate, endDate),
            },
            order: { scheduledFor: 'ASC' },
        });
    }
};
__decorate([
    (0,_nestjs_schedule__WEBPACK_IMPORTED_MODULE_4__.Cron)(_nestjs_schedule__WEBPACK_IMPORTED_MODULE_4__.CronExpression.EVERY_MINUTE),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], MessageSchedulerService.prototype, "processScheduledMessages", null);
MessageSchedulerService = MessageSchedulerService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_message_entity__WEBPACK_IMPORTED_MODULE_5__.Message)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository,
        _nestjs_event_emitter__WEBPACK_IMPORTED_MODULE_3__.EventEmitter2])
], MessageSchedulerService);



/***/ }),
/* 208 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TemplateService: () => (/* binding */ TemplateService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_message_template_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(31);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};




let TemplateService = class TemplateService {
    constructor(templateRepository) {
        this.templateRepository = templateRepository;
    }
    async findById(id, organizationId) {
        const template = await this.templateRepository.findOne({
            where: { id, organizationId }
        });
        if (!template) {
            throw new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.NotFoundException(`Template with ID ${id} not found`);
        }
        return template;
    }
    processTemplate(template, data) {
        return template.replace(/\{\{(\w+)\}\}/g, (match, key) => {
            const value = data[key];
            return value !== undefined && value !== null ? String(value) : match;
        });
    }
};
TemplateService = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_message_template_entity__WEBPACK_IMPORTED_MODULE_3__.MessageTemplate)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository])
], TemplateService);



/***/ }),
/* 209 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageRepository: () => (/* binding */ MessageRepository)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _entities_message_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(29);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};




let MessageRepository = class MessageRepository {
    constructor(repository) {
        this.repository = repository;
    }
    async findById(id, organizationId) {
        return this.repository.findOne({
            where: { id, organizationId },
            relations: ['contact', 'sender', 'attachments'],
        });
    }
    async create(data) {
        const entity = this.repository.create(data);
        const result = await this.repository.save(entity);
        if (Array.isArray(result)) {
            if (result.length === 0) {
                throw new Error('Failed to create entity');
            }
            return result[0];
        }
        return result;
    }
};
MessageRepository = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __param(0, (0,_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.InjectRepository)(_entities_message_entity__WEBPACK_IMPORTED_MODULE_3__.Message)),
    __metadata("design:paramtypes", [typeorm__WEBPACK_IMPORTED_MODULE_2__.Repository])
], MessageRepository);



/***/ }),
/* 210 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DomainModule: () => (/* binding */ DomainModule)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _entities_domain_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59);
/* harmony import */ var _entities_dns_record_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(211);
/* harmony import */ var _entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(61);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





let DomainModule = class DomainModule {
};
DomainModule = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Module)({
        imports: [
            _nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule.forFeature([
                _entities_domain_entity__WEBPACK_IMPORTED_MODULE_2__.Domain,
                _entities_dns_record_entity__WEBPACK_IMPORTED_MODULE_3__.DnsRecord,
                _entities_domain_verification_token_entity__WEBPACK_IMPORTED_MODULE_4__.DomainVerificationToken
            ]),
        ],
        controllers: [],
        providers: [],
        exports: [_nestjs_typeorm__WEBPACK_IMPORTED_MODULE_1__.TypeOrmModule],
    })
], DomainModule);



/***/ }),
/* 211 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DnsRecord: () => (/* binding */ DnsRecord),
/* harmony export */   DnsRecordType: () => (/* binding */ DnsRecordType)
/* harmony export */ });
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var DnsRecordType;
(function (DnsRecordType) {
    DnsRecordType["A"] = "A";
    DnsRecordType["AAAA"] = "AAAA";
    DnsRecordType["CNAME"] = "CNAME";
    DnsRecordType["MX"] = "MX";
    DnsRecordType["TXT"] = "TXT";
    DnsRecordType["NS"] = "NS";
    DnsRecordType["SRV"] = "SRV";
    DnsRecordType["CAA"] = "CAA";
    DnsRecordType["PTR"] = "PTR";
    DnsRecordType["SOA"] = "SOA";
})(DnsRecordType || (DnsRecordType = {}));
let DnsRecord = class DnsRecord {
    static _OPENAPI_METADATA_FACTORY() {
        return { id: { required: true, type: () => String }, domainId: { required: true, type: () => String }, domain: { required: true, type: () => Object }, type: { required: true, enum: (__webpack_require__(211).DnsRecordType) }, name: { required: true, type: () => String }, content: { required: true, type: () => String }, ttl: { required: true, type: () => Number }, priority: { required: false, type: () => Number }, isActive: { required: true, type: () => Boolean }, metadata: { required: false, type: () => ({ proxied: { required: false, type: () => Boolean }, cloudflare: { required: false, type: () => ({ proxied: { required: false, type: () => Boolean }, proxiedAt: { required: false, type: () => Date }, developmentMode: { required: false, type: () => Boolean } }) }, aws: { required: false, type: () => ({ regionId: { required: false, type: () => String }, healthCheckId: { required: false, type: () => String }, evaluateTargetHealth: { required: false, type: () => Boolean } }) }, google: { required: false, type: () => ({ routingPolicy: { required: false, type: () => String }, healthChecked: { required: false, type: () => Boolean } }) }, azure: { required: false, type: () => ({ trafficManagerProfile: { required: false, type: () => String }, weight: { required: false, type: () => Number } }) } }) }, validation: { required: false, type: () => ({ isValid: { required: true, type: () => Boolean }, lastChecked: { required: true, type: () => Date }, errors: { required: false, type: () => [String] }, warnings: { required: false, type: () => [String] } }) }, monitoring: { required: false, type: () => ({ enabled: { required: true, type: () => Boolean }, lastCheck: { required: false, type: () => Date }, status: { required: false, type: () => Object }, responseTime: { required: false, type: () => Number }, healthCheckId: { required: false, type: () => String }, alerts: { required: false, type: () => ({ email: { required: false, type: () => [String] }, webhook: { required: false, type: () => [String] } }) } }) }, geolocation: { required: false, type: () => ({ enabled: { required: true, type: () => Boolean }, regions: { required: false, type: () => [String] }, countries: { required: false, type: () => [String] }, continents: { required: false, type: () => [String] }, defaultResponse: { required: false, type: () => String } }) }, loadBalancing: { required: false, type: () => ({ enabled: { required: true, type: () => Boolean }, method: { required: false, type: () => Object }, pools: { required: false } }) }, failover: { required: false, type: () => ({ enabled: { required: true, type: () => Boolean }, primary: { required: false, type: () => String }, secondary: { required: false, type: () => String }, healthCheck: { required: false, type: () => ({ type: { required: true, type: () => String }, interval: { required: true, type: () => Number }, timeout: { required: true, type: () => Number }, retries: { required: true, type: () => Number } }) } }) }, tags: { required: false, type: () => [String] }, isSystem: { required: true, type: () => Boolean }, isLocked: { required: true, type: () => Boolean }, isProtected: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, createdBy: { required: false, type: () => String }, updatedBy: { required: false, type: () => String }, history: { required: false }, notes: { required: false, type: () => String }, isDeleted: { required: true, type: () => Boolean }, deletedBy: { required: false, type: () => String }, deletedAt: { required: false, type: () => Date }, propagation: { required: false, type: () => ({ status: { required: true, type: () => Object }, startedAt: { required: false, type: () => Date }, completedAt: { required: false, type: () => Date }, nameservers: { required: false } }) }, analytics: { required: false, type: () => ({ lastUpdated: { required: false, type: () => Date }, queries: { required: false, type: () => ({ total: { required: true, type: () => Number }, timeframe: { required: true, type: () => String }, distribution: { required: false, type: () => Object } }) }, performance: { required: false, type: () => ({ responseTime: { required: true, type: () => Number }, availability: { required: true, type: () => Number } }) } }) } };
    }
};
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], DnsRecord.prototype, "id", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], DnsRecord.prototype, "domainId", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.ManyToOne)('Domain', 'dnsRecords', { onDelete: 'CASCADE' }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.JoinColumn)({ name: 'domainId' }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "domain", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({
        type: 'enum',
        enum: DnsRecordType
    }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], DnsRecord.prototype, "type", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)(),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", String)
], DnsRecord.prototype, "name", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text'),
    __metadata("design:type", String)
], DnsRecord.prototype, "content", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('int', { default: 3600 }),
    __metadata("design:type", Number)
], DnsRecord.prototype, "ttl", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('int', { nullable: true }),
    __metadata("design:type", Number)
], DnsRecord.prototype, "priority", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: true }),
    __metadata("design:type", Boolean)
], DnsRecord.prototype, "isActive", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "metadata", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "validation", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "monitoring", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "geolocation", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "loadBalancing", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "failover", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { array: true, nullable: true }),
    __metadata("design:type", Array)
], DnsRecord.prototype, "tags", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], DnsRecord.prototype, "isSystem", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], DnsRecord.prototype, "isLocked", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], DnsRecord.prototype, "isProtected", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.CreateDateColumn)(),
    __metadata("design:type", Date)
], DnsRecord.prototype, "createdAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.UpdateDateColumn)(),
    __metadata("design:type", Date)
], DnsRecord.prototype, "updatedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], DnsRecord.prototype, "createdBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], DnsRecord.prototype, "updatedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Array)
], DnsRecord.prototype, "history", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], DnsRecord.prototype, "notes", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('boolean', { default: false }),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(),
    __metadata("design:type", Boolean)
], DnsRecord.prototype, "isDeleted", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], DnsRecord.prototype, "deletedBy", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)({ nullable: true }),
    __metadata("design:type", Date)
], DnsRecord.prototype, "deletedAt", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "propagation", void 0);
__decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], DnsRecord.prototype, "analytics", void 0);
DnsRecord = __decorate([
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Entity)('dns_records'),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['domainId', 'type']),
    (0,typeorm__WEBPACK_IMPORTED_MODULE_1__.Index)(['domainId', 'name'])
], DnsRecord);



/***/ }),
/* 212 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   appConfigValidationSchema: () => (/* binding */ appConfigValidationSchema),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(213);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(joi__WEBPACK_IMPORTED_MODULE_1__);


const appConfigValidationSchema = joi__WEBPACK_IMPORTED_MODULE_1__.object({
    NODE_ENV: joi__WEBPACK_IMPORTED_MODULE_1__.string()
        .valid('development', 'production', 'test', 'staging')
        .default('development'),
    APP_NAME: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('Patient Relationship Manager'),
    APP_HOST: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('localhost'),
    APP_PORT: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(3000),
    API_PREFIX: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('api'),
    API_VERSION: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('v1'),
    FRONTEND_URL: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    DOCS_ENABLED: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(true),
    RATE_LIMIT_TTL: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(60),
    RATE_LIMIT_MAX: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(100),
    CORS_ENABLED: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(true),
    CORS_ORIGINS: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('*'),
    LOG_LEVEL: joi__WEBPACK_IMPORTED_MODULE_1__.string()
        .valid('error', 'warn', 'info', 'debug', 'verbose')
        .default('info'),
    LOG_CONSOLE: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(true),
    LOG_FILE: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_nestjs_config__WEBPACK_IMPORTED_MODULE_0__.registerAs)('app', () => {
    var _a;
    return ({
        nodeEnv: process.env.NODE_ENV || 'development',
        name: process.env.APP_NAME || 'Patient Relationship Manager',
        host: process.env.APP_HOST || 'localhost',
        port: parseInt(process.env.APP_PORT || '3000', 10),
        apiPrefix: process.env.API_PREFIX || 'api',
        apiVersion: process.env.API_VERSION || 'v1',
        frontendUrl: process.env.FRONTEND_URL,
        docsEnabled: process.env.DOCS_ENABLED === 'true',
        rateLimiting: {
            ttl: parseInt(process.env.RATE_LIMIT_TTL || '60', 10),
            limit: parseInt(process.env.RATE_LIMIT_MAX || '100', 10),
        },
        cors: {
            enabled: process.env.CORS_ENABLED === 'true',
            origins: ((_a = process.env.CORS_ORIGINS) === null || _a === void 0 ? void 0 : _a.split(',')) || ['*'],
        },
        logging: {
            level: process.env.LOG_LEVEL || 'info',
            console: process.env.LOG_CONSOLE === 'true',
            file: process.env.LOG_FILE === 'true',
        },
    });
}));


/***/ }),
/* 213 */
/***/ ((module) => {

module.exports = require("joi");

/***/ }),
/* 214 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   dataSource: () => (/* binding */ dataSource),
/* harmony export */   databaseConfigValidationSchema: () => (/* binding */ databaseConfigValidationSchema),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   typeOrmConfig: () => (/* binding */ typeOrmConfig),
/* harmony export */   typeOrmConfigSync: () => (/* binding */ typeOrmConfigSync)
/* harmony export */ });
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(213);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(joi__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_2__);



const databaseConfigValidationSchema = joi__WEBPACK_IMPORTED_MODULE_1__.object({
    DB_HOST: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    DB_PORT: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(5432),
    DB_USERNAME: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    DB_PASSWORD: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    DB_NAME: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    DB_SCHEMA: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('public'),
    DB_SSL: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
    DB_SYNC: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
    DB_LOGGING: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
    DB_MAX_CONNECTIONS: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(100),
    DB_MIN_CONNECTIONS: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(1),
    DB_CONNECTION_TIMEOUT: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(10000),
    DB_RETRY_ATTEMPTS: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(10),
    DB_RETRY_DELAY: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(3000),
    DB_MIGRATIONS_ENABLED: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(true),
    DB_MIGRATIONS_DIR: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('src/database/migrations'),
    DB_MIGRATIONS_TABLE: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('migrations'),
});
const config = (0,_nestjs_config__WEBPACK_IMPORTED_MODULE_0__.registerAs)('database', () => ({
    host: process.env.DB_HOST,
    port: parseInt(process.env.DB_PORT || '5432', 10),
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    schema: process.env.DB_SCHEMA || 'public',
    ssl: process.env.DB_SSL === 'true',
    synchronize: process.env.DB_SYNC === 'true',
    logging: process.env.DB_LOGGING === 'true',
    maxConnections: parseInt(process.env.DB_MAX_CONNECTIONS || '100', 10),
    minConnections: parseInt(process.env.DB_MIN_CONNECTIONS || '1', 10),
    connectionTimeout: parseInt(process.env.DB_CONNECTION_TIMEOUT || '10000', 10),
    retryAttempts: parseInt(process.env.DB_RETRY_ATTEMPTS || '10', 10),
    retryDelay: parseInt(process.env.DB_RETRY_DELAY || '3000', 10),
    migrations: {
        enabled: process.env.DB_MIGRATIONS_ENABLED === 'true',
        directory: process.env.DB_MIGRATIONS_DIR || 'src/database/migrations',
        tableName: process.env.DB_MIGRATIONS_TABLE || 'migrations',
    },
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);
const typeOrmConfig = async () => {
    const dbConfig = config();
    return {
        type: 'postgres',
        host: dbConfig.host,
        port: dbConfig.port,
        username: dbConfig.username,
        password: dbConfig.password,
        database: dbConfig.database,
        schema: dbConfig.schema,
        ssl: dbConfig.ssl ? { rejectUnauthorized: false } : false,
        synchronize: dbConfig.synchronize,
        logging: dbConfig.logging,
        entities: ['dist/**/*.entity.js'],
        migrations: [`${dbConfig.migrations.directory}/*.{ts,js}`],
        migrationsTableName: dbConfig.migrations.tableName,
        migrationsRun: dbConfig.migrations.enabled,
        poolSize: dbConfig.maxConnections,
        connectTimeoutMS: dbConfig.connectionTimeout,
        extra: {
            max: dbConfig.maxConnections,
            min: dbConfig.minConnections,
        },
        autoLoadEntities: true,
    };
};
const typeOrmConfigSync = () => {
    const dbConfig = config();
    return {
        type: 'postgres',
        host: dbConfig.host,
        port: dbConfig.port,
        username: dbConfig.username,
        password: dbConfig.password,
        database: dbConfig.database,
        schema: dbConfig.schema,
        ssl: dbConfig.ssl ? { rejectUnauthorized: false } : false,
        synchronize: dbConfig.synchronize,
        logging: dbConfig.logging,
        entities: ['src/**/*.entity.ts'],
        migrations: [`${dbConfig.migrations.directory}/*.ts`],
        migrationsTableName: dbConfig.migrations.tableName,
        migrationsRun: dbConfig.migrations.enabled,
        extra: {
            max: dbConfig.maxConnections,
            min: dbConfig.minConnections,
            connectionTimeout: dbConfig.connectionTimeout,
        },
    };
};
const dataSource = new typeorm__WEBPACK_IMPORTED_MODULE_2__.DataSource(typeOrmConfigSync());


/***/ }),
/* 215 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getCacheConfig: () => (/* binding */ getCacheConfig),
/* harmony export */   getRedisConfig: () => (/* binding */ getRedisConfig),
/* harmony export */   getRedisOptions: () => (/* binding */ getRedisOptions),
/* harmony export */   redisConfigValidationSchema: () => (/* binding */ redisConfigValidationSchema),
/* harmony export */   redisKeys: () => (/* binding */ redisKeys)
/* harmony export */ });
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(213);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(joi__WEBPACK_IMPORTED_MODULE_1__);


const redisConfigValidationSchema = joi__WEBPACK_IMPORTED_MODULE_1__.object({
    REDIS_HOST: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('localhost'),
    REDIS_PORT: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(6379),
    REDIS_PASSWORD: joi__WEBPACK_IMPORTED_MODULE_1__.string().allow('').optional(),
    REDIS_DB: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(0),
    REDIS_KEY_PREFIX: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('prm:'),
    REDIS_CONNECTION_TIMEOUT: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(10000),
    REDIS_MAX_RETRIES: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(10),
    REDIS_RETRY_MAX_DELAY: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(5000),
    REDIS_CACHE_TTL: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(3600),
    REDIS_CACHE_MAX: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(10000),
    REDIS_CLUSTER_ENABLED: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
    REDIS_CLUSTER_NODES: joi__WEBPACK_IMPORTED_MODULE_1__.string().when('REDIS_CLUSTER_ENABLED', {
        is: true,
        then: joi__WEBPACK_IMPORTED_MODULE_1__.required(),
    }),
});
const redisConfig = (0,_nestjs_config__WEBPACK_IMPORTED_MODULE_0__.registerAs)('redis', () => {
    var _a;
    return ({
        host: process.env.REDIS_HOST || 'localhost',
        port: parseInt(process.env.REDIS_PORT || '6379', 10),
        password: process.env.REDIS_PASSWORD,
        db: parseInt(process.env.REDIS_DB || '0', 10),
        keyPrefix: process.env.REDIS_KEY_PREFIX || 'prm:',
        connectTimeout: parseInt(process.env.REDIS_CONNECTION_TIMEOUT || '10000', 10),
        maxRetriesPerRequest: parseInt(process.env.REDIS_MAX_RETRIES || '10', 10),
        retryStrategy: {
            retries: parseInt(process.env.REDIS_MAX_RETRIES || '10', 10),
            maxDelay: parseInt(process.env.REDIS_RETRY_MAX_DELAY || '5000', 10),
        },
        cache: {
            cacheTtl: parseInt(process.env.REDIS_CACHE_TTL || '3600', 10),
            max: parseInt(process.env.REDIS_CACHE_MAX || '10000', 10),
        },
        cluster: {
            enabled: process.env.REDIS_CLUSTER_ENABLED === 'true',
            nodes: (_a = process.env.REDIS_CLUSTER_NODES) === null || _a === void 0 ? void 0 : _a.split(','),
        },
    });
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (redisConfig);
const getRedisConfig = () => {
    return redisConfig();
};
const getRedisOptions = () => {
    const config = getRedisConfig();
    return {
        host: config.host,
        port: config.port,
        password: config.password,
        db: config.db,
        keyPrefix: config.keyPrefix,
        retryStrategy: (times) => {
            if (times > config.retryStrategy.retries) {
                return null;
            }
            return Math.min(times * 1000, config.retryStrategy.maxDelay);
        },
        maxRetriesPerRequest: config.maxRetriesPerRequest,
        connectTimeout: config.connectTimeout,
    };
};
const getCacheConfig = () => {
    const config = getRedisConfig();
    const redisOptions = getRedisOptions();
    return {
        store: 'redis',
        host: redisOptions.host || 'localhost',
        port: redisOptions.port || 6379,
        password: redisOptions.password,
        db: redisOptions.db || 0,
        keyPrefix: redisOptions.keyPrefix || '',
        max: config.cache.max,
        ttlSeconds: config.cache.cacheTtl,
    };
};
const redisKeys = {
    userSession: (userId) => `session:${userId}`,
    refreshToken: (tokenId) => `refresh:${tokenId}`,
    userPermissions: (userId) => `permissions:${userId}`,
    rateLimit: (key) => `ratelimit:${key}`,
    cache: (key) => `cache:${key}`,
    lock: (key) => `lock:${key}`,
};


/***/ }),
/* 216 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   emailTemplates: () => (/* binding */ emailTemplates),
/* harmony export */   getMailConfig: () => (/* binding */ getMailConfig),
/* harmony export */   mailConfigValidationSchema: () => (/* binding */ mailConfigValidationSchema),
/* harmony export */   mailerConfig: () => (/* binding */ mailerConfig)
/* harmony export */ });
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(213);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(joi__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_modules_mailer_dist_adapters_handlebars_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(217);
/* harmony import */ var _nestjs_modules_mailer_dist_adapters_handlebars_adapter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_modules_mailer_dist_adapters_handlebars_adapter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(110);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);




const mailConfigValidationSchema = joi__WEBPACK_IMPORTED_MODULE_1__.object({
    MAIL_HOST: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    MAIL_PORT: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(587),
    MAIL_SECURE: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
    MAIL_USER: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    MAIL_PASS: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    MAIL_FROM: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    MAIL_FROM_NAME: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('PRM System'),
    MAIL_TEMPLATE_DIR: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('src/templates/email'),
    MAIL_QUEUE_ENABLED: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(true),
    MAIL_RETRY_ATTEMPTS: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(3),
    MAIL_RETRY_DELAY: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(1000),
    MAIL_CONCURRENCY: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(5),
    MAIL_RATE_LIMIT_ENABLED: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(true),
    MAIL_RATE_LIMIT_PER_HOUR: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(100),
});
const mailConfig = (0,_nestjs_config__WEBPACK_IMPORTED_MODULE_0__.registerAs)('mail', () => ({
    host: process.env.MAIL_HOST,
    port: parseInt(process.env.MAIL_PORT || '587', 10),
    secure: process.env.MAIL_SECURE === 'true',
    auth: {
        user: process.env.MAIL_USER,
        pass: process.env.MAIL_PASS,
    },
    defaults: {
        from: `"${process.env.MAIL_FROM_NAME || 'PRM System'}" <${process.env.MAIL_FROM}>`,
    },
    template: {
        dir: process.env.MAIL_TEMPLATE_DIR || (0,path__WEBPACK_IMPORTED_MODULE_3__.join)(__dirname, '..', 'templates', 'email'),
        adapter: new _nestjs_modules_mailer_dist_adapters_handlebars_adapter__WEBPACK_IMPORTED_MODULE_2__.HandlebarsAdapter(),
        options: {
            strict: true,
        },
    },
    queueing: {
        enabled: process.env.MAIL_QUEUE_ENABLED === 'true',
        retryAttempts: parseInt(process.env.MAIL_RETRY_ATTEMPTS || '3', 10),
        retryDelay: parseInt(process.env.MAIL_RETRY_DELAY || '1000', 10),
        concurrency: parseInt(process.env.MAIL_CONCURRENCY || '5', 10),
    },
    rateLimit: {
        enabled: process.env.MAIL_RATE_LIMIT_ENABLED === 'true',
        maxPerHour: parseInt(process.env.MAIL_RATE_LIMIT_PER_HOUR || '100', 10),
    },
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mailConfig);
const getMailConfig = () => {
    return mailConfig();
};
const mailerConfig = () => {
    const config = getMailConfig();
    return {
        transport: {
            host: config.host,
            port: config.port,
            secure: config.secure,
            auth: {
                user: config.auth.user,
                pass: config.auth.pass,
            },
        },
        defaults: config.defaults,
        template: config.template,
        options: {
            partials: {
                dir: (0,path__WEBPACK_IMPORTED_MODULE_3__.join)(config.template.dir, 'partials'),
                options: {
                    strict: true,
                },
            },
        },
    };
};
const emailTemplates = {
    welcome: (name) => ({
        subject: 'Welcome to PRM System',
        template: 'welcome',
        context: { name },
    }),
    resetPassword: (token) => ({
        subject: 'Reset Your Password',
        template: 'reset-password',
        context: { token },
    }),
    appointmentReminder: (appointment) => ({
        subject: 'Appointment Reminder',
        template: 'appointment-reminder',
        context: { appointment },
    }),
    appointmentConfirmation: (appointment) => ({
        subject: 'Appointment Confirmation',
        template: 'appointment-confirmation',
        context: { appointment },
    }),
};


/***/ }),
/* 217 */
/***/ ((module) => {

module.exports = require("@nestjs-modules/mailer/dist/adapters/handlebars.adapter");

/***/ }),
/* 218 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   jwtConfigValidationSchema: () => (/* binding */ jwtConfigValidationSchema),
/* harmony export */   jwtModuleConfig: () => (/* binding */ jwtModuleConfig)
/* harmony export */ });
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(213);
/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(joi__WEBPACK_IMPORTED_MODULE_1__);


const jwtConfigValidationSchema = joi__WEBPACK_IMPORTED_MODULE_1__.object({
    JWT_SECRET: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),
    JWT_ACCESS_TOKEN_EXP: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(3600),
    JWT_ACCESS_TOKEN_ALG: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('HS256'),
    JWT_ACCESS_TOKEN_ISSUER: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('prm-api'),
    JWT_ACCESS_TOKEN_AUDIENCE: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('prm-client'),
    JWT_REFRESH_TOKEN_EXP: joi__WEBPACK_IMPORTED_MODULE_1__.number().default(604800),
    JWT_REFRESH_TOKEN_ALG: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('HS256'),
    JWT_REFRESH_TOKEN_ISSUER: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('prm-api'),
    JWT_REFRESH_TOKEN_AUDIENCE: joi__WEBPACK_IMPORTED_MODULE_1__.string().default('prm-client'),
    JWT_IGNORE_EXPIRATION: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
    JWT_IGNORE_NOT_BEFORE: joi__WEBPACK_IMPORTED_MODULE_1__.boolean().default(false),
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_nestjs_config__WEBPACK_IMPORTED_MODULE_0__.registerAs)('jwt', () => ({
    secret: process.env.JWT_SECRET,
    accessToken: {
        expiresIn: parseInt(process.env.JWT_ACCESS_TOKEN_EXP || '3600', 10),
        algorithm: process.env.JWT_ACCESS_TOKEN_ALG || 'HS256',
        issuer: process.env.JWT_ACCESS_TOKEN_ISSUER || 'prm-api',
        audience: process.env.JWT_ACCESS_TOKEN_AUDIENCE || 'prm-client',
    },
    refreshToken: {
        expiresIn: parseInt(process.env.JWT_REFRESH_TOKEN_EXP || '604800', 10),
        algorithm: process.env.JWT_REFRESH_TOKEN_ALG || 'HS256',
        issuer: process.env.JWT_REFRESH_TOKEN_ISSUER || 'prm-api',
        audience: process.env.JWT_REFRESH_TOKEN_AUDIENCE || 'prm-client',
    },
    verifyOptions: {
        ignoreExpiration: process.env.JWT_IGNORE_EXPIRATION === 'true',
        ignoreNotBefore: process.env.JWT_IGNORE_NOT_BEFORE === 'true',
    },
})));
const jwtModuleConfig = {
    secret: process.env.JWT_SECRET,
    signOptions: {
        expiresIn: process.env.JWT_ACCESS_TOKEN_EXP || '1h',
        algorithm: process.env.JWT_ACCESS_TOKEN_ALG || 'HS256',
        issuer: process.env.JWT_ACCESS_TOKEN_ISSUER || 'prm-api',
        audience: process.env.JWT_ACCESS_TOKEN_AUDIENCE || 'prm-client',
    },
    verifyOptions: {
        ignoreExpiration: process.env.JWT_IGNORE_EXPIRATION === 'true',
        ignoreNotBefore: process.env.JWT_IGNORE_NOT_BEFORE === 'true',
    },
};


/***/ }),
/* 219 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HttpExceptionFilter: () => (/* binding */ HttpExceptionFilter)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);
/* harmony import */ var typeorm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(typeorm__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var HttpExceptionFilter_1;


let HttpExceptionFilter = HttpExceptionFilter_1 = class HttpExceptionFilter {
    constructor() {
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(HttpExceptionFilter_1.name);
    }
    catch(exception, host) {
        const ctx = host.switchToHttp();
        const response = ctx.getResponse();
        const request = ctx.getRequest();
        let status = _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.INTERNAL_SERVER_ERROR;
        let message = 'Internal server error';
        let error = 'Internal Server Error';
        if (exception instanceof _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpException) {
            status = exception.getStatus();
            const errorResponse = exception.getResponse();
            if (typeof errorResponse === 'object' && 'message' in errorResponse) {
                message = errorResponse.message;
                error = errorResponse.error || this.getErrorName(status);
            }
            else {
                message = exception.message;
                error = this.getErrorName(status);
            }
        }
        else if (exception instanceof typeorm__WEBPACK_IMPORTED_MODULE_1__.QueryFailedError) {
            status = _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.BAD_REQUEST;
            message = 'Database operation failed';
            error = 'Database Error';
            if (exception.message.includes('duplicate key')) {
                message = 'A record with this value already exists';
                error = 'Duplicate Entry';
            }
        }
        else if (exception instanceof Error) {
            message = exception.message;
        }
        const errorResponse = {
            statusCode: status,
            message,
            error,
            path: request.url,
            timestamp: new Date().toISOString(),
            method: request.method,
            correlationId: request.headers['x-correlation-id'],
        };
        this.logError(errorResponse, exception);
        response
            .status(status)
            .json(errorResponse);
    }
    getErrorName(status) {
        switch (status) {
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.BAD_REQUEST:
                return 'Bad Request';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.UNAUTHORIZED:
                return 'Unauthorized';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.FORBIDDEN:
                return 'Forbidden';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.NOT_FOUND:
                return 'Not Found';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.CONFLICT:
                return 'Conflict';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.UNPROCESSABLE_ENTITY:
                return 'Unprocessable Entity';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.TOO_MANY_REQUESTS:
                return 'Too Many Requests';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.INTERNAL_SERVER_ERROR:
                return 'Internal Server Error';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.BAD_GATEWAY:
                return 'Bad Gateway';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.SERVICE_UNAVAILABLE:
                return 'Service Unavailable';
            default:
                return 'Error';
        }
    }
    logError(errorResponse, exception) {
        const logMessage = Object.assign(Object.assign({}, errorResponse), { stack: exception instanceof Error ? exception.stack : undefined });
        if (errorResponse.statusCode >= 500) {
            this.logger.error(JSON.stringify(logMessage));
        }
        else {
            this.logger.warn(JSON.stringify(logMessage));
        }
    }
};
HttpExceptionFilter = HttpExceptionFilter_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Catch)()
], HttpExceptionFilter);



/***/ }),
/* 220 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TransformInterceptor: () => (/* binding */ TransformInterceptor)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(221);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);
/* harmony import */ var class_transformer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(class_transformer__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};



let TransformInterceptor = class TransformInterceptor {
    intercept(context, next) {
        const request = context.switchToHttp().getRequest();
        const response = context.switchToHttp().getResponse();
        const status = response.statusCode || _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.OK;
        return next.handle().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)(data => {
            if (data === null || data === undefined) {
                return this.buildResponse(null, status, request);
            }
            const transformedData = this.transformData(data);
            if (this.isPaginatedResponse(transformedData)) {
                return this.buildPaginatedResponse(transformedData, status, request);
            }
            return this.buildResponse(transformedData, status, request);
        }));
    }
    buildResponse(data, status, request, paginationMeta) {
        return {
            statusCode: status,
            message: this.getStatusMessage(status),
            data,
            metadata: Object.assign({ timestamp: new Date().toISOString(), path: request.url, version: process.env.API_VERSION || '1.0' }, (paginationMeta && { pagination: paginationMeta })),
        };
    }
    buildPaginatedResponse(data, status, request) {
        const { items } = data, paginationMeta = __rest(data, ["items"]);
        return this.buildResponse(items, status, request, paginationMeta);
    }
    transformData(data) {
        if (data && typeof data === 'object') {
            return (0,class_transformer__WEBPACK_IMPORTED_MODULE_2__.classToPlain)(data, {
                excludePrefixes: ['_'],
                enableCircularCheck: true,
            });
        }
        return data;
    }
    isPaginatedResponse(data) {
        return (data &&
            Array.isArray(data.items) &&
            typeof data.page === 'number' &&
            typeof data.limit === 'number' &&
            typeof data.total === 'number' &&
            typeof data.totalPages === 'number');
    }
    getStatusMessage(status) {
        switch (status) {
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.OK:
                return 'Success';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.CREATED:
                return 'Created successfully';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.ACCEPTED:
                return 'Request accepted';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.NO_CONTENT:
                return 'No content';
            case _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.PARTIAL_CONTENT:
                return 'Partial content';
            default:
                return 'Operation completed';
        }
    }
};
TransformInterceptor = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)()
], TransformInterceptor);



/***/ }),
/* 221 */
/***/ ((module) => {

module.exports = require("rxjs/operators");

/***/ }),
/* 222 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SwaggerService: () => (/* binding */ SwaggerService)
/* harmony export */ });
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);
/* harmony import */ var _nestjs_swagger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _schemas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(223);
/* harmony import */ var _paths__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(226);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_4__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SwaggerService_1;





let SwaggerService = SwaggerService_1 = class SwaggerService {
    constructor() {
        this.logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Logger(SwaggerService_1.name);
    }
    setup(app) {
        try {
            const configService = app.get(_nestjs_config__WEBPACK_IMPORTED_MODULE_4__.ConfigService);
            const isProduction = configService.get('app.nodeEnv') === 'production';
            const docsEnabled = configService.get('app.docsEnabled');
            if (isProduction && !docsEnabled) {
                this.logger.log('Swagger documentation disabled in production');
                return;
            }
            this.logger.log('Setting up manual Swagger documentation...');
            const config = new _nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__.DocumentBuilder()
                .setTitle('Patient Relationship Manager API')
                .setDescription('API Documentation for PRM')
                .setVersion('1.0')
                .addBearerAuth()
                .addTag('Auth', 'Authentication endpoints')
                .addTag('Users', 'User management endpoints')
                .addTag('Organizations', 'Organization management endpoints')
                .addTag('Contacts', 'Contact management endpoints')
                .addTag('Appointments', 'Appointment scheduling endpoints')
                .addTag('Tickets', 'Support ticket endpoints')
                .addTag('Messages', 'Messaging functionality endpoints')
                .addTag('Notifications', 'Notification management endpoints')
                .build();
            const document = Object.assign(Object.assign({}, config), { paths: (0,_paths__WEBPACK_IMPORTED_MODULE_3__.getAllPaths)(), components: {
                    schemas: (0,_schemas__WEBPACK_IMPORTED_MODULE_2__.getAllSchemas)(),
                    securitySchemes: {
                        bearerAuth: {
                            type: 'http',
                            scheme: 'bearer',
                            bearerFormat: 'JWT'
                        }
                    }
                } });
            _nestjs_swagger__WEBPACK_IMPORTED_MODULE_1__.SwaggerModule.setup('api-docs', app, document);
            this.logger.log('Manual Swagger documentation setup at /api-docs path');
        }
        catch (error) {
            this.logger.error(`Failed to set up Swagger: ${error.message}`);
            this.logger.error(error.stack);
        }
    }
};
SwaggerService = SwaggerService_1 = __decorate([
    (0,_nestjs_common__WEBPACK_IMPORTED_MODULE_0__.Injectable)()
], SwaggerService);



/***/ }),
/* 223 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAllSchemas: () => (/* binding */ getAllSchemas)
/* harmony export */ });
/* harmony import */ var _user_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(224);
/* harmony import */ var _auth_schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(225);


function getAllSchemas() {
    return Object.assign(Object.assign({}, _user_schema__WEBPACK_IMPORTED_MODULE_0__.userSchemas), _auth_schema__WEBPACK_IMPORTED_MODULE_1__.authSchemas);
}


/***/ }),
/* 224 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   userSchemas: () => (/* binding */ userSchemas)
/* harmony export */ });
const userSchemas = {
    SimpleUserDto: {
        type: 'object',
        properties: {
            id: { type: 'string', format: 'uuid' },
            email: { type: 'string', format: 'email' },
            firstName: { type: 'string' },
            lastName: { type: 'string' },
            role: {
                type: 'string',
                enum: ['ADMIN', 'DOCTOR', 'RECEPTIONIST', 'STAFF']
            },
            isActive: { type: 'boolean' },
            createdAt: { type: 'string', format: 'date-time' }
        }
    },
    CreateUserDto: {
        type: 'object',
        properties: {
            email: { type: 'string', format: 'email' },
            firstName: { type: 'string' },
            lastName: { type: 'string' },
            password: { type: 'string', format: 'password' },
            role: {
                type: 'string',
                enum: ['ADMIN', 'DOCTOR', 'RECEPTIONIST', 'STAFF']
            }
        },
        required: ['email', 'firstName', 'lastName', 'password', 'role']
    },
    UpdateUserDto: {
        type: 'object',
        properties: {
            firstName: { type: 'string' },
            lastName: { type: 'string' },
            role: {
                type: 'string',
                enum: ['ADMIN', 'DOCTOR', 'RECEPTIONIST', 'STAFF']
            },
            isActive: { type: 'boolean' }
        }
    }
};


/***/ }),
/* 225 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   authSchemas: () => (/* binding */ authSchemas)
/* harmony export */ });
const authSchemas = {
    LoginDto: {
        type: 'object',
        properties: {
            email: { type: 'string', format: 'email' },
            password: { type: 'string', format: 'password' }
        },
        required: ['email', 'password']
    },
    AuthResponseDto: {
        type: 'object',
        properties: {
            accessToken: { type: 'string' },
            refreshToken: { type: 'string' },
            user: { $ref: '#/components/schemas/SimpleUserDto' }
        }
    },
    RefreshTokenDto: {
        type: 'object',
        properties: {
            refreshToken: { type: 'string' }
        },
        required: ['refreshToken']
    }
};


/***/ }),
/* 226 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAllPaths: () => (/* binding */ getAllPaths)
/* harmony export */ });
/* harmony import */ var _auth_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(227);
/* harmony import */ var _user_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(228);


function getAllPaths() {
    return Object.assign(Object.assign({}, _auth_path__WEBPACK_IMPORTED_MODULE_0__.authPaths), _user_path__WEBPACK_IMPORTED_MODULE_1__.userPaths);
}


/***/ }),
/* 227 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   authPaths: () => (/* binding */ authPaths)
/* harmony export */ });
const authPaths = {
    '/auth/login': {
        post: {
            tags: ['Auth'],
            summary: 'Login to the system',
            requestBody: {
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/LoginDto'
                        }
                    }
                }
            },
            responses: {
                '200': {
                    description: 'Login successful',
                    content: {
                        'application/json': {
                            schema: {
                                $ref: '#/components/schemas/AuthResponseDto'
                            }
                        }
                    }
                },
                '401': {
                    description: 'Invalid credentials'
                }
            }
        }
    },
    '/auth/refresh-token': {
        post: {
            tags: ['Auth'],
            summary: 'Refresh access token',
            requestBody: {
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/RefreshTokenDto'
                        }
                    }
                }
            },
            responses: {
                '200': {
                    description: 'Token refreshed successfully',
                    content: {
                        'application/json': {
                            schema: {
                                $ref: '#/components/schemas/AuthResponseDto'
                            }
                        }
                    }
                },
                '401': {
                    description: 'Invalid refresh token'
                }
            }
        }
    },
    '/auth/me': {
        get: {
            tags: ['Auth'],
            summary: 'Get current user information',
            security: [{ bearerAuth: [] }],
            responses: {
                '200': {
                    description: 'Current user information',
                    content: {
                        'application/json': {
                            schema: {
                                $ref: '#/components/schemas/SimpleUserDto'
                            }
                        }
                    }
                },
                '401': {
                    description: 'Unauthorized'
                }
            }
        }
    }
};


/***/ }),
/* 228 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   userPaths: () => (/* binding */ userPaths)
/* harmony export */ });
const userPaths = {
    '/users': {
        get: {
            tags: ['Users'],
            summary: 'Get all users',
            security: [{ bearerAuth: [] }],
            parameters: [
                {
                    name: 'page',
                    in: 'query',
                    required: false,
                    schema: { type: 'integer', default: 1 }
                },
                {
                    name: 'limit',
                    in: 'query',
                    required: false,
                    schema: { type: 'integer', default: 10 }
                },
                {
                    name: 'search',
                    in: 'query',
                    required: false,
                    schema: { type: 'string' }
                }
            ],
            responses: {
                '200': {
                    description: 'Return all users',
                    content: {
                        'application/json': {
                            schema: {
                                type: 'array',
                                items: {
                                    $ref: '#/components/schemas/SimpleUserDto'
                                }
                            }
                        }
                    }
                },
                '401': {
                    description: 'Unauthorized'
                },
                '403': {
                    description: 'Forbidden - requires ADMIN role'
                }
            }
        },
        post: {
            tags: ['Users'],
            summary: 'Create new user',
            security: [{ bearerAuth: [] }],
            requestBody: {
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/CreateUserDto'
                        }
                    }
                }
            },
            responses: {
                '201': {
                    description: 'User created successfully',
                    content: {
                        'application/json': {
                            schema: {
                                $ref: '#/components/schemas/SimpleUserDto'
                            }
                        }
                    }
                },
                '400': {
                    description: 'Bad Request - validation failed'
                },
                '401': {
                    description: 'Unauthorized'
                },
                '403': {
                    description: 'Forbidden - requires ADMIN role'
                }
            }
        }
    },
    '/users/{id}': {
        get: {
            tags: ['Users'],
            summary: 'Get user by ID',
            security: [{ bearerAuth: [] }],
            parameters: [
                {
                    name: 'id',
                    in: 'path',
                    required: true,
                    schema: { type: 'string', format: 'uuid' }
                }
            ],
            responses: {
                '200': {
                    description: 'Returns user details',
                    content: {
                        'application/json': {
                            schema: {
                                $ref: '#/components/schemas/SimpleUserDto'
                            }
                        }
                    }
                },
                '401': {
                    description: 'Unauthorized'
                },
                '403': {
                    description: 'Forbidden - requires ADMIN role'
                },
                '404': {
                    description: 'User not found'
                }
            }
        },
        put: {
            tags: ['Users'],
            summary: 'Update user',
            security: [{ bearerAuth: [] }],
            parameters: [
                {
                    name: 'id',
                    in: 'path',
                    required: true,
                    schema: { type: 'string', format: 'uuid' }
                }
            ],
            requestBody: {
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/UpdateUserDto'
                        }
                    }
                }
            },
            responses: {
                '200': {
                    description: 'User updated successfully',
                    content: {
                        'application/json': {
                            schema: {
                                $ref: '#/components/schemas/SimpleUserDto'
                            }
                        }
                    }
                },
                '400': {
                    description: 'Bad Request - validation failed'
                },
                '401': {
                    description: 'Unauthorized'
                },
                '403': {
                    description: 'Forbidden - requires ADMIN role'
                },
                '404': {
                    description: 'User not found'
                }
            }
        },
        delete: {
            tags: ['Users'],
            summary: 'Delete user',
            security: [{ bearerAuth: [] }],
            parameters: [
                {
                    name: 'id',
                    in: 'path',
                    required: true,
                    schema: { type: 'string', format: 'uuid' }
                }
            ],
            responses: {
                '204': {
                    description: 'User deleted successfully'
                },
                '400': {
                    description: 'Bad Request - cannot delete last admin'
                },
                '401': {
                    description: 'Unauthorized'
                },
                '403': {
                    description: 'Forbidden - requires ADMIN role'
                },
                '404': {
                    description: 'User not found'
                }
            }
        }
    }
};


/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _build_workarounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _nestjs_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nestjs_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var _nestjs_common__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nestjs_common__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _nestjs_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nestjs_config__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _app_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
/* harmony import */ var _swagger_swagger_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(222);






async function bootstrap() {
    const logger = new _nestjs_common__WEBPACK_IMPORTED_MODULE_2__.Logger('Bootstrap');
    try {
        const app = await _nestjs_core__WEBPACK_IMPORTED_MODULE_1__.NestFactory.create(_app_module__WEBPACK_IMPORTED_MODULE_4__.AppModule);
        const configService = app.get(_nestjs_config__WEBPACK_IMPORTED_MODULE_3__.ConfigService);
        const swaggerService = new _swagger_swagger_service__WEBPACK_IMPORTED_MODULE_5__.SwaggerService();
        app.enableCors({
            origin: configService.get('app.cors.origins'),
            methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
            allowedHeaders: ['Content-Type', 'Authorization', 'Accept'],
            credentials: true,
        });
        app.useGlobalPipes(new _nestjs_common__WEBPACK_IMPORTED_MODULE_2__.ValidationPipe({
            whitelist: true,
            transform: true,
            forbidNonWhitelisted: true,
            transformOptions: {
                enableImplicitConversion: true,
            },
            validationError: { target: false, value: false },
        }));
        swaggerService.setup(app);
        const port = configService.get('app.port') || 3000;
        await app.listen(port);
        logger.log(`Application is running on: http://localhost:${port}`);
        logger.log(`API documentation available at: http://localhost:${port}/api-docs`);
        return app;
    }
    catch (error) {
        logger.error('Failed to initialize application:');
        logger.error(error);
        process.exit(1);
    }
}
bootstrap().catch(err => {
    console.error('Critical error during application bootstrap:', err);
    process.exit(1);
});

})();

/******/ })()
;